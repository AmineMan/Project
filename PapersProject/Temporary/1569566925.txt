Creator:         XeTeX output 2012.05.17:1743
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Thu May 17 17:43:44 2012
ModDate:        Tue Jun 19 12:54:21 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      295962 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569566925

Improved quantum hypergraph-product LDPC codes
Alexey A. Kovalev∗ and Leonid P. Pryadko†
Department of Physics & Astronomy, University of California, Riveside, California 92521
∗ Email:alexey.kovalev@ucr.edu
† Email:leonid.pryadko@ucr.edu

codes. The resulting factor of up to four improvement of the
code rate makes such codes competitive even at relatively
small block sizes.

Abstract—We suggest several techniques to improve the toric
codes and the ﬁnite-rate generalized toric codes (quantum
hypergraph-product codes) recently introduced by Tillich and
Z´ mor. For the usual toric codes, we introduce the rotated lattices
e
speciﬁed by two integer-valued periodicity vectors. These codes
include the checkerboard codes, and the family of minimal singlequbit-encoding toric codes with block length n = t2 +(t+1)2 and
distance d = 2t + 1, t = 1, 2, . . .. We also suggest several related
algebraic constructions which increase the rate of the existing
hypergraph-product codes by up to four times.

II. D EFINITIONS .
We consider binary quantum error correcting codes
⊗n
(QECCs) deﬁned on the complex Hilbert space H2 where
H2 is the complex Hilbert space of a single qubit α |0⟩ + β |1⟩
2
2
with α, β ∈ + and |α| + |β| = 1. Any operator acting on
such an n-qubit state can be represented as a combination of
Pauli operators which form the Pauli group Pn of size 22n+2
with the phase multiplier im :

I. I NTRODUCTION
Quantum error correction[1]–[3] made quantum computing
(QC) theoretically possible. However, high precision required
for error correction [4]–[9] combined with the large number
of auxiliary qubits necessary to implement it, have so far inhibited any practical realization beyond proof-of-the-principle
demonstrations[10]–[15].
For stabilizer codes, the error syndrome is obtained by
measuring the generators of the stabilizer group. The corresponding quantum measurements can be greatly simpliﬁed
(and also done in parallel) in low-density parity-check (LDPC)
codes which are specially designed to have stabilizer generators of small weight. Among LDPC codes, the toric (and
related surface) codes [5], [9], [16], [17] have the stabilizer
generators of smallest weight, w = 4, with the support on
neighboring sites of a two-dimensional lattice. These codes
have other nice properties which make them suitable for
quantum computations with relatively high error threshold.
Unfortunately, these code families have very low code rates
that scale as inverse square of the code distance.
Recently, Tillich and Z´ mor proposed a ﬁnite-rate generale
ization of toric codes[18]. The construction relates a quantum
code to a direct product of hypergraphs corresponding to two
classical binary codes. Generally, thus obtained LDPC codes
have ﬁnite rates and the distances that scale as a square root
of the block length. Unfortunately, despite ﬁnite asymptotic
rates, for smaller block length, the rates of the quantum codes
which can be obtained from the construction[18] are small.
In this work, we present a construction aimed to improve the
rates of both regular toric[16] and generalized toric codes[18].
For the toric codes, we introduce the rotated tori speciﬁed by
two integer-valued periodicity vectors. Such codes include the
checkerboard codes [17] (π/4-rotation), and the family [19] of
minimal single-qubit-encoding toric codes with block length
n = t2 + (t + 1)2 and distance d = 2t + 1, t = 1, 2, . . ..
For the generalized toric codes[18], we suggest an algebraic
construction equivalent to the π/4 rotation of the regular toric

Pn = im {I, X, Y, Z}⊗n , m = 0, . . . , 3 ,

(1)

where X, Y , and Z are the usual Pauli matrices and I is the
identity matrix. It is customary to map the Pauli operators, up
to a phase, to two binary strings, v, u ∈ {0, 1}⊗n [20],
′

U ≡ im X v Z u → (v, u),

(2)

v
v
u
u
v
u
where X v = X1 1 X2 2 . . . Xnn and Z u = Z1 1 Z2 2 . . . Zn n .
A product of two quantum operators corresponds to a sum
(mod 2) of the corresponding pairs (vi , ui ).
An [[n, k, d]] stabilizer code Q is a 2k -dimensional subspace
⊗n
of the Hilbert space H2 stabilized by an Abelian stabilizer
group S = ⟨G1 , . . . , Gn−k ⟩, − ̸∈ S [21]. Explicitly,

Q = {|ψ⟩ : S |ψ⟩ = |ψ⟩ , ∀S ∈ S }.

(3)

Each generator Gi ∈ S is mapped according to Eq. (2)
in order to obtain the binary check matrix H = (AX |AZ )
in which each row corresponds to a generator, with rows of
AX formed by v and rows of AZ formed by u vectors. For
generality, we assume that the matrix H may also contain
unimportant linearly dependent rows which are added after
the mapping has been done. The commutativity of stabilizer
generators corresponds to the following condition on the
binary matrices AX and AZ :
AX AT + AZ AT = 0 (mod 2).
Z
X

(4)

A more narrow set of Calderbank-Shor-Steane (CSS) codes
[22] contains codes whose stabilizer generators can be chosen
to contain products of only Pauli X or Pauli Z operators. For
these codes the parity check matrix can be chosen in the form:
)
(
0
GX
,
(5)
H=
GZ
0
where the commutativity condition simpliﬁes to GX GT = 0.
Z

1

The dimension of a quantum code is k = n − rank H; for
a CSS code this simpliﬁes to k = n − rank GX − rank GZ .
The distance d of the quantum code is given by the
minimum weight of an operator U which commutes with
all operators from the stabilizer S , but is not a part of the
stabilizer, U ̸∈ S . In terms of the binary vector pairs (a, b),
this is equivalent to a minimum weight of the bitwise OR (a|b)
of all pairs satisfying the symplectic orthogonality condition,
AX b + AZ a = 0,

plaquettes, and the operators Bi as products of Z operators
around the white plaquettes (see Fig. 2, Left). Now, the
checkerboard code with n = Lx Ly , where both Lx and Ly are
even, can be deﬁned by taking periodic boundary conditions on
the sides of a rectangle of size Lx ×Ly . The condition ensures
that we can maintain a consistent checkerboard pattern. Then,
the product of all Ai (or of all Bi ) gives identity. Thus, the
stabilizer is formed by n − 2 independent generators, which
again gives k = 2 as in the regular toric codes. The two sets of
logical operators are formed by the products of X operators
along the topologically non-trivial paths drawn through the
colored areas, and the products of Z operators along the
topologically non-trivial paths through the white areas (see
Fig. 2, Left). The distance of the code, d = min(Lx , Ly ),
corresponds to the shortest topologically non-trivial chain of
qubits, graphically, a horizontal or a vertical straight line.

(6)

which are not linear combinations of the rows of H.
III. T ORIC CODES AND ROTATED TORIC CODES
A. Canonical construction
We consider the toric codes[16] in the restricted sense, with
qubits located on the bonds of a square lattice Lξ × Lη , with
periodic boundary conditions∏
along the directions ξ and η. The
∏
stabilizer generators Ai ≡ j∈ i Xj and Bi ≡ j∈+i Zj
are formed as the products of Xj around each plaquette,
and Zj around each vertex (this deﬁnes a CSS code). The
corresponding block length is n = 2Lξ Lη , and there are rA =
rB = Lξ Lη − 1 independent generators of each kind, which
leaves us with the code of size k = n−rA −rB = 2. This code
is degenerate: the degeneracy group is formed by products
of the generators Ai , Bi ; its elements can be visualized as
(topologically trivial) loops drawn on the original lattice (in
the case of products of Ai ), or the dual lattice in the case of
products of Bi . The two sets of logical operators are formed
as the products of X (Z) operators along the topologically
non-trivial lines formed by the bonds of the original (dual)
lattice (see Fig. 1). The code distance d = min(Lξ , Lη ) is
given by the minimal weight of such operators.

Fig. 2. Left: Lattice representation of the checkerboard code [[16, 2, 4]].
Qubits are placed in the lattice vertices; dashed blue and red lines represent a
pair of logical operators as in Fig. 1. Right: same for the rotated checkerboard
code [[10, 2, 3]].

C. Checkerboard codes with arbitrary rotation
Compared to the regular toric codes, the checkerboard codes
use half as many qubits with the same k and distance. The
disadvantage is that the distance is always even. This latter
restriction can be lifted by introducing periodicity vectors
which are not necessarily parallel to the bonds of the lattice.
(Note that a similar trick was used in early small-cluster exact
diagonalization studies of the Hubbard model[23]).
Let us deﬁne two integer-valued periodicity vectors Li =
(ai , bi ), i = 1, 2, and identify all points on the lattice which
can be connected by a vector of the form m1 L1 + m2 L2 ,
with integer mi . The checkerboard pattern is preserved iff both
∥Li ∥1 ≡ |ai | + |bi | are even, i = 1, 2. Such a cluster contains
n = |L1 × L2 | = |a1 b2 − b1 a2 |

(7)

vertices, and, again, we have k = 2 as for the standard
checkerboard codes.
Since the qubits in the positions shifted by Li are the same,
it is easy to see that our code is identical to that on a cluster
with periodicity vectors, e.g., L1 , L1 + L2 , and, generally, a
cluster with periodicity vectors L′ = gij Lj , where the integeri
valued matrix gij has the determinant det g = ±1.
For a periodicity vector L = (a, b) with a + b even, the
shortest topologically non-trivial qubit chain has ∥L∥∞ ≡
max(|a|, |b|) operators which leads to the code distance:

Fig. 1.
(Color online) Lattice representing the canonical toric code
[[50, 2, 5]]. The generators Ai are formed by Pauli X generators around
a plaquette (blue square) while the generators Bi are formed by Pauli Z
generators around a vertex (red square). Dashed horizontal blue line and
vertical red line represent a pair of mutually conjugate logical operators
formed by the products of X and Z respectively. Shading corresponds to
an alternative checkerboard representation of the underlying lattice.

B. Checkerboard codes [17]
In the following, it will be convenient to consider a lattice
with qubits placed on the vertices. Then, if we color every
other plaquette to form a checkerboard pattern, we can deﬁne
the operators Ai as products of X operators around the colored

d(L1 , L2 ) = min ∥m1 L1 + m2 L2 ∥∞ .
m1 ,m2

2

(8)

Example 1. A family of near-optimal odd-distance checkerboard codes can be introduced by taking L1 = (2t + 1, 1),
L2 = (−1, 2t + 1), t = 1, 2, . . .. Such codes have the
parameters [[1 + (2t + 1)2 , 2, 2t + 1]]; explicitly: [[10, 2, 3]]
(illustrated in Fig. 2, Right), [[26, 2, 5]], [[50, 2, 7]], . . . .

Here each matrix is composed of two blocks constructed
as Kronecker products (denoted with “⊗”), and Ei and Ei ,
i = 1, 2, are unit matrices of dimensions given by ri and ni ,
respectively. The matrices GX and GZ , respectively, have r1 r2
and n1 n2 rows (not all of the rows are linearly independent),
and they both have n ≡ r2 n1 + r1 n2 columns, which gives
the block length of the quantum code. The commutativity
condition GX GT = 0 is obviously satisﬁed by Eq. (9) since
Z
the Kronecker product obeys (A ⊗ B)(C ⊗ D) = AC ⊗ BD.
Note that the construction (9) is somewhat similar to product codes introduced by Grassl and R¨ tteler[24]. The main
o
difference is that here the check matrix and not the generator
matrix is written in terms of direct products.
The parameters [[n, k, d]] of thus constructed quantum code
are determined by those of the four classical codes which
T
T
use the matrices H1 , H2 , H1 , and H2 as the parity-check
matrices. The corresponding parameters are introduced as

Example 2. The original toric codes are recovered by taking
Li along the diagonals, L1 = (Lξ , Lξ ), L2 = (−Lη , Lη ), so
that ∥Li ∥1 are always even, thus n = 2Lξ Lη , k = 2, and
d = min(Lξ , Lη ). For odd distances, taking Lξ = Lη = d,
we have the codes [[18, 2, 3]], [[50, 2, 5]], [[98, 2, 7]], . . . .
D. Non-bipartite rotated toric codes
We now construct a version of rotated toric codes on clusters
with at least one of the periodicity vectors Li violating the
checkerboard pattern, e.g., ∥L1 ∥1 odd. Since the checkerboard
pattern cannot be maintained, we deﬁne identical stabilizer
generators in a non-CSS form, with the stabilizer generators
Gi = ZXXZ on each plaquette given by the products of Z
operators along one diagonal, and X operators along the other
diagonal. With periodic boundary conditions, the product of
all Gi is an identity, and this is the only relation between these
operators on a non-bipartite cluster. Thus, here we have only
one encoded qubit, k = 1.
The operators Gi can be viewed as local Clifford (LC)
transformed Ai or Bi operators of the toric code. It is
easy to see that the logical operators have to correspond to
topologically non-trivial closed chains of qubits, as for the
bipartite case. However, in order to close the loop, we have to
take only the translation vectors with ∥L∥1 even. For example,
if ∥L1 ∥1 is odd and particularly small, the minimal chain could
wrap twice around the direction given by L1 . Since the two
turns could share some of the qubits, it is difﬁcult to come up
with a general expression for the distance.

CHi = [ni , ki , di ],

i = 1, 2,

(10)

where we use the convention [18] that the distance di (di ) = ∞
if ki (ki ) = 0. The matrices Hi are arbitrary, and are allowed
to have linearly-dependent rows and/or columns. As a result,
both ki = ni − rank Hi and ki = ni − rank Hi can be nonzero at the same time as the block length of the “transposed”
code CHT is given by the number of rows of Hi , ni = ri .
i
Speciﬁcally, for the hypergraph-product code (9), we have
n = r2 n1 + r1 n2 , k = 2k1 k2 − k1 s2 − k2 s1 with si = ni −
ri , i = 1, 2 (Theorem 7 from Ref. [18]), while the distance
d satisﬁes the conditions d ≥ min(d1 , d2 , d1 , d2 ) (Theorem
9 from Ref. [18]), and two upper bounds (Lemma 10 from
Ref. [18]): if k1 > 0 and k2 > 0, then d ≤ d1 ; if k2 > 0 and
k1 > 0, then d ≤ d2 .
These parameters can also be readily established from the
stabilizer generators in the form of Eq. (9). For example, the
dimension of the quantum code follows from

Example 3. Checkerboard-like codes can be obtained by
taking Lx or Ly odd. Smallest codes in this family correspond
to Lx = Ly = d; they have parameters [[d2 , 1, d]], where
d = 2t + 1. Explicitly, [[9, 1, 3]], [[25, 1, 5]], [[49, 1, 7]], . . . .

Proposition 1. The number of linearly independent rows in
matrices GX and GZ given by Eq. (9) is rank GX = r1 r2 −
k1 k2 and rank GZ = n1 n2 − k1 k2 .

Example 4. A family of smallest odd-distance rotated toric
codes [19] is obtained for L1 = (t+1, t), L2 = (−t, t+1), t =
1, 2, . . .. These codes have the parameters [[t2 +(t+1)2 , 1, 2t+
1]]. Explicitly, [[5, 1, 3]], [[13, 1, 5]], [[25, 1, 7]], [[41, 1, 9]], . . . .

Proof: The matrices GX and GZ have r1 r2 and n1 n2
rows, respectively. To count the number of linearly-dependent
rows in GX , we notice that the equations (aT ⊗ bT ) · (E2 ⊗
H1 ) = 0 and (aT ⊗ bT ) · (H2 ⊗ E1 ) = 0 are both satisﬁed
iff a ∈ CHT and b ∈ CHT , thus there are k1 k2 linear relations
2
1
between the rows of GX , and we are left with r1 r2 − k1 k2
linearly-independent rows. Similarly, there are n1 n2 − k1 k2
linearly independent rows in GZ .
To prove the lower bound on the distance, consider a vector
u such that GX · u = 0 and wgt(u) < d. We construct
′
′
a quantum code in the form (9) from the matrices H1 , H2
formed only by the columns of respective Hi , i = 1, 2, that are
involved in the product GX ·u. According to Proposition 1, the
reduced code has k = 0, so that the reduced u′ , G′ · u′ = 0,
X
has to be a linear combination of the rows of G′ . The rows of
Z
G′ are a subset of those of GZ , with some all-zero columns
Z

IV. G ENERALIZED TORIC AND CHECKERBOARD CODES
A. Algebraic representation of hypergraph-product codes
The ﬁnite-rate generalization[18] of the toric code relies
on hypergraph theory, with the square lattice generalized to a
product of hypergraphs (each corresponding to a parity check
matrix of a classical binary code). We ﬁrst recast the original
construction into an algebraic language.
Let H1 (dimensions r1 × n1 ) and H2 (dimensions r2 × n2 )
be two binary matrices. The associated (hypergraph-product)
quantum code[18] is a CSS code with the stabilizer generators
GX = (E2 ⊗ H1 , H2 ⊗ E1 ),
T
T
GZ = (H2 ⊗ E1 , E2 ⊗ H1 ).

CHT = [ni , ki , di ],
i

(9)

3

removed; thus the full vector u is also a linear combination
of the rows of GZ . Similarly, a vector v such that GZ · v = 0
and wgt(v) < d, is a linear combination of rows of GX .
The upper bound is established by considering vectors u ≡
(e ⊗ c, 0) with c ∈ CH1 , which requires k1 > 0. Vector e,
wgt(e) = 1, for which u is not a linear combination or rows
of GZ , exists only when k2 > 0. The other upper bound is
established by considering vectors (0, c ⊗ e) with c ∈ CH2 .

D. Code family from symmetric matrices.
T
If we have two symmetric parity-check matrices, Hi = Hi ,
i = 1, 2 [e.g., from Eq. (13)], the full hypergraph-product
code (9) can be transformed into a direct sum of two independent codes, each with the following non-CSS check matrix

H = (E2 ⊗ H1 |H2 ⊗ E1 ),

(14)

Theorem 1. A quantum code in Eq. (14) has parameters

In Ref. [18], only one large family of quantum codes based
on the hypergraph-product ansatz (9) is given. Namely, the
matrix H1 is taken as a full-rank parity matrix of a binary
LDPC code with parameters CH1 = [n1 , k1 , d1 ] (r1 = n1 −k1 ),
so that the transposed code has dimension zero, k1 = 0. The
T
second matrix is taken as H2 = H1 , so that CHT = CH1 .
2
Then Eq. (9) deﬁnes a quantum LDPC code with parameters

Qsym = [[n1 n2 , k1 k2 , min(d1 , d2 )]].

(15)

Thus, we can reduce by half both the blocklength and the
number of encoded qubits, i.e., keeping the rate of Eq. (12)
but doubling the relative distance.
For a cyclic LDPC code CH with a palindromic check
polynomial, xdeg h(x) h(1/x) = h(x), such that n − deg h(x)
is even, we can always construct a symmetric circulant matrix
H from the polynomial x[n−deg h(x)]/2 h(x).

(11)

where the weight of each row of GX , GZ equals to the sum
of the row-weight and the column-weight of H1 .

Example 7. If H1 = H2 are symmetric check matrices
of a cyclic [n1 , k1 , d1 ] code corresponding to a palindromic
polynomial h(x), then the quantum code has parameters
2
[[n2 , k1 , d1 ]]. In particular, for n1 = 17 and h(x) = 1 + x3 +
1
4
x + x5 + x6 + x9 we obtain [[289, 81, 5, w = 12]] code, and
for h(x) = 1 + x, we recover the non-bipartite checkerboard
codes from Example 3.

Example 5. Let H1 be a parity-check matrix of the repetition code [d, 1, d]. Then the quantum code has the parameters [2d2 − 2d + 1, 1, d]. Explicitly, [[13, 1, 3]], [[25, 1, 4]],
[[41, 1, 5]],. . . — these parameters are inferior compared to the
original toric code family, cf. Examples 3, 4.
C. Code family from square matrices
Instead of using full-rank parity-check matrices[18], let us
start with a pair of binary codes with square parity-check
matrices Hi , such that d1 = d1 , d2 = d2 . Then, automatically,
ki = ki = ni − rank Hi . The hypergraph-product ansatz (9)
gives the code with the parameters
Qsquare = [[2n1 n2 , 2k1 k2 , min(d1 , d2 )]].

i = 1, 2.

This gives the following

B. Original code family from full-rank matrices

2
Qorig = [[(n1 − k1 )2 + n2 , k1 , d1 ]],
1

T
Hi = Hi ,

E. Code family from two-tile codes
Finally, let us construct a generalization of the regular
“bipartite” checkerboard codes. We start with a pair of binary
codes with the parity check matrices of even size
( )
( )
( )
( )
p
H1 = 10 ⊗a1 + 01 ⊗b1 , H2 = a2 ⊗ 10 +b2 ⊗ 01 , (16)
01
10
01
10

(12)

Note that the rate R = k/n of this family is up to twice that
of the family originally suggested in Ref. [18], see Sec. IV-B.

constructed from the half-size matrices (“tiles”) ai , bi with the
distances of the classical codes CHi and CHT given by di and
(i )
( )
di , i = 1, 2, where the check matrix H2 = 10 ⊗a2 + 01 ⊗b2
01
10
p
is equivalent to H2 and can be rendered to the latter form by
row and column permutations. It is convenient to introduce
notation for the dimensionality of symmetric subspaces of C( )
H1
()
and CHp containing only words of type 1 ⊗ α1 and α2 ⊗ 1
1
1
2
s
as ki ≡ ni /2 − rank(ai + bi ), and for asymmetric subspaces
a
s
s
a
as ki ≡ ki − ki , i = 1, 2 (analogously we deﬁne ki and ki ).
We deﬁne half-size CSS matrices [cf. Eq. (9)]

Example 6. The standard toric codes are recovered by taking
for H2 = H1 the circulant matrix of a repetition code. The
code parameters are [[2d2 , 2, d1 ]], cf. Example 2.
1
We suggest two general ways to obtain suitable square
parity check matrices. First, if we start from an [n1 , k1 , d1 ]
LDPC code with the full-rank parity check matrix P , we can
construct the following symmetric matrix,
(
)
 P
sym
H1 =
,
(13)
PT 0

(1/2)

(1/2)

p
GX = (E2
⊗ H1 , H2 ⊗ E1
),
(1/2)
(1/2)
pT
T
GZ = (H2 ⊗ E1
, E2
⊗ H1 ),

so that the code CHsym is a [2n1 − k1 , k1 , d1 ] LDPC code.
1
Second construction assumes that CHi are cyclic LDPC
codes. The full circulant matrices Hi are constructed from coefﬁcients of check polynomials hi (x). The check polynomials
of the transposed code, hi (x) = hi (xni −1 ) mod(xni − 1), are
just the original check polynomials reversed, and the original
and transposed codes have the same parameters.

(1/2)

(17)

(1/2)

where the identity matrices Ei
, Ei
have dimensions
ri /2, ni /2, half-size compared to those in Eq. (9).
Proposition 2. The numbers of linearly independent rows in
s s
a a
matrices (17) are rank GX = r1 r2 /2 − k1 k2 − k1 k2 and
s s
a a
rank GZ = n1 n2 /2 − k1 k2 − k1 k2 .

4

Example 8. If H1 is the square parity matrix of a cyclic
[n1 , k1 , d1 ] code corresponding to the polynomial h(x) that
divides 1 − xn1 /2 and H2 = H1 then the quantum code has
2
parameters [[n2 , 2k1 , d1 ]]. For n1 = 30 and h(x) = 1 + x +
1
3
5
x + x we obtain [[900, 50, 14, w = 8]] code. For h(x) = 1 +
x, we recover the bipartite checkerboard codes from Sec. III-B.

Proof: To count the number of linearly-dependent rows
(1/2)
in GX , we notice that the equations υ T · (E2
⊗ H1 ) = 0
(1/2)
T
and υ · (H2 ⊗ E1
) = 0 are both satisﬁed for ansatz
( )
( )
α3
α4
υ = α1 ⊗
+ α2 ⊗
,
(18)
α4
α3
( )
if and only if either (i) α1 ̸= α2 , α3 ̸= α4 and α1 ∈ CHT ,
α2
2
( α3 )
()
′
′
′
∈ CHT or (ii) υ = α1 ⊗ 1 ⊗ α3 and α1 ∈ CaT +bT ,
α4
1
1
2
2
′
s s
a a
α3 ∈ CaT +bT , thus there are k1 k2 + k1 k2 linear relations
1
1
between the rows in GX , and we are left with rank GX =
s s
a a
r1 r2 /2 − k1 k2 − k1 k2 linearly-independent rows. Similarly,
s s
a a
we prove that rank GZ = n1 n2 /2 − k1 k2 − k1 k2 .

V. C ONCLUSIONS
We suggested several simple techniques to improve existing
quantum LDPC codes, toric codes, and generalized toric codes
with asymptotically ﬁnite rate (quantum hypergraph-product
codes[18]). In the latter case we increased the rate of the code
family originally proposed in Ref. [18] by up to four times.

Theorem 2. A quantum CSS code in Eqs. (16) and (17) has
the parameters:
n = (n1 r2 + n2 r1 )/2,
s s
a a
k = 2k1 k2 + 2k1 k2 − k1 s2 /2 − k2 s1 /2,
d ≥ min(d1 /2, d2 /2, d1 /2, d2 /2),

ACKNOWLEDGMENT
We are grateful to I. Dumer and M. Grassl for multiple
helpful discussions. This work was supported in part by the
U.S. Army Research Ofﬁce under Grant No. W911NF-11-10027, and by the NSF under Grant No. 1018935.

(19)

where si = ni − ri , i = 1, 2. In addition, for k1 > 0 and
k2 > 0 the upper bound d ≤ d1 exists and for k2 > 0 and
k1 > 0 the upper bound d ≤ d2 exists.

R EFERENCES
[1] P. W. Shor, Phys. Rev. A, vol. 52, p. R2493, 1995.
[2] E. Knill and R. Laﬂamme, Phys. Rev. A, vol. 55, pp. 900–911, 1997.
[3] C. Bennett, D. DiVincenzo, J. Smolin, and W. Wootters, Phys. Rev. A,
vol. 54, p. 3824, 1996.
[4] E. Knill, R. Laﬂamme, and W. H. Zurek, Science, vol. 279, p. 342,
1998.
[5] E. Dennis, A. Kitaev, A. Landahl, and J. Preskill, J. Math. Phys.,
vol. 43, p. 4452, 2002.
[6] A. M. Steane, Phys. Rev. A, vol. 68, p. 042322, 2003.
[7] A. G. Fowler, C. D. Hill, and L. C. L. Hollenberg, Phys. Rev. A,
vol. 69, p. 042314, 2004.
[8] A. G. Fowler, S. J. Devitt, and L. C. L. Hollenberg, Quant. Info.
Comput., vol. 4, p. 237, 2004, quant-ph/0402196.
[9] R. Raussendorf and J. Harrington, Phys. Rev. Lett., vol. 98, p. 190504,
2007.
[10] L. M. K. Vandersypen, M. Steffen, G. Breyta, C. S. Yannoni, R. Cleve,
and I. L. Chuang, Phys. Rev. Lett., vol. 85, pp. 5452–5455, 2000.
[11] L. M. K. Vandersypen, M. Steffen, G. Breyta, C. S. Yannoni, M. H.
Sherwood, and I. L. Chuang, Nature, vol. 414, pp. 883–887, 2001.
[12] S. Gulde, M. Riebe, G. P. T. Lancaster, C. Becher, J. Eschner, H. H¨ ffner,
a
F. Schmidt-Kaler, I. L. Chuang, and R. Blatt, Nature, vol. 421, pp. 48–
50, 2003.
[13] J. Chiaverini, D. Leibfried, T. Schaetz, M. D. Barrett, R. B. Blakestad,
J. Britton, W. M. Itano, J. D. Jost, E. Knill, C. Langer, R. Ozeri, and
D. J. Wineland, Nature, vol. 432, p. 602, 2004.
[14] A. Friedenauer, H. Schmitz, J. T. Glueckert, D. Porras, and T. Schaetz,
Nature Physics, 2008.
[15] K. Kim, M.-S. Chang, S. Korenblit, R. Islam, E. E. Edwards, J. K.
Freericks, G.-D. Lin, L.-M. Duan, and C. Monroe, Nature, vol. 465, pp.
590–593, 2010.
[16] A. Y. Kitaev, Ann. Phys., vol. 303, p. 2, 2003.
[17] H. Bombin and M. A. Martin-Delgado, Phys. Rev. A, vol. 76, no. 1, p.
012305, Jul 2007.
[18] J.-P. Tillich and G. Z´ mor, in Information Theory, 2009. ISIT 2009.
e
IEEE International Symposium on, 28 2009-july 3 2009, pp. 799 –803.
[19] A. A. Kovalev, I. Dumer, and L. P. Pryadko, Phys. Rev. A, vol. 84, p.
062319, Dec 2011.
[20] A. R. Calderbank, E. M. Rains, P. M. Shor, and N. J. A. Sloane, IEEE
Trans. Inf. Th., vol. 44, pp. 1369–1387, 1998.
[21] D. Gottesman, Ph.D. thesis, 1997, arXiv:quant-ph/9705052.
[22] A. R. Calderbank and P. W. Shor, Phys. Rev. A, vol. 54, no. 2, pp.
1098–1105, Aug 1996.
[23] E. Dagotto, R. Joynt, A. Moreo, S. Bacci, and E. Gagliano, Phys. Rev.
B, vol. 41, pp. 9049–9073, May 1990.
[24] M. Grassl and M. Rotteler, in Information Theory, 2005. ISIT 2005.
Proceedings. International Symposium on, sept. 2005, pp. 1018 –1022.

Proof: The number of encoded qubits k follows from
Proposition 2. The lower bound on the distance can be
established as for the original hypergraph-product codes in
′
Sec. IV-A, except now the reduced binary check matrices H1 ,
′
H2 should preserve the tiled form (16). Hence, for every
column involved in the product GX · u, we may need to
insert two columns into the reduced matrices; thus we need
wgt(u) < d/2 which reduces the lower bound on the distance.
The two upper bounds can be established by considering
vectors (e ⊗ c, 0) with c ∈ H1 and (0, c ⊗ e) with c ∈ H2 ,
exactly as for the hypergraph-product codes in Sec. IV-A.
Theorem 3. Suppose ai and bi , i = 1, 2 in Eq. (16) are
a
s
such that ki = 0, ki ̸= 0, ri = ni and binary codes with
generator matrices ai + bi and aT + bT are not distance 1
i
i
codes. Then the quantum code in Eq. (17) has parameters
[[n1 n2 , 2k1 k2 , min(d1 , d2 , d1 , d2 )]], cf. Eq. (12).
The proof is similar to the proof of Theorem 2. The
additional restrictions on the binary codes guarantee that a
vector u of weight less than d can only overlap with columns
of Hi in less than d positions even after the symmetric
counterparts are added.
If we start from distance-d LDPC codes with half size
(1/2)
square parity matrices Hi
[e.g., from Eq. (13)] then
(1/2)
ai = Hi
+ E (1/2) and bi = E (1/2) in Eq. (16) lead to
distance-2d code satisfying Theorem 3. Alternatively, one can
start with two cyclic LDPC codes with even blocksize ni ,
i = 1, 2, and the check polynomials hi (x) that divide xni /2 −1.
The corresponding square circulant parity-check matrices H1
p
and H2 (and H2 ) satisfy (16). The generator polynomials,
gi (x) = (xni − 1)/hi (x) = (xni /2 + 1) (xni /2 − 1)/hi (x),
(20)
a
and their reversed indicate that ki = 0.

5

