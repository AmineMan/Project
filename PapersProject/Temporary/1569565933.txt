Creator:         TeX output 2012.05.18:1121
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Fri May 18 11:21:14 2012
ModDate:        Tue Jun 19 12:56:11 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      265816 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569565933

On a Class of Three-Weight Codes with
Cryptographic Applications
Zihui Liu

Xin-Wen Wu

Department of Mathematics
Beijing Institute of Technology
Beijing 100081, China
Email: lzhui@bit.edu.cn

School of Information & Communication Technology
Grifﬁth University
Gold Coast, QLD 4222, Australia
Email: x.wu@grifﬁth.edu.au

approach will be given. In Section III, we will give a sufﬁcient
and necessary condition for a linear code to be a three-weight
code, and present the geometric construction of three-weight
codes. In Section IV, we will present the applications of threeweight codes, and will determine the minimal codewords of
a three-weight code. Concluding remarks will be given in
Section V.

Abstract—Linear codes with good algebraic structures have
been used in a number of cryptographic or information-security
applications, such as wire-tap channels of type II and secret
sharing schemes. For a code-based secret sharing scheme, the
problem of determining the minimal access sets is reduced to
ﬁnding the minimal codewords of the dual code. It is well known
that the latter problem is a hard problem for an arbitrary linear
code. Constant weight codes and two-weight codes have been
studied in the literature, for their applications to secret sharing
schemes. In this paper, we study a class of three-weight codes.
Making use of the ﬁnite projective geometry, we will give a
sufﬁcient and necessary condition for a linear code to be a threeweight code. The geometric approach that we will establish also
provides a convenient method to construct three-weight codes.
More importantly, we will determine the minimal codewords of
a three-weight code, making use of the geometric approach.

II. P RELIMINARIES
Let GF (q) be a ﬁnite ﬁeld with q elements. A kdimensional linear code, C, of length n is a k-dimensional
linear subspace of GF (q)n . Let D be any subcode of C. Deﬁne
C\D = {c | c ∈ C, c ∈ D}. Note that C\D is a block code, but
/
not necessarily a linear code.
Suppose C is a k-dimensional linear code over GF (q).
Let C1 be a k1 -dimensional linear subcode, and C2 be a k2 dimensional linear subcode, satisfying C1 ⊂ C2 . We give the
following deﬁnition.

I. I NTRODUCTION
Linear codes with good Hamming weight properties have
been used in many cryptographic or information-security areas, for examples, wire-tap channels of type II [7] and secret
sharing schemes [4], [8], [10]. For a secret sharing scheme
based on a linear code C, the problem of determining the
minimal access sets is reduced to the problem of ﬁnding the
minimal codewords of the dual code C ⊥ . However, determining minimal codewords is a hard problem for an arbitrary
linear code (see [1], for example). Constant weight codes and
two-weight codes have been studied [10], for their applications
to secret sharing schemes. On the other hand, only a few
classes of linear codes for which minimal codewords can be
completely determined have been known [4], [10].

Deﬁnition 2.1: C is called a relative three-weight code with
respect to C1 and C2 , provided that C1 \{0}, C2 \C1 and C\C2
are all constant weight codes. If these three constant weight
codes have weights d1 , d2 and d, respectively, we denote the
relative three-weight code C by C(d1 , d2 , d).
We can similarly study relative two-weight codes. Let D be
a subcode of C. We call C a relative two-weight code with
respect to D, provided that D\{0} and C\D are both constant
weight codes.
Relative three-weight codes are a generalization for both
constant weight codes and relative two-weight codes deﬁned
above. In fact, if d1 = d2 = d, then C(d1 , d2 , d) is a constant
weight code. If d1 = d2 , then C is a relative two-weight code
with respect to C2 . While if d2 = d, then C is a relative twoweight code with respect to C1 . In a later version of this paper
[6], we will also present results on relative two-weight codes.

Motivated by the work [5], in this paper we investigate
a class of three-weight codes, and study their applications
to wire-tap channels of type II as well as secret sharing
schemes. Making use of the ﬁnite projective geometry, we ﬁrst
establish a set of tools to characterize the Hamming weights
of codewords of a linear code. We then give a sufﬁcient and
necessary condition for a linear code to be a three-weight code.
Our geometric approach also provides a convenient method to
construct three-weight codes. More importantly, making use
of the geometric approach, we will determine the minimal
codewords of a three-weight code.

Finite projective geometry has been extensively applied in
coding theory [2], [3], [9]. In this paper, we will study relative
three-weight codes using ﬁnite projective geometry. Consider
C, a k-dimensional linear code over GF (q). Let C1 be a k1 dimensional linear subcode, and C2 be a k2 -dimensional linear
subcode, satisfying C1 ⊂ C2 . Let G be a generator matrix of C.

The rest of the paper is organized as follows. In Section II
a deﬁnition for relative three-weight codes and the geometric

1

Without loss of generality, we assume that G does not contain
any all-zero column. (Note that this assumption does not affect
the weight of any codeword.) We introduce a set of tools for
studying C as follows.
Let P G(k − 1, q) be a (k − 1)-dimensional projective space
over GF (q). Then the columns of G, which is a k × n matrix
over GF (q), can be viewed as points of P G(k − 1, q). We
thus obtain a projective multiset (or a value assignment [3]),
which is a map m from P G(k −1, q) to the set of nonnegative
integers, i.e.,

Lemma 2.1: There is a one to one correspondence between
the nonzero codewords c1 ∈ C1 , c2 ∈ (C2 \C1 ) and c ∈
k
k
(C\C2 ) and the subspaces P(k12−1 1 )(k−k2 ) , P(k12 −k1 −1)(k−k2 )
−k
k1
and P(k2 −k1 )(k−k2 −1) , respectively, such that if c1 , c2
k
k
and c correspond to P(k12−1 1 )(k−k2 ) , P(k12 −k1 −1)(k−k2 ) and
−k
k
P(k12 −k1 )(k−k2 −1) , respectively, then
m(P G(k − 1, q)) = n,
k
n − w(c1 ) = m(P(k12−1 1 )(k−k2 ) ),
−k
k
n − w(c2 ) = m(P(k12 −k1 −1)(k−k2 ) ), and

m : P G(k − 1, q) → {0, 1, 2, · · · }

k
n − w(c) = m(P(k12 −k1 )(k−k2 −1) ).

where for any point p ∈ P G(k − 1, q), m(p) is deﬁned as the
number of occurence of p as a column in the matrix G [3].
We call m(p) the value (or multiplicity ) of p. This map can
be extended to any subset W ⊂ P G(k − 1, q) by deﬁning
∑
m(W ) =
m(p).

Proof: The ﬁrst equation is obvious, as every column of G
must be a point of P G(k − 1, q), where m(·) is deﬁned with
G as in the last section. The last three equations in the lemma
can be proved similarly. Let us give a detailed proof for the
third equation. Assume c2 ∈ (C2 \C1 ). Then we may write

p∈W

We call m(W ) the value of W .

c2 = (x1 , · · · , xk1 , xk1 +1 , · · · , xk2 , 0, · · · , 0)G,

Let p = (u1 , · · · uk ) be a vector of GF (q) or a projective
point of P G(k − 1, q). For any L ⊂ {1, 2 , · · · k}, we denote
PL (p) = (v1 , · · · vk ), where vi = ui if i ∈ L, and vi = 0
if i ∈ L. For a subset W ⊂ P G(k − 1, q), deﬁne PL (W ) =
/
{PL (p) | p ∈ W }. It is easy to see that if W is a projective
subspace of P G(k − 1, q), so is PL (W ).
k

where G is a generator matrix of C, and the ﬁrst k1 rows
of G generate the subcode C1 , and the next k2 − k1 rows
of G and the ﬁrst k1 rows of G together generate the
subcode C2 . Since c2 ∈ (C2 \C1 ), there exists some i satisfying k1 + 1 ≤ i ≤ k2 such that xi ̸= 0. Consider
the space U of GF (q)k which is orthogonal to the vector (x1 , · · · , xk1 , xk1 +1 , · · · , xk2 , 0, · · · , 0). Then U , being
viewed as a projective subspace of P G(k − 1, q), satisﬁes
dim PL1 (U ) = k1 − 1, dim PL2 (U k1 ) = k2 − k1 − 2
and dim(U k2 ) = k − k2 − 1. Therefore, U is exactly
k
P(k12 −k1 −1)(k−k2 ) corresponding to the codeword c2 . Then, the
k
equation n − w(c2 ) = m(P(k12 −k1 −1)(k−k2 ) ) is obvious.

For a projective subspace V of P G(k − 1, q), and integers
l = 1, . . . , k − 1, we deﬁne
V l = {p ∈ V | p = (0, ..., 0, pl+1 , ..., pk )}
that is, V l is the set of points of V which are all 0 in the ﬁrst l
coordinates. Note that V l may be an empty set. If V l ̸= ∅, then
it is a projective subspace of V . For nonnegative integers ξ, η,
ξ
and γ, we denote by Pηγ a projective subspace V of P G(k −
1, q), satisfying dim(PL1 (V )) = ξ−1, dim(PL2 (V k1 )) = η−1
and dim(V k2 ) = γ − 1, where k1 = dim(C1 ), k2 = dim(C2 ),
L1 = {1, ..., k1 } and L2 = {k1 + 1, ...k2 }. Here, a space of
dimension 0 is a set consisting of a single point; and the empty
set is viewed as a projective space of dimension −1. It is easy
ξ
to see that dim(Pηγ ) = ξ+η+γ −1. We give several examples
as follows.

III. C HARACTERIZATION OF THREE - WEIGHT CODES
In the following, Lemma 2.1 will help us to establish a
sufﬁcient and necessary condition for a linear code to be a
relative three-weight code.
The sufﬁcient and necessary condition also provides us
with a convenient approach to construct a generator matrix to
generate a relative three-weight code. We call it a “geometric
construction” of a relative three-weight code. We will illustrate
this approach by an example.

1
Example 2.1: P00 stands for points p ∈ P G(k − 1, q)
0
satisfying PL1 (p) ̸= 0; P10 stands for points p satisfying
0
PL1 (p) = 0 and PL2 (p) ̸= 0; and P01 stands for points p
satisfying PL1 (p) = 0 and PL2 (p) = 0.

Theorem 3.1: Let C be a linear code of effective length n,
with a generator matrix G. Let C1 and C2 be subcodes of C,
generated by the ﬁrst k1 and k2 rows of G, respectively. Then
C is a relative three-weight code with respect to C1 and C2 if
1
and only if the following is true: m(P00 ) is a constant for all
1
0
0
the points P00 ; m(P10 ) is a constant for all the points P10 ;
0
0
and m(P01 ) is a constant for all the points P01 .

We assume that the effective length of C (i.e., the number
of nonzero columns of any generator matrix of C) is n in the
sequel. The support of a codeword c ∈ C, denoted by supp(c),
is deﬁned as the set of the nonzero coordinate positions. We
denote by w(c) the (Hamming) weight of the codeword c, that
is, w(c) = |supp(c)|, the number of nonzero coordinates.

Proof: We ﬁrst prove the sufﬁcient condition. Assume m(·)
1
0
0
has same values on the points P00 , P10 and P01 , respectively.
k
Then all the subspaces P(k12−1 1 )(k−k2 ) will have the same
−k
k
value since any P(k12−1 1 )(k−k2 ) contains the same number
−k
1
0
0
of points being from the set of points P00 , P10 and P01 ,

We are now ready to give a useful lemma, which determines
the weight of a codeword of c ∈ C by the value of a projective
subspace of P G(k − 1, q).

2

respectively. It follows from Lemma 2.1 that all the nonzero
codewords of C1 have the same weight. Similarly, we know
that all the codewords of C2 \C1 have the same weight, and all
the codewords of C\C2 have the same weight. Therefore, C is
a relative three-weight code with respect to C1 and C2 .

is a relative three-weight code with respect to a 2-dimensional
subcode C1 and a 4-dimensional code C2 . We ﬁrst give the
following value assignment.

1
 1, p is a point P00 ,
0
2, p is a point P10 ,
m(p) =

0
4, p is a point P01 .

Next, we prove the necessary condition. Assume C is a
relative three-weight code. In order to show that the value
1
0
assignment m(·) has same values on the points P00 , P10 and
0
P01 , respectively, we will prove the following general result:
ξ
m(Pηγ ) = a constant,

To satisfy the value
matrix G as follows.

1111111
 0000000

 0001110

 0010011
0100101

(1)

for any ﬁxed triple (ξ, η, γ).
To show (1) is true, we denote ξ + η + γ = k − i and use
the induction on i, for i = 0, . . . , k − 1.
ξ
For i = 0, we have ξ + η + γ = k and Pηγ = P G(k − 1, q),
ξ
so, m(Pηγ ) = m(P G(k − 1, q)) = n.
ξ
For i = 1, we have ξ + η + γ = k − 1 and Pηγ is
k1 −1
equal to one of the three kinds of subspaces P(k2 −k1 )(k−k2 ) ,
k
k
P(k12 −k1 −1)(k−k2 ) and P(k12 −k1 )(k−k2 −1) . It follows from
ξ
Lemma 2.1 that m(Pηγ ) is a constant.

1
1
1
0
1

1
1
1
1
0

1
1
0
1
1

1
1
1
1
1

0
0
0
1
0

0
0
0
1
0

assignment, we give the generator
1
0
1
1
1
0
0
0
1
1

0
1
0
0
0
0
0
0
1
1

0
1
0
0
1
0
0
1
0
0

0
1
0
1
0
0
0
1
0
0

0
1
1
0
0
0
0
1
0
1

0
1
1
0
1
0
0
1
0
1

0
1
1
1
0
0
0
1
1
0

0
1
0
1
1
0
0
1
1
0

0
1
1
1
1
0
0
1
1
1

1
1
0
0
0
0
0
1
1
1

1
1
0
0
1
0
0
0
0
1

1
1
0
1
0
0
0
0
0
1

1
1
1
0
0
0
0
0
0
1

0
0
0
0
1




.



Let C be the code generated by G, subcode C1 be generated
by the ﬁrst 2 rows of G, and C2 be generated by the ﬁrst 4
rows of G. By Theorem 3.1, C is relative three-weight code
with respect to C1 and C2 . It is easy to verify that the nonzero
codewords of C1 have weight 16, the codewords of C2 \C1 have
weight 20, and the codewords of C\C2 have weight 22.

Now, assume (1) is true for any i satisfying i < i0 , i.e., (1)
is true for any ﬁxed triple (ξ, η, γ) satisfying ξ+η+γ > k−i0 .
We will show that (1) is true for i = i0 in the following. For
ξ′
ξ
any Pηγ satisfying ξ + η + γ = k − i0 , there exists a Pη′ γ ′
ξ′
ξ
satisfying ξ ′ + η ′ + γ ′ = k − (i0 − 2) such that Pηγ ⊂ Pη′ γ ′ .
We may distinguish the parameters into the following cases.

IV. C RYPTOGRAPHIC APPLICATIONS

(Case 1.) ′ ξ ′ = ξ + 2. Then η ′ = η and γ ′ = γ.
ξ
ξ+1
ξ
ξ
Since m(Pη′ γ ′ ) = (q + 1)m(Pηγ ) − qm(Pηγ ), m(Pηγ ) =
′
q+1
ξ
1
ξ+1
ξ
q m(Pηγ ) − q m(Pη′ γ ′ ). Thus, m(Pηγ ) is a constant, by
the inductive hypothesis.

We ﬁrst brieﬂy present the application of relative threeweight codes to noiseless wire-tap channels of type II with
the coset coding scheme (see [7] for the detail on this type
of channels). Then we will focus on the application to secret
sharing schemes.
In [7], the application of a pair (C, D), where D is a subcode
of C, to wire-tap channels of type II has been explained.
Similarly, a triple (C, C1 , C2 ), where C1 and C2 are subcodes
of C and C1 ⊂ C2 , can be described as three senders with the
same encoder. Suppose the information symbols corresponding
to C1 and C2 \C1 have been leaked to the adversary; and the
adversary tries to obtain the third sender’s information symbol.
When a relative three-weight code is employed in the noiseless
wire-tap channel of type II, the adversary will face the same
level of difﬁculty, in order to obtain each information symbol,
ri , of the i-th sender (for i = 1, 2, 3).

(Case 2.) ξ ′ = ξ + 1, η ′ = η + 1. Then γ ′ = γ. Since
ξ
ξ′
ξ+1
ξ
ξ
m(Pη′ γ ′ ) = qm(Pηγ ) + m(P(η+1)γ ) − qm(Pηγ ), m(Pηγ ) =
′
ξ
ξ
ξ+1
m(Pηγ )+ 1 m(P(η+1)γ ) − 1 m(Pη′ γ ′ ), which is a constant,
q
q
by the inductive hypothesis.
(Case 3.) ξ ′ = ξ + 1, γ ′ = γ + 1. Then η ′ = η. Similar
ξ
ξ
ξ+1
to Case 2, we obtain m(Pηγ ) = m(Pηγ )+ 1 m(Pη(γ+1) ) −
q
′
1 m(P ξ′ ′ ), which is a constant.
η γ
q
(Case 4.) ξ ′ = ξ, η ′ = η+2. Then γ ′ = γ. Similar to Case 1,
q+1
ξ
ξ′
ξ
we obtain m(Pηγ ) = q m(P(η+1)γ ) − 1 m(Pη′ γ ′ ), which
q
is a constant.
(Case 5.) ξ ′ = ξ, η ′ = η + 1 and γ ′ = γ + 1. Similar to
ξ
ξ
ξ
Case 2, we obtain m(Pηγ ) = m(P(η+1)γ )+ 1 m(Pη(γ+1) ) −
q
1 m(P ξ′′ ′ ), which is a constant.
η γ
q
(Case 6.) ξ ′ = ξ, η ′ = η and γ ′ = γ + 2. Similar to Case 1,
q+1
ξ
ξ′
ξ
we obtain m(Pηγ ) = q m(Pη(γ+1) ) − 1 m(Pη′ γ ′ ), which
q
is a constant.
Therefore, we have proved that (1) is true for i = i0 . By
the induction (1) is true.

Another important application of relative three-weight codes
is to secret sharing schemes. To be self-contained, we brieﬂy
introduce the secret sharing schemes based on linear codes
(for the detail, see [8], [10]).
Let G = (g0 , g1 , · · · , gn−1 ) be a generator matrix (without
any all-zero column) of C. In the secret sharing scheme based
on C, the secret is an element of GF (q), which is called the
secret space. The scheme allows n − 1 participants P1 , P2 ,
· · · , Pn−1 and a dealer. The dealer is a trusted person.
In order to compute the shares with respect to a secret s,
the dealer chooses randomly a vector u = (u0 , · · · , uk−1 ) ∈

Example 3.1: In the following, making use of the theorem
above, we will construct a binary 5-dimensional code C, which

3

GF (q)k such that s = ug0 . There are q k−1 such vectors u ∈
GF (q)k in total. The dealer then treats u as an information
vector and computes the corresponding codeword

the codewords of D is equal to n. In the latter case, the set
of minimal codewords is exactly C\D.

t = (t0 , t1 , · · · , tn−1 ) = uG

Theorem 4.2: Assume C(d1 , d2 , d) is a relative three-weight
code with respect to C1 and C2 . Then all of the nonzero
codewords of C(d1 , d2 , d) are minimal codewords except the
following two cases:
1) dim C1 = 1, and C1 and C2 have the same effective
length.
2) dim C1 = 1, and C1 and C have the same effective length.
In these two cases, all the codewords of C\C1 are minimal
codewords of C(d1 , d2 , d).

We now give the main result for this section.

and gives ti to participant Pi as a share for each i ≥ 1.
Since t0 = ug0 = s, a set of shares {ti1 , ti2 , · · · , tim },
1 ≤ ti1 < · · · < im ≤ n − 1 and 1 ≤ m ≤ n − 1, determines
the secret if and only if g0 is a linear combination of gi1 , · · · ,
gim .
In [8], Massey has showed the following: Let G be a
generator matrix of an [n, k] code C. In the secret sharing
scheme based on C, a set of shares {ti1 , ti2 , · · · , tim }, 1 ≤
i1 < · · · < im ≤ n − 1 and 1 ≤ m ≤ n − 1, determines the
secret if and only if there is a codeword
(1, 0, · · · , 0, ci1 , 0, · · · , 0, cim , 0, · · · , 0)

Proof: We distinguish the proof into the following cases.
(Case 1.) d1 = d2 or d2 = d. Then C(d1 , d2 , d) is a relative
two-weight code. The minimal codewords of C are determined
using Lemma 4.1.

(2)

in the dual code C ⊥ , where cij ̸= 0 for at least one j.
If there is a codeword of (2) in C ⊥ , then the ∑
vector g0 is
m
a linear combination of gi1 , · · · , gim , say, g0 = ∑j=1 xj gij .
m
Then the secret s is recovered by computing s = j=1 xj tij .
If a group of participants can recover the secret by combining their shares, then any group of participants containing
this group can also recover the secret. A group of participants
is referred to as a minimal access set if they can recover
the secret with their shares, while any of its proper subgroups
cannot do so. Due to this fact, we are interested in the set of
minimal access sets.

(Case 2.) d1 = d > d2 . We ﬁrst show that any codeword
c ∈ C\C2 is a minimal codeword. If c covers a codeword
c′ ∈ C1 , then c and c′ have the same support positions since
w(c) = w(c′ ) = d. So, there exists a a ∈ GF (q) such that
the codeword u = c − ac′ has zero coordinate in at least one
of the support positions of c, i.e., w(u) < d = d1 . If u = 0,
then c = ac′ ∈ C1 , a contradiction to c ∈ C\C2 . It follows
that w(u) = d2 . So, u ∈ C2 \C1 . It follows c = ac′ + u ∈ C2 ,
again a contradiction to c ∈ C\C2 . So, c does not cover any
codeword c′ ∈ C1 .
We now show that c ∈ C\C2 does not cover any codeword
c′ ∈ C2 \C1 . Otherwise, we can similarly ﬁnd a a ∈ GF (q)
such that u = c−ac′ ̸= 0 and w(u) = d2 < w(c) = d = d1 . It
follows that u ∈ C2 \C1 . So, c = u + ac′ ∈ C2 , a contradiction
to c ∈ C\C2 .
Next, we show that c ∈ C\C2 does not cover any other
codeword c′ ∈ C\C2 unless c′ = ac for some a ∈ GF (q). If c
covers c′ , then c and c′ have the same support positions since
w(c) = w(c′ ) = d. So, we similarly ﬁnd a a ∈ GF (q) such
that u = c′ −ac and w(u) < d = d1 . If u ̸= 0, then w(u) = d2
and u ∈ C2 \C1 . It follows that c covers the codeword u, a
contradiction to the fact that c doesn’t cover any codeword of
C2 \C1 . So, u = 0, i.e., c′ = ac.
From the discussion above, we showed that all the codewords of C\C2 are minimal codewords.
Now, we show that all the codewords of C2 \C1 are minimal
codewords. Assume c ∈ (C2 \C1 ). It is clear that c does not
cover the codeword c′ ∈ (C\C2 ) or c′′ ∈ C1 , since w(c) =
d2 < w(c′ ) = w(c′′ ) = d = d1 . If c covers another codeword
c′ ∈ (C2 \C1 ), then we can similarly ﬁnd u = c′ − ac such that
w(u) < w(c) = d2 , since w(c) = w(c′ ) = d2 . So, u = 0, i.e.,
c′ = ac for some a ∈ GF (q).
Last, we show that all the codewords of C1 are minimal
codewords. Assume c ∈ C1 . Then c does not cover c′ ∈
(C\C2 ). Otherwise, c′ also covers c since w(c) = w(c′ ). If c
covers another codeword c′ ∈ C1 , then since w(c) = w(c′ ) =
d1 , we can similarly ﬁnd u = c−ac′ ∈ C1 for some a ∈ GF (q)

Deﬁnition 4.1: We say that codeword c′ covers a codeword
c, if the support of c′ contains the support of c. If a nonzero
codeword c covers only its scalar multiples, but no other
nonzero codewords, it is called a minimal codeword.
From the preceding discussion, it is clear that there is a oneto-one correspondence between the set of minimal access sets
and the set of minimal codewords of the dual code C ⊥ whose
ﬁrst coordinate is 1. Thus, to determine the access structure
of the secret sharing scheme, we need to determine the set of
minimal codewords whose ﬁrst coordinate is 1. It is easy to
see that in most cases, we are able to determine the set of
minimal codewords, as long as we can determine the set of
minimal codewords whose ﬁrst coordinate is 1. The problem
of determining all the minimal codewords of a linear code, is
called the covering problem in the literature [1], [8]. And it is
well known that this is a hard problem for an arbitrary linear
code. Currently, only a few classes of linear codes are known,
for which the minimal codewords are completely determined
[4], [10].
Making use of the results in [5], it is easy to prove the
following lemma. We omit the proof here; in the later version
of this paper [6], we will present a full proof.
Lemma 4.1: If C is an [n, k] relative two-weight code with
respect to a subcode D, then all the nonzero codewords of C
are minimal codewords unless dim D = 1 and the weight of

4

such that w(u) < w(c) = d1 . Thus, u = 0, i.e., c = ac′ .
It is necessary to show that c does not cover any codeword
c′ ∈ (C2 \C1 ). Assume the effective length of C1 is n1 . If
dim C1 > 1, then w(c) < n1 . Without loss of generality, let
the ﬁrst coordinate of c be zero and write c as

and C2 have the same effective length. In the latter case, all
the codewords of C\C1 are minimal codewords.
(Case 7.) d2 < d < d1 . Then all the codewords of C
are minimal codewords except in the following two cases:
dim C1 = 1 and C1 and C2 have the same effective length;
dim C1 = 1 and C1 and C have the same effective length.
In these two cases, all the codewords of C\C1 are minimal
codewords.
(Case 8.) d < d1 < d2 . Then all the codewords of C are
minimal codewords except in the case that dim C1 = 1 and
C1 and C have the same effective length. In the latter case, all
the codewords of C\C1 are minimal codewords.
(Case 9.) d < d2 < d1 . The result is the same as in Case
7.
Remark 4.1: Comparing our three-weight codes with codes
studied in [4], [10], it is showed that the family of three-weight
codes contains new codes which are not covered by [4], [10].
In [6], we will give an example of three-weight code that does
not belong to the classes of [4], [10].

c = (x1 , ...xk1 , 0, ..., 0)G,
where G is the generator matrix of C corresponding to the
value assignment. Represent the ﬁrst column of G by p1 , and
deﬁne a set
S = {p | p is a column of G, and PL1 (p) = PL1 (p1 )}.
Then (x1 , ...xk1 , 0, ..., 0) is orthogonal to all the elements of
S. Write c′ ∈ (C2 \C1 ) as
c′ = (y1 , ...yk1 , yk1 +1 ..., yk2 , 0, ..., 0)G.

(3)

If c covers c′ , then (y1 , ...yk1 , yk1 +1 ..., yk2 , 0, ..., 0)
is orthogonal to the element of S, in particular,
(y1 , ...yk1 , yk1 +1 ..., yk2 , 0, ..., 0) is orthogonal to the
element p0 = PL1 (p1 ) ∈ S, i.e., (y1 , ...yk1 , 0, ....0) is
orthogonal to all the elements of S. It follows that
(0, ...0, yk1 +1 , ..., yk2 , 0, ..., 0) is orthogonal to all the
elements of S ∗ , where

V. C ONCLUSION
We have investigated a class of three-weight codes, and
presented their applications to wire-tap channels of type II
as well as secret sharing schemes. Using the ﬁnite projective
geometry, we ﬁrst established an approach to characterize the
Hamming weights of codewords of a linear code. We then
gave a sufﬁcient and necessary condition for a linear code to
be a three-weight code, making use of the geometric approach.
Furthermore, we have determined the minimal codewords of
a three-weight code, for the application of the code to secret
sharing schemes.

S ∗ = {p | p = PL2 (p), p ∈ S},
and L1 and L2 are given as in Section II. Since rank(S ∗ ) =
k2 − k1 according to Theorem 3.1, we get yk1 +1 = yk1 +2 =
· · · = yk2 = 0. It follows that c′ ∈ C1 , which is a contradiction
to the fact c′ ∈ (C2 \C1 ). This shows that any codeword c ∈ C1
does not cover any codeword c′ ∈ (C2 \C1 ) if dim C1 > 1.
On the other hand, if dim C1 = 1 and n1 < n2 (n2 is the
0
effective length of C2 ), then m(P10 ) > 0. So, the rank of the
set
S2 = {p | p = PL2 (p1 ), p1 ∈ S1 }

ACKNOWLEDGMENT
This work was supported by The National Science Foundation of China (No. 11171366 and No. 61170257).

is equal to k2 − k1 , where

R EFERENCES

S1 = {p | p is a column of G, PL1 (p) = 0 and PL2 (p) ̸= 0}.

[1] A. Ashikhmin and A. Barg, “Minimal vectors in linear codes,” IEEE
Trans. Inform. Theory, vol. 44, no. 5, pp. 2010-2017, 1998.
[2] I.G. Bouyukliev, “Classiﬁcation of Griesmer codes and dual transform,”
Discr. Math., vol. 309, no. 12, pp. 4049-4068, 2009.
[3] W.D. Chen and T. Kløve, “The weight hierarchies of q-ary codes of
dimension 4,” IEEE Trans. Inform. Theory, vol. 42, no. 6, pp. 2265-2272,
1996.
[4] Z. H. Li, T. Xue and H. Lai, “ Secret sharing schemes from binary linear
codes,” Inform. Sci., vol. 180, no. 22, pp. 4412-4419, 2010.
[5] Z. H. Liu, W. D. Chen, “Notes on the value function,” Designs, Codes
and Cryptography, vol. 54, no. 1, pp. 11-19, 2010.
[6] Z. H. Liu, X.-W. Wu “Two-weight and three-weight codes for cryptographic applications,” in preparation.
[7] Y. Luo, C. Mitrpant, A.J. Han Vinck and K.F. Chen, “Some new
characters on the wire-tap channel of type II,” IEEE Trans. Inform.
Theory, vol. 51, no. 3, pp. 1222-1229, 2005.
[8] J. L. Massey, “Minimal codewords and secret sharing,” in Proc. 6th Joint
Swedish-Russian Workshop on Information Theory, M¨ lle, Sweden, Aug.
o
pp. 276-279, 1993.
[9] M.A. Tsfasman and S. Vladuts, “Geometric approach to higher weights,”
IEEE Trans. Inform. Theory, vol. 41, no. 6, pp. 1564-1588, 1995.
[10] J. Yuan and C. S. Ding, “Secret sharing schemes from three classes of
linear codes,” IEEE Trans. Inform. Theory, vol. 52, no. 1, pp. 206-212,
2006.

By Theorem 3.1, we see that any codeword of C1 has zero in
the coordinate positions that S1 represents, and any codeword
c′ ∈ (C2 \C1 ) has nonzero in at least one of the coordinate
positions that S1 represents according to (3) and rank(S2 ) =
k2 − k1 . It follows that c ∈ C1 does not cover any codeword
c′ when dim C1 = 1 and n1 < n2 .
Using the techniques in the proof of Case 2, we can
similarly prove the results for the following cases, i.e., Case
3 - Case 9.
(Case 3.) d1 = d < d2 . Then all the codewords of C are
minimal words.
(Case 4.) d1 < d2 < d. Then all the codewords of C are
minimal codewords.
(Case 5.) d1 < d < d2 . Then all the codewords of C are
minimal codewords.
(Case 6.) d2 < d1 < d. Then all the codewords of C are
minimal codewords except in the case that dim C1 = 1 and C1

5

