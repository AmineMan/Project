Title:          ISIT_RS_delay_opt_rand_link_conn_v8
Subject:        
Keywords:       
Author:         Michael Fan ZHANG
Creator:        预览
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Tue May 15 10:32:09 2012
ModDate:        Tue Jun 19 12:56:27 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      595.29 x 841.89 pts (A4)
File size:      826187 bytes
Optimized:      no
PDF version:    1.7
ISIT'2012 1569565097

Delay-Optimal Buffered Decode-and-Forward for
Two-hop Networks with Random Link Connectivity
Ying Cui and Vincent K. N. Lau

Edmund M. Yeh

Department of Electrical and Computer Engineering
Hong Kong University of Science and Technology, Hong Kong

Department of Electrical and Computer Engineering
Northeastern University, USA

allocated for the S-R transmission or the R-D transmission,
according to the queue lengths and link quality. Here, the
throughput to D can be made non-zero as long as the R-D
link is connected. While the BDF protocol appears to offer
clear advantages, it is not clear how to design the protocol
to minimize overall network delay. For while buffering bits
at R can improve the future throughput and hence reduce the
future delay cost, it is not conducive to reducing the current
delay cost, as the bits buffered at R experience longer delay.
It remains unclear how to take advantage of the buffering at
R to balance the current delay cost with the future delay cost
so as to minimize the average delay.

Abstract—Delay-optimal control of multi-hop networks remains a challenging problem even in the simplest scenarios.
In this paper, we consider delay-optimal control of a two-hop
half-duplex network with i.i.d. on-off fading. Both the source
node and the relay node are equipped with inﬁnite buffers and
have exogenous bit arrivals. We focus on delay-optimal link
selection to minimize the average bit delay subject to a halfduplex constraint. To solve the problem, we introduce a new
approach whereby an actual discrete time system (ADTS) is
approximated using a virtual continuous time system (VCTS).
Using dynamic programming, we recursively solve the delay
minimization problem in the VCTS in terms of a simpler
prototype problem, which can be addressed using continuoustime optimal control techniques. We show that the obtained
solution in the VCTS is asymptotically optimal in the ADTS.
Our solution has a closed-form expression and does not require
knowledge of the arrival statistics. Finally, using renewal theory
and the theory of random walks, we analyze the average delay
resulting from the asymptotically optimal solution.

S

ON

ON

OFF

ON

ON

OFF

OFF

ON

ON

OFF

ON

: G=1

OFF

: G=0

Time

t

(a) Decode-and-forward (DF).

I. I NTRODUCTION

S

ON

ON

OFF

ON

ON

OFF

By now, it is well recognized that in optimizing wireless
communication networks, it is necessary to jointly consider
both physical layer issues such as coding and modulation as
well as higher layer issues such as random packet arrivals
and delay [1]. In spite of this recognition, however, optimally
designing a wireless network across layers to minimize delay
remains an open problem even in the simplest scenarios.
Consider a two-hop network with one source node (S),
one half-duplex relay node (R), and one destination node
(D) under i.i.d. on-off fading. Both S and R are equipped
with inﬁnite buffers and have exogenous bit arrivals. R may
forward S trafﬁc using some predetermined protocol. Under
a conventional decode-and-forward (DF) strategy (cf. Fig. 1
(a)), a scheduling slot is divided into two phases, where a
listening phase (S-R) is always followed by a retransmission
phase (R-D). As a result, the maximum throughput from S to D
is restricted by the instantaneous ﬂow balance constraint, i.e.,
the minimum of the throughput from S to R and the throughput
from R to D. Under random link connectivity, the throughput
from S to D is non-zero only when both the S-R link and the
R-D link are connected. This can be seen in Fig. 1 (a).
Consider now a cross-layer buffered decode-and-forward
(BDF) protocol which exploits the random nature of trafﬁc
arrivals and queueing, as well as the random link connectivity,
to maximize network performance. Under BDF (cf. Fig. 1 (b)),
due to buffering at R, a scheduling slot can be adaptively

OFF

ON

ON

OFF

ON

: G=1

OFF

: G
G=0
0

Time

t

(b) Buffered decode and forward (BDF).
Fig. 1.

Comparison between DF and BDF.

In recent years, throughput-optimal control [2] and delayoptimal control [3], [4] have been considered in the context
of different networks. Throughput-optimal control, as implemented by (for instance) the Dynamic Backpressure Algorithm
(DBP) [2], ensures the stability of the queueing network if
the arrival rate vector falls within the stability region. This
algorithm maximizes the throughput in an elegant manner.
However, it cannot guarantee good delay performance in
general. Delay-optimal control, which focuses on minimizing
some function of average delay, is on the other hand a more
difﬁcult problem. Markov Decision Processes (MDP) can be
used to optimize delay performance. However, brute-force
solutions for MDP are usually not practical due to the curse
of dimensionality [3]. In [4], delay-optimal link selection is
examined for a multi-hop tandem queueing network under
a simpliﬁed model in which all links are always connected
and one ﬁxed length packet can be delivered over one hop at
a time under the primary interference constraint. The delayoptimal policy is obtained using the technique of forward
induction. This result, while elegant, cannot be extended to

1

1 is 1 . Furthermore, {Gs,k } and {Gr,k } are independent of
2
each other.
Assume S and R have the same transmit power P and the
noise variances are 1. Therefore, the maximum transmission
rate of the S-R link when Gs,k = 1 or of the R-D link when
Gr,k = 1 is r = W log2 (1 + P ) (bit/s), where W is the
bandwidth. We consider a half-duplex system where S and
R cannot transmit simultaneously on the same frequency in
the same time slot. We allow continuous frequency sharing
between the S-R link and the R-D link over the spectrum W .

a more general setup with random packet lengths and random
link connectivity. In general, delay-optimal control is an open
problem even for the case of a simple two-hop network with
fading channels.
In this paper, we shall tackle some of the technical challenges inherent in delay-optimal control of multi-hop networks. Within the context of the two-hop half-duplex network
with fading, we dynamically schedule the link transmissions
(S-R link and/or R-D link) according to the instantaneous
queue lengths and link quality at S and R to minimize the
average bit delay. We introduce a new approach whereby an
actual discrete time system (ADTS) is approximated using
a virtual continuous time system (VCTS). Using dynamic
programming, we recursively solve the delay minimization
problem in the VCTS in terms of a simpler prototype problem,
which can be addressed using continuous-time optimal control
techniques. We show that the obtained solution in the VCTS
is asymptotically optimal in the ADTS. Our solution has a
closed-form expression and does not require knowledge of the
arrival statistics. Finally, using renewal theory and the theory
of random walks, we analyze the average delay resulting from
the asymptotically optimal solution.

B. Queueing Model
There are two bit ﬂows in the system as illustrated in Fig.
2. One ﬂow originates at S and is destined for D via R. The
other ﬂow originates at R and is destined for D. Both S and
R are equipped with inﬁnite buffers. The buffer at S is used
to hold the exogenous bit arrivals from S. The buffer at R
is used to hold both the exogenous bit arrivals from R as
well as the bit ﬂow from S. Therefore, the simple two-hop
network can be modeled by 2 tandem queues. As illustrated
in Fig. 3, we consider the arrival processes with deterministic
inter-arrival interval ∆T and random amount of bit arrivals
at the beginning of each interval. For clarity, we assume ∆T
∆t
is an integer. ∆T slots are grouped as a frame with frame
∆t
duration ∆T and indexed by n (n = 0, 1, · · · ). The n-th frame
corresponds to the time interval [tn , tn+1 ), where tn n∆T .
Let Zn = (Zs,n , Zr,n ) denote the joint random arrivals at the
beginning of the n-th frame (at time tn ), where Zs,n and Zr,n
denote the number of bits arriving to S and R, respectively.

II. S YSTEM M ODEL
In this section, we elaborate on the system topology and
physical layer model, the queueing model, and the buffered
decode-and-forward (BDF) protocol.
A. System Topology and Physical Layer Model

Z!"
Source node (S)
S pck arrival

Gs = 0

R pck arrival Relay node (R)

Gs = 1

S-R link

Fig. 2.

Gr = 0
Gr = 1

Z#"

Z$"

!"#$%"&#'()''%*)+$
%"&#'*)+$$$ T
∆

(!"
Destination node (D)

$,+!&$$$
∆t

∆T
∆t

$$$$$$,+!&,$$$

'"

($"

(#"

Z%&#"
K ∆t

(%&#"

(%"

-$$,+!&,$$T = K ∆t
$
.$$/)01#&$)''%*)+,$

R-D link

Fig. 3.

System model.

Arrival model.

¯
Assumption 2 (Bursty Source Model): Zs,n ∈ [B s , Bs ]
¯s ) and Zr,n ∈ [B , Br ] (0 ≤ B ≤ Br ) are
¯
¯
(0 ≤ B s ≤ B
r
r
E[Zs,n ] and
bounded i.i.d. (over frames) with means Zs
Zr E[Zr,n ], respectively. In addition, the processes {Zs,n }
and {Zr,n } are independent of each other.
Let Qs,k ∈ Q and Qr,k ∈ Q denote the queue state information (QSI) (in number of bits) at the S and R queue at the
beginning of the k-th slot, respectively, where Q [0, +∞)
denotes the QSI state space. Let Qk = Qs,k , Qr,k ∈ Q
Q × Q and Sk = Qs,k + Qr,k denote the joint QSI and the
sum queue length at the beginning of the k-th slot.

As illustrated in Fig. 2, we consider a simple two-hop
network with one source node (S), one half-duplex relay node
(R), and one destination node (D). S cannot deliver packets
directly to D due to limited coverage and has to communicate
to D with the help of R via the S-R link and the R-D link.
We consider a discrete-time system, in which the time axis is
partitioned into scheduling slots with slot duration ∆t, indexed
by k (k = 0, 1 · · · ). The k-th slot corresponds to the time
interval [k∆t, (k + 1)∆t).
We model the S-R link and the R-D link as additive white
gaussian noise (AWGN) channels with i.i.d. random link
connectivity. Let Gs,k , Gr,k ∈ G
{0, 1} denote the link
connectivity state information (CSI) of the S-R link and the RD link at the k-th slot, respectively, where 1 denotes connected
and 0 not connected. Let Gk = (Gs,k , Gr,k ) ∈ G
G×G
denote the joint CSI at the k-th slot.
Assumption 1 (Random Link Connectivity Model): The
discrete-time CSI processes {Gs,k } and {Gr,k } are both i.i.d
over time, where in each time slot, the probability of being

C. Buffered Decode-and-Forward (BDF) Protocol
We now consider using the BDF protocol to exploit the
potential beneﬁt of buffering at R under random link connectivity.
Protocol 1 (Buffered Decode-and-Forward Protocol):
• S-R link: S transmits information bits to R when the S-R
link is connected. R decodes and stores the information bits
from S in its buffer together with its exogenous bit arrivals.

2

• R-D link: R can transmit the bits (including the R bits from
S and the exogenous bit arrivals to R) in its buffer to D when
the R-D link is connected.
Using the buffer at R, BDF can adaptively allocate a scheduling slot to either the S-R transmission or the R-D transmission
according to the joint QSI and CSI. The dynamic link scheduling is characterized by a link selection policy described in
Section III-A.

where EGK [·] denotes the conditional expectation w.r.t. the
distribution of the joint CSI over K slots {Gk : k =
0, · · · , K − 1} GK , conditioned on the random bit arrivals
{Zn : n = 0, · · · , N −1} (N = K∆t ) and Sk = Qs,k +Qr,k
∆T
evolves according to (1). The time-average bit arrival rate
N −1
1
(bit/s) over K slots is λK
n=0 (Zs,n + Zr,n ), where
T
T = K∆t. Thus, by Little’s Law (over the ﬁnite horizon),
the conditional time-average expected bit delay over K slots
under π ∈ Π is given by:

III. D ELAY-O PTIMAL L INK S ELECTION
In this section, we ﬁrst introduce the link selection policy
and elaborate on the joint QSI dynamics. We then formulate
the delay-optimal link selection problem.

π
DK =

C. Delay-Optimal Link Selection over a Finite Horizon
We wish to ﬁnd an optimal admissible link selection policy
π ∗ ∈ Π to minimize the random time-average expected sum
π
queue length SK in (2) over ﬁnite K slots with probability
1 (w.p.1.), equivalently minimizing the random time-average
π
expected bit delay DK in (3) w.p.1. Speciﬁcally, for any Q−
0
and any K < ∞, we have
Problem 1 (Delay-Optimal Link Selection for ADTS):
π
π
SK = min SK
∗

π∈Π

k∆t
∈ N]
∆T
= Qr,k − αr,k (Qk , Gk )Gr,k r∆t + αs,k (Qk , Gk )Gs,k r∆t
k∆t
+ Zr, k∆t I[
∈ N],
k = 0, · · · , K − 2
(1)
∆T
∆T

Qr,k+1

+ Zs, k∆t I[
∆T

IV. ACTUAL D ISCRETE T IME S YSTEM AND
V IRTUAL C ONTINUOUS T IME S YSTEM
In this section, we ﬁrst deﬁne a virtual continuous time
system (VCTS) and formulate the delay-optimal link selection
problem for the VCTS. This is the continuous counterpart of
Problem 1 for the actual discrete time system (ADTS). We then
establish the relationship between the ADTS and the VCTS.
A. Delay-Optimal Link Selection for VCTS
We ﬁrst deﬁne a VCTS over [0, T ), where T = K∆t.
Deﬁnition 3 (Virtual Continuous Time System): A VCTS
+
is a ﬁctitious continuous time system with joint QSI q(t).
Given Q− and a policy ω ∈ Ω, the ﬁctitious joint QSI
0
q(t) ∈ Q evolves according to the following dynamics:

where Qs,0 = Q− + Zs,0 , Qr,0 = Q− + Zr,0 , [x]+
s,0
r,0
max{x, 0}, I[·] denotes the indicator function and N denotes
the set of natural numbers. The conditional time-average
expected sum queue length over K slots under π ∈ Π is given
by:
π
SK

1
K

w.p.1.

Remark 1 (Interpretation of Problem 1): π ∗ ∈ Π is optiπ
mal in a very strong sense. π ∗ ∈ Π uniformly minimizes SK
for any sample path of bit arrivals over any ﬁnite horizon
π∗
π∗
limK→∞ SK exists w.p.1.,
K < ∞. In addition, if S∞
∗
π .
π ∈ Π minimizes S∞

B. Queue Dynamics
Given an initial joint QSI Q− at time 0− and an admissible
0
link selection policy π = (α0 , · · · , αK−1 ) ∈ Π, the joint QSI
Qk evolves according to the following queue dynamics:
+

(3)

π
π
Note that for given K < ∞, λK , SK and DK are in general
random variables with randomness induced by the random bit
arrivals {Zn : n = 0, · · · , N − 1}.

A. Link Selection Policy
Consider a ﬁnite time horizon over K slots, i.e.,
{0, · · · , K − 1}. Let αs,k (Q, G), αr,k (Q, G) ∈ [0, 1] denote
the portion of the bandwidth allocated to the S-R link and the
R-D link in the k-th slot, respectively, where Q = (Qs , Qr )
and G = (Gs , Gr ) are the joint QSI and the joint CSI,
respectively. We now deﬁne the link selection (i.e., frequency
sharing) policy and admissible link selection policy.
Deﬁnition 1 (Link Selection Policy): A link selection policy is denoted by π
(α0 , · · · , αK−1 ), where αk =
(αs,k , αr,k ) : Q × G → [0, 1]2 is the mapping from the joint
QSI Q and the joint CSI G to the link selection (frequency
sharing) actions when the system is in the k-th time slot
(k = 0, · · · , K − 1).
Deﬁnition 2 (Admissible Link Selection Policy): Let φ denote the set of all mappings αk , which satisfy the following
conditions for any (Q, G) ∈ Q × G and k = 0, · · · , K − 1:
(a) αs,k (Q, G) + αr,k (Q, G) = I[Qs Gs > 0 or Qr Gr > 0]
(orthogonal link selection).
(b) αs,k (Q, G) = 0 if Gs = 0 and αr,k (Q, G) = 0 if
Gr = 0 (link not connected).
(c) αs,k (Q, G) = 0 if Qs = 0 and −αr,k (Q, G)Gr +
αs,k (Q, G)Gs ≥ 0 if Qr = 0 (no bit left to transmit).
The set of all admissible link selection policies is denoted
by Π {(α0 , · · · , αK−1 ) : αk ∈ φ, k = 0, · · · , K − 1}.

Qs,k+1 = Qs,k − αs,k (Qk , Gk )Gs,k r∆t

π
SK
.
λK

dqs (t)
= − Eg [ωs (q, g, t)gs ]r +
dt

N −1

Zs,n δ(t − tn )
n=0

dqr (t)
= − Eg [ωr (q, g, t)gr ]r + Eg [ωs (q, g, t)gs ]r
dt

K−1

N −1

EGK [Sk ]

(2)

Zr,n δ(t − tn ),

+

k=0

n=0

3

t ∈ [0, T )

(4)

where tn = n∆T , q(0− ) = Q− , δ(·) denotes the Dirac Delta
0
function, ω = (ωs , ωr ) : Q × G × [0, T ) → [0, 1]2 and Ω
are the link selection policy and the set of admissible link
selection policies for the VCTS1 . g = (gs , gr ) ∈ G has the
same distribution as the actual joint CSI Gk ∈ G.
The time-average sum queue length for the VCTS under
ω ∈ Ω over [0, T ) is given by:
sω
T

1
T

A. Delay-Optimal Solution for VCTS
First, we introduce a -link selection policy. As illustrated
in Fig 4, we partition the state space of the joint QSI Q into
5 regions, i.e., Q = ∪5 Qi and Qi ∩ Qj = ∅ (∀i = j).
i=1
Note that the partition of Q is parameterized by . Based
on this partition, we deﬁne a stationary link selection policy
α (Q, G).

T

(5)

s(t)dt

Qr

where s(t) = qs (t) + qr (t) evolves according to (4). Note that
for given T < ∞, sω is in general a random variable with
T
randomness induced by the random bit arrivals {Zn : n =
0, · · · , N − 1}.
Similar to Problem 1 for the ADTS, for any Q− and any
0
T < ∞, the delay-optimal link selection problem for the
VCTS is formulated as follows:
Problem 2 (Delay-Optimal Link Selection for VCTS):
∗
sω
T

=

min sω
ω∈Ω T

Q3

∗

∆t
∆T

ε
Q4

Q3 ≜ {(Qs ,Qr ) | Qs = 0,Qr > 0}
Q4ε ≜ {(Qs ,Qr ) | Qs > Qr ,0 ≤ Qr ≤ ε}

Qs Q5 ≜ {(Qs ,Qr ) | Qs = 0,Qr = 0}

Partition of the joint QSI state space.

Deﬁnition 4 ( -Link Selection Policy α ):
α (Q, G)

(0, 0),



(0, 1[Qr > 0]),



(1[Q > 0], 0),
s
=
(0, 1),


 1 1
( , ),
 2 2



(0, 0),

w.p.1.

w.p.1.

ε
Q2

Fig. 4.

Using discrete time dynamic programming and continuous
time optimal control for the link selection problems in the
ADTS and VCTS, respectively, we have the following theorem
which summarizes the relationship between the optimal value
of Problem 1 in the ADTS and the optimal value of Problem
2 in the VCTS.
Theorem 1 (Relationship between ADTS and VCTS):
Given any Q− and any K < ∞ slots (i.e., T = K∆t
0
seconds), we have
∗

Q1

ε

Q1 ≜ {(Qs ,Qr ) | Qs ≤ Qr ,Qs > 0}
Q2ε ≜ {(Qs ,Qr ) | Qs > Qr ,Qr > ε}

Q5

B. Relationship between ADTS and VCTS

π
SK =sω + O
T

Qs = Qr

0

(7)
Q ∈ Q, G = (0, 0)
Q ∈ Q, G = (0, 1)
Q ∈ Q, G = (1, 0)
Q ∈ Q1 ∪ Q2 ∪ Q3 , G = (1, 1)
Q ∈ Q4 , G = (1, 1)
Q ∈ Q5 , G = (1, 1)

Remark 3 (Features of α ): Consider G = (1, 1). When
Q ∈ Q1 ∪ Q2 ∪ Q3 , α removes bits from the R queue
ﬁrst. Since bits at R have shorter service time (one hop) than
bits at S (two hops), higher priority is given to the bits at
the R queue. The motivation is to maximize the aggregate
departure rate towards the destination node (so as to minimize
the sum queue length) in a greedy manner2. When Q ∈ Q4 ,
α delivers the S bits to D by frequency sharing between
the S-R link and the R-D link, where the R queue remains
unchanged, while the S queue decreases until Qs = Qr . The
function of the parameter is to retain some left-over bits at
the R queue so as not to miss a good R-D link opportunity
when G = (0, 1). Note that α does not require knowledge
of the exogenous arrival statistics or the exact queue length at
S and R when Qr > . However, when Qr ≤ , it needs to
compare Qs and Qr .
Next, we show that α in (7) is optimal for Problem 2
in the VCTS as → 0. Problem 2 in the VCTS is still a
difﬁcult dynamic optimal control problem. We ﬁrst consider a
simpler prototype problem in one inter-packet arrival interval
and obtain the optimal solution. Then, using the delay minimization technique in [1], we show that the optimal solution
for the prototype problem can recursively solve Problem 2
over multiple arrivals. In this way, we obtain the following
theorem.

(6)

In addition, for any admissible policy ω ∈ Ω for the VCTS,
denote its corresponding admissible policy for the ADTS
by π(ω)
(α0 , · · · , αK−1 ) ∈ φ, where αk (Q, G) =
ω(Q, G, k∆t) for all (Q, G) and k = 0, · · · , K − 1. Then,
π(ω)
∆t
we also have SK = sω + O( ∆T ) w.p.1., ∀ω ∈ Ω.
T
Remark 2 (Interpretation of Theorem 1): The
minimum
average sum queue length of the ADTS differs from that of
∆t
the VCTS by O( ∆T ) only, which is very small if ∆T
∆t.
As a result, instead of solving Problem 1 in the ADTS
(which is difﬁcult), we solve Problem 2 in the VCTS, for
which the solution is a good approximation to the solution
for Problem 1.
V. A SYMPTOTICALLY O PTIMAL L INK S ELECTION P OLICY
In this section, we obtain an asymptotically optimal solution
to Problem 1 in the ADTS by solving Problem 2 in the VCTS.
1 ω and Ω for the VCTS are deﬁned in a similar way as α and φ in
k
Deﬁnition 1 and Deﬁnition 2 except that ω is a function of (q, g, t).

2 It is generally true that average delay tends to be reduced when customers
with shorter service time are given higher priority.

4

Theorem 2 (Optimal Solution for Problem 2 in VCTS):
For any QSI Q− and any T < ∞, ω∗ = α∗+ lim →0+ α
0
0
minimizes the average sum queue length over [0, T ), i.e., sω ,
T
among all ω ∈ Ω.

when ∆T ≥

α∗

π
∆t
= r∆t.
we have SK = sT 0+ + O( ∆T ) w.p.1., where
In other words, π is an asymptotically optimal solution of
Problem 1 in the ADTS.

VI. AVERAGE D ELAY A NALYSIS
In this section, we analyze the limiting average sum queue
π
length S∞ of the ADTS under the asymptotically optimal link
selection policy π . One challenge is handling the effect of
the left-over bits due to the previous arrivals. We ﬁrst use the
theory of random walks to study the distribution of the number
of left-over bits in the R queue and the S queue, respectively.
We then analyze the average sum queue length using renewal
theory.
2
2
2
2
Deﬁne Zs
E[Zs,k ], Zr
E[Zr,k ] and ∆Zn
[Zs,n −
+
¯
¯
¯ (B = [B − Br ]+ , B =
Zr,n ] . Note that ∆Zn ∈ [B, B]
s
2
¯s − B ]+ ) is i.i.d. w.r.t. n. Deﬁne ∆Z 2
[B
E[∆Zn ]. The
r
following lemma summarizes the limiting average sum queue
π
length S∞ of the ADTS under π .
+Z
Theorem 4 (Average Delay): Assume ∆T > 2(Zsr r ) +
2∆Z
3r , the limiting average sum queue length of the ADTS
with

bounded by

α∗+
0
sL,∞

≤

ADTS: numerical DBP

∞ or

Power (dB)

VCTS: analytical lower bound of Opt
VCTS: numerical opt

9

VCTS: analytical upper bound of Opt
7

6

5
50

60

70

80

90
100
110
Average bit delay (ms)

120

130

140

150

Fig. 5. Transmit SNR (dB) versus average bit delay (ms) in the ADTS.
Zs,n ∈ {200, 400} and Zr,n ∈ {50, 100} (bits/pck) (both with uniform
distribution). ∆T = 200ms, ∆t = 1ms, and W = 2.5 kHz. DBP refers
to the throughput-optimal DBP link selection policy. CSI only refers to the
link selection policy which depends on the CSI only. The DBP and the
CSI only policies take the same action as the -link selection policy when
G = (0, 0), (0, 1), (1, 0). However, when G = (1, 1), the DBP policy
solves maxαk ∈φ Qs,k αs,k + (Qr,k − Qs,k )αr,k , while the CSI only policy
selects the S-R link or the R-D link randomly with equal probability without
considering the joint QSI.

) w.p.1.

R EFERENCES
[1] E. M. Yeh, “Multiaccess and fading in communication networks,” Ph.D.
dissertation, MIT, Sept. 2001.
[2] L. Georgiadis, M. J. Neely, and L. Tassiulas, “Resource allocation and
cross-layer control in wireless networks,” Foundations and Trends in
Networking, vol. 1, no. 1, pp. 1–144, 2006.
[3] D. P. Bertsekas, Dynamic Programming and Optimal Control, 3rd ed.
Massachusetts: Athena Scientiﬁc, 2007.
[4] L. Tassiulas and A. Ephremides, “Dynamic scheduling for minimum
delay in tandem and parallel constrained queueing models,” Annals of
Operations Research, vol. 48, pp. 333 – 355, 1994.

]. Furthermore,

¯

¯

¯

+
∆T ≥ 2(Bsr Br ) + 2B , M1 (l) and M2 (l) are both decreasing
3r
functions in l. Since M1 (0) = 0 and M2 (0) = 0, no ﬁnite positive root
∗
∗
exists for M1 (l) and M2 (l). Thus, we have l1 = ∞ and l2 = ∞.
4 When

∗
l2

ADTS: numerical CSI only

10

8

2
2
Here, L1 = l1 , L2 = (l∗ )2 , L2 = l1 , L2 = (l∗ )2 , where3
∗
∗
1
2
1
1
2
2
∗
l1 > 0 is the unique positive root of the semi-invariant
moment generating function of Zs,n + Zr,n − ∆Zn − 1 r∆T ,
2
1
∗
i.e., M1 (l) = ln E[eZs,n +Zr,n −∆Zn − 2 r∆T ], and l2 > 0 is
the unique positive root of the semi-invariant moment gen1
erating function of 3 (Zs,n + Zr,n ) + 4 ∆Zn − 3 r∆T , i.e.,
4
8

3 l∗ =
1
M2 (l).

≥

ADTS: numerical ε−link selection policy

11

2
2
Zs + 2Zs Zr + Zr
∆Z 2
+
(8)
r∆T
3r∆T
2
α∗+
(Z 2 + 2Zs Zr + Zr ) + 2(Zs + Zr )(L1 + L2 )
0
sU,∞ = s
r∆T
1
(L2 + 2(L2 L2 ) 2 + L2 ) ∆Z 2 + 2∆Z L2 + ∆L2
1
1
2
2
2
+
+
(9)
r∆T
3r∆T

l

α∗

12

α∗

3
1
3
4 (Zs,n +Zr,n )+ 4 ∆Zn − 8 r∆T

α∗

can be completely delivered to the D node in the VCTS under
α∗+ , i.e., there are no left-over bits in either the S buffer or
0
the R buffer at the end of each frame. This corresponds to the
small loading case, in which the general average sum queue
length bounds reduce to the exact average sum queue length.
For example, the small loading case corresponds to the SNR
≥8 dB in Fig. 5.
Remark 5 (Performance Comparison in ADTS): As illustrated in Fig. 5, the -link selection policy achieves better delay
performance than the DBP link policy and the CSI only policy
by utilizing resources efﬁciently based on both the joint QSI
and CSI. When G = (1, 1), the -link selection policy gives
higher priority to the R bits with shorter service time and retain
some left-over bits at R so as not to miss a good R-D link
opportunity when G = (0, 1).

13

0+
sL,∞ =

M2 (l) = ln E[e

α∗

0+
0+
we have s∞0+ = sL,∞ = sU,∞ .

14

∗

α∗
s∞0+

¯
2B
3r ,

Remark 4 (Interpretation of Theorem 4): When ∆T

We ﬁrst recursively show that in the VCTS, the average
delay of α in (7) and that of α∗+ in Theorem 2 differ
0
by O( ∆T ). Let π
π(α ) = (α , · · · , α ) ∈ Π be the
corresponding -link selection policy for the ADTS. We then
show using Theorem 1 that π is asymptotically optimal for
the ADTS when = r∆t.
Theorem 3 (Asymptotically Optimal Solution of Problem 1):
For any Q− and any K < ∞ slots (i.e. T = K∆t seconds),
0

under π ( = r∆t) is given by

+

¯
¯
¯
2(Bs +Br )
+ 2B ,4 we have L1 = L2 = L2 = L2 = 0, and
1
2
r
3r
α∗+
α∗+
α∗+
0
0
0
hence sU,∞ = sL,∞ = s∞ . Here, the joint random arrivals

B. Asymptotically Optimal Solution for ADTS

α
π
∆t
S∞ = s∞0+ + O( ∆T
∗
∗
α
α +
0
s∞0+ ≤ sU,∞ , where

¯
¯
2(Bs +Br )
r

= ∞ when no ﬁnite positive root exists for M1 (l) or

5

