Creator:         XeTeX output 2012.05.18:2316
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Fri May 18 23:17:23 2012
ModDate:        Tue Jun 19 12:55:03 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      278073 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569566529

Properties of Network Polynomials
Javad B. Ebrahimi

Christina Fragouli

School of Computer and
Communication Sciences
EPFL, Lausanne
Switzerland
Email: javad.ebrahimi@epﬂ.ch

School of Computer and
Communication Sciences
EPFL, Lausanne
Switzerland
Email: christina.fragouli@epﬂ.ch

Section IV looks at multiple receivers; Section V presents a
speciﬁc application and Section VI concludes the paper.

Abstract—It is well known that transfer polynomials play an
important role in the network code design problem. In this
paper we provide a graph theoretical description of the terms of
such polynomials. We consider acyclic networks with arbitrary
number of receivers and min-cut h between each source-receiver
pair. We show that the associated polynomial can be described
in terms of certain subgraphs of the network. 1

II. M ODEL AND BACKGROUND
In this section we describe the network model, and brieﬂy
review known results from [2], [4] from a line graph perspective; we use similar notation to [4].
a) Setup: We consider a directed acyclic graph G =
(V, E), where a source S would like to multicast information
to N receivers R1 , . . ., RN . We use the terms “graph” and
“network” interchangeably. We are interested in scalar linear
coding over a ﬁnite ﬁeld Fq , i.e., the source has h symbols
{u1 , . . . , uh } that she would like to send to all receivers, and
intermediate network nodes are allowed to linearly combine
their incoming symbols using coefﬁcients from the ﬁeld Fq .
The min-cut from the source to each receiver is greater or
equal to h, i.e., there exist h edge-disjoint paths from the
source to each receiver.
b) Line Graph: Unless otherwise speciﬁed, in this paper
we will work with the line graph of the original network. Given
a graph G = (V, E), the associated line graph is deﬁned as the
graph H = (VL , EL ) whose vertex set VL is the same as the
edge set of the graph G, i.e., VL = E. Two vertices e, e′ ∈ VL
are connected by an arc if and only if the starting point(head)
of e′ is the same as the ending point(tail) of e in the graph G.
Without loss of generality, we can assume that H has h
nodes, known as source nodes [4], each of which has a symbol
ui from a ﬁnite ﬁeld Fq to send to each receiver. Each receiver
has also h associated receiver nodes, through which it receives
information from the network. In the original graph G, the h
source nodes in H can be thought of as h auxiliary edges,
entering the source node and each bringing one of the symbols
ui ; the h receivers nodes in H correspond in G to h incoming
edges each receiver has.
Note that in the graph H, for each receiver, there exist h
vertex disjoint paths, where each path starts from one source
node and ends at one of the receiver nodes; these correspond
to the h edge-disjoint paths from the source to the receiver that
exist in G. We will come back to these paths in Section IV.
Also note that if G is directed and acyclic, so is H [4].
Deﬁnition 2.1 (h-minimal graph): A graph L is called hminimal with respect to a source S and a set of receivers if

I. I NTRODUCTION
It is well known in the network coding literature that the
problem of designing a linear network code that allows to
multicast information from a source to a set of receivers over
a speciﬁc network, can be reduced to the problem of assigning
values to variables so that a multivariate polynomial becomes
nonzero [2], [4]. Thus, inherently, each linear network coding
instance over a network is mapped to a polynomial, which we
will call network polynomial.
In this paper we try to understand how the structure of these
polynomials relates to the underlying network graph. We show
that every monomial of the network polynomial is associated
with a subgraph of the network with certain properties. For
example, for networks with one receiver we show that there
is, in fact, a bijection between the monomials of the network
polynomial and sets of edge-disjoint paths.
Network polynomials play a signiﬁcant role in network
code design. In the seminal paper [2] it was shown that
the existence of a network code over a graph relates to the
roots of such polynomials. The size of the network coding
alphabet used also depends on algebraic properties of such
polynomials [5], [6]. These polynomials arise not only in
graphs, but also in deterministic networks [1], [3], [5].In this
paper as well, we provide a new method that relates alphabet
size and code construction for special classes of networks
to polynomial structure and properties. Thus we believe that
studying properties of such polynomials is interesting, not only
from a theoretical point of view, but also because of possible
applications.
The rest of this paper is organized as follows. Section II reviews the algebraic framework, using a line-graph perspective;
Section III looks at transfer polynomials of a single receiver;
1 This work was supported by the National Science Foundation under
grant No PP00P2128639 and ERC Starting Grant Project NOWIRE (Network
Coding for Wireless Networks) under grant No ERC-2009-StG-240317.

1

v5
the min-cut from S to each of the receivers is at least h and
no proper subgraph of L has this property.
For further notation and terminology about graphs, see [8].
c) Transfer and Network Polynomial: In linear network
coding over Fq , intermediate nodes in the network G linearly
combine their received information using coding coefﬁcient
{xk } from the ﬁeld Fq . These coefﬁcients are the unknown
variables in the algebraic formulation of the network code
design problem. In the line graph notation, we have one
variable xi associated with each edge of the graph H; thus
we have ν ≜ |EL | such variables.
Let X ∈ Fh be a vector that collects the source symbols
q
{u1 , . . . , uh }, and Y ∈ Fh a vector that collects the symbols
q
receiver i observes, then Y = A(R)X where A(R) is the h×h
transfer matrix from the source to the receiver R [2], [4]. The
transfer matrix can be efﬁciently calculated, and captures the
linear transformation that the network operations impose on
the sent source symbols.
Deﬁnition 2.2: The transfer polynomial pi for a receiver Ri
is deﬁned as

v1

x6
x2

v9
v4

x5

v2

x7

v11

x13
x10

v3

x16
x15

x11

x1
x4

v8

x9

x3

v7

x8

v6

x12

v10

x14

Fig. 1. An example of a network with h = 2. A DPQM is depicted with in
the ﬁgure using dashed edges. The term corresponding to this DPQM in the
transfer polynomial is x1 x8 x13 x15 x16 x5 x10 .

Let P(i,j) denote the set of all (si , rj ) paths, i.e., all paths
that connect source node si to receiver node rj . We then deﬁne
∑
f(i,j) ≜
f (P ).
P ∈P(i,j)

It is well known (and straightforward) that the entry (i, j)
of the transfer matrix A is nothing but the polynomial f(i,j) .
B. PQMs and DPQMs

pi (x1 , . . . , xν ) ≜ det(A(Ri ))

We now deﬁne some new notation that will be useful
in stating our results. Consider a permutation π of the set
{1, 2, . . . , h} and denote π(i) the i-th element in the particular
permutation (recall there are h! possible permutations).
Deﬁnition 3.1 (PQM): A Perfect Quasi-Matching (PQM) is
a set of h paths in which each path starts from a different node
si and ends at a different node rπ(i) , for some permutation π,
so that no two paths have the same starting or ending node.
The (sgn) of a PQM is deﬁned as the sign of π.
Deﬁnition 3.2 (DPQM): A PQM is called Disjoint PQM
(DPQM), if the h paths are vertex-disjoint.
A DPQM corresponds to a set of edge-disjoint paths in the
original graph.

Deﬁnition 2.3: The network polynomial p associated with a
multicast network coding instance is the product of the transfer
polynomials of all receivers, i.e.,
p(x1 , x2 , . . . , xν ) ≜ p1 (x1 , . . . , xν ) · . . . · pN (x1 , . . . , xν ) (1)
d) Network Code Design: In the framework we discuss,
the network code design problem asks to ﬁnd an assignment
of values to the unknown variables {xi } so that the network
polynomial evaluates to a nonzero value. Indeed, in this case,
the transfer polynomial to each receiver evaluates to a nonzero
value; the transfer matrix to each receiver is full rank; and
thus each receiver can invert the transfer matrix and decode
the source symbols. It is well known (see for example [2])
that such an assignment is always possible provided that the
ﬁeld size is larger than the number of receivers.

C. Main Result
Our ﬁrst result says that each monomial appearing in
the transfer polynomial corresponds to a DPQM. In particular, each monomial is of the form f (P1 ) . . . f (Ph ) where
P1 , . . . , Ph are paths corresponding to a DPQM (i.e., edgedisjoint paths in the original graph). More formally:
Theorem 3.1:

III. T RANSFER P OLYNOMIAL
We now focus on a single receiver Ri . For simplicity, we
will use A and p (instead of A(Ri ) and pi ) for the transfer
matrix and the transfer polynomial, respectively.
We will work with the line graph of the original network;
thus, as mentioned in Section II, we assume that we have a
set S = {s1 , s2 , . . . , sh } of h source nodes with in-degree 0
and a set R = {r1 , r2 , . . . , rh } of h receiver nodes. We also
assume that there are h vertex disjoint paths from the elements
of S to the elements of R.

p(x1 , . . . , xν ) =

∑

∑

π Pi ∈P(i,π(i))
Pi ’s form a DPQM

(−1)sgn(π)

h
∏

f (Pi )

i=1

in which the ﬁrst summation is taken over all permutations π
and the second summation is taken over all DPQMs.
Thus, one alternative way of ﬁnding the transfer polynomial,
would be to ﬁnd all DPQMs in the network, and sum the
corresponding terms. Reversely, if we were given the transfer
polynomial, simply by counting the monomials it has, we
can learn how many DPQM’s the network has towards this
receiver; and we can identify for example intersection of
DPQM’s by identifying their common variables. Next we give
an example, and then we prove Theorem 3.1.

A. Monomials and Paths
As we discussed earlier, with every edge e ∈ E of the line
graph we have an associated variable xe ; thus with every path
P = ei1 , ei2 , . . . , eik we can associate the monomial
f (P ) ≜ xei1 .xei2 . . . . .xeik .
2

2

Example 3.1: In the line network depicted in Figure. 1, the
min-cut from the source to the receiver is two, the nodes v1 ,
v2 are the source nodes that bring the two source symbols,
and the nodes v10 , v11 are the receiver nodes that the receiver
observes. Let xi ’s be the variables associated with the edges of
the network of Figure 1, as shown in that Figure. The transfer
polynomial is:

and Q2 Q′ are source-receiver paths that intersect at v and
1
also it can be easily checked that the dual of the pattern
(v, {Q1 Q′ , Q2 Q′ }) is (v, {P1 , P2 }). Furthermore, it is easy
2
1
to see that the dual of each pattern can not be identical as the
pattern.

f = x3 x9 x16 x5 x10 + x3 x9 x16 x4 x8 x12
+ x2 x11 x15 x8,10 x4 x8 x12 + x2 x10 x6 x9 x16

From Lemma 3.1, it sufﬁces to show that the terms
∏h
(−1)sgn(π) i=1 f (Pi ) cancel each other when the paths Pi
are not pairwise vertex disjoint. We will show that we can
pair up all the crossing PQM’s into pairs so that both PQM’s
in a pair use the same set of edges but have opposite sgn’s. As
a result, their corresponding terms in the expansion of P (G)
will cancel each other.
We deﬁne the dual of a crossing PQM P
=
{P1 , P2 , . . . , Ph } as follows. Let C = {v1 , v2 , . . . , vk } ⊂ V
be the set of all the vertices of the network that belong to
more than one of the paths Pi , i = 1, . . . , h. Let v1 be the
minimum of the elements of C with respect to the order V .
Let P1 , P2 , . . . , Pl , l ≥ 2 be all the elements of P which
pass trough v1 . Also, assume that P1 , P2 are the smallest
elements of P1 , P2 , . . . , Pl with respect to the order P .
Clearly (v1 , {P1 , P2 }) is a crossing pattern. Let v1 , {Q1 , A2 }
be the dual of this pattern. Now, we deﬁne the dual of P to
be the following PQM:

Conclusion of the Proof

+ x2 x10 x4 x8 x13 x15 x16 + x2 x10 x4 x7 x14
+ x1 x8 x13 x15 x16 x5 x10 + x1 x7 x14 x5 x10
+ x1 x8 x12 x6 x9 x16 + x1 x8 x12 x5 x11 x15 x16
and each monomial corresponds to a DPQM.
Example 3.2: Let G be the network in Figure 2. For every
receiver, there are exactly two different set of disjoint PQM’s.
The transfer polynomial of the ﬁrst receiver (the lowest receiver in Figure 2) is equal to x1 y3 a1 a3 p1 q1 −x3 y1 a1 a3 p1 q1 =
a1 a3 p1 q1 (x1 y3 − x3 y1 ).
D. Steps in proving Theorem 3.1
We start from the following lemma, which states that the
only terms that can possibly appear as monomials in the
transfer polynomial are of the form f (P1 ) . . . f (Ph ) where
P1 , . . . , Ph are paths corresponding to a PQM.
Lemma 3.1:
p(x1 , . . . , xν ) =

∑

∑

π Pi ∈P(i,π(i)) , for all i

(−1)sgn(π)

h
∏

P ′ = {Q1 , Q2 , P3 , P4 , . . . , Ph }.

f (Pi )

In Figure 2, let P1 = v1 v4 v10 and P2 = v2 v4 v9 v8 v11 . Then
(v4 , {P1 , p2 }) is a crossing pattern.
Notice that:

i=1

Proof: The proof is straightforward and follows from
expanding the determinant of the transfer matrix A(G).
Next, we need to prove that in fact only the terms corresponding to disjoint paths (that form a DPQM) will appear in
the transfer polynomial; all other terms will cancel out. For
this proof, we need to introduce ﬁrst some notation.

12345-

P ′ is also a crossing PQM.
P ′ uses the same edges as of P.
P ′ ̸= P.
sgn(P ′ ) = − sgn(P ′ ).
The dual of P ′ is P.

The only nontrivial parts of the above are the last two parts.
For the part (4), notice that the end points of the paths of P ′
are matched the same way as the endpoints of the paths in P
with one exception for the endpoints of the paths P1 , P2 and
Q1 , Q2 which are matched differently.
To see the last part, notice that if v1 is the smallest crossing
point of P, it is also the smallest crossing point of P ′ . Also,
since P1 , P2 are the two smallest elements of P and Q1 , Q2
have the same set of the starting points as of P1 , P2 , by
deﬁnition of P , Q1 , Q2 are the two smallest elements of
P ′ . This means that the dual of the dual of a crossing pattern
is the original pattern. Therefore, the dual of P ′ is P.

Partial Order
Let V be a partial order on the set of vertices of H such
that v V v ′ if and only if there exists a directed path from
v to v ′ . This partial order can be extended to a total order on
the set V . For simplicity, we use the same notation V for
the total order. Similarly, we can deﬁne the total order E for
the set of edges of G.
We can also deﬁne a partial order P on the set of sourcereceiver simple paths as follows. P1 P P2 if s1 V s2 in
which si is the starting point of the path Pi for i = 1, 2.
Let P1 , P2 be two source-receiver paths with different end
points. We say that P1 , P2 are crossing paths if they share
a common vertex. If P1 , P2 are crossing path and v is a
common vertex of P1 , P2 , we say (v, {P1 , P2 }) is a crossing
pattern. Suppose that (v, {P1 , P2 }) is a crossing pattern and
assume that Pi = Qi Q′ for i = 1, 2 in which Pi is an
i
(si , ri ) path, Qi is an (si , v) path and Q′ is an (v, ri ) path.
i
By the dual of (v, {P1 , P2 }) pattern we refer to the crossing
pattern (v, {Q1 Q′ , Q2 Q′ }). It is easy to observe that Q1 Q′
2
1
2

IV. N ETWORK P OLYNOMIAL
In the case of a single receiver the terms in the transfer
polynomial corresponded to h disjoint paths, i.e., a subgraph
of the network with some special properties. Similarly, in the
case of N receivers, each term of the network polynomial now
also corresponds to a subgraph with some special properties.
3

3

A. Terms in the network polynomial
Notice that these properties can be naturally extended for
arbitrary number of receivers.

For simplicity we describe for the case of two receivers,
R1 and R2 . Consider an acyclic line network with one source
set S = {s1 , s2 , . . . , sh } ⊂ V and two receiver sets R1 =
′
′
′
{r1 , r2 , . . . , rh } and R2 = {r1 , r2 , . . . , rh }. As discussed in
Section II, the network polynomial can be calculated as

B. The case of two receivers
Throughout this section we assume that the ﬁeld Fq is of
characteristic 2. For the case of two receivers, we have a more
concise characterization of these subgraphs.
Theorem 4.1: In the expansion of the product of the transfer
polynomials of the two receivers, each monomial appears
either only once or even number of times. In particular, if the
ﬁeld Fq has characteristic 2, then the subgraphs corresponding
to the monomials of the network polynomial can be uniquely
decomposable into two DPQM’s.
The proof of this theorem follows from Theorem 4.2.
Theorem 4.2: Suppose that H is an acyclic line-network
with the source set S and the receiver sets R1 , R2 each of
which of min-cut h. Also, assume that the edges of H can
be decomposed into two DPQM’s, one for each receiver. The
following statements are equivalent:
i) There exist at least two different ways for decomposing
the edges of H into two DPQM’s.
ii) There are even number of ways that H can be decomposed into two DPQM’s.
iii) If the characteristic of the ﬁeld is 2, then there is no term
in the network polynomial corresponding to the edges of
H.
The proof is provided in [7], along with the proof of the
following lemma.
Lemma 4.2: If H is an h-minimal subgraph of G then the
network polynomial has a unique monomial corresponding to
the edges of H.
Corollary 4.1: An h-minimal subgraph H of G is uniquely
decomposable into DPQM’s.
As a direct application of 4.2, we get an alternative proof for
the following known result.
Corollary 4.2: For every network with two receivers, there
is always a network code for the multicast network coding
problem over the binary ﬁeld.

p(x1 , . . . , xν ) = det(A(R1 )A(R2 )) = p1 (x1 , . . .)p2 (x1 , . . .).
As we already showed, each monomial of p1 (and p2 ) corresponds to a DPQM with respect to the set S and the set
R1 (R2 ). Therefore, each monomial of p corresponds to a
subgraph which is a union of two DPQM’s, one with respect
to the sets S, R and the other one with respect to the set S, R′ .
Notice that the converse of this statement is not necessarily
true. This is due to the fact that one subgraph of the network
can be decomposed as the union of two DPQM’s in two
different ways and therefore, in the network polynomial some
terms might appear several times and they can possibly cancel
each other. Thus it is important to classify those subgraphs of
the network that correspond to a monomial in the network
polynomial.
We next attempt to extract properties that these subgraphs
have; the following lemma summarizes some such easy properties.
Lemma 4.1 (Properties): Consider a subgraph L that corresponds to a term appearing in the network polynomial of a
network with two receivers.
1) The edges of L can be decomposed into two DPQM’s;
one for each receiver.
2) Each vertex of L has in-degree 0,1 or 2. If it has indegree 0, then it is a source node. If it has in-degree 1
and the its out-degree is 2, then its incoming edge must
appear in both DPQM’s.
3) Each vertex of L has out-degree 0,1 or 2. If it has outdegree 0, then it is a receiver node. If it has out-degree
1 and the its in-degree is 2, then its outgoing edge must
appear in both DPQM’s.
4) The min-cut of each receiver on L is at least h.
5) The power of each variable in a monomial indicates
whether the corresponding edge (in the original graph)
appears in one of the DPQM’s or both.
Proof: Before we prove these properties, notice that each
term of the network polynomial is product of two terms of
transfer polynomials of the receivers.
1) This property is a direct implication of the previous
sentence.
2) Each DPQM is a subgraph of the graph for which the indegree and out-degree of each vertex is 0 or one. For the
union of two DPQM’s, the in-degree and out-degree of
each vertex is 0,1 or 2. The second part of this property
is also clear.
3) Similar to the previous property.
4) This property is a direct consequence of the ﬁrst property.
5) Trivial.

V. A C ODE -D ESIGN A PPLICATION
We now give an example of why studying the structure
of network polynomials is useful. We look at a special case
of combination networks, and using a simple combinatorial
argument, we provide an alternative code construction as well
as an associated bound on the ﬁeld size this construction uses,
that matches the best known such bound.
Network polynomial of combination network: The line
graph of a combination network with h = 2 is a 4-layered
network. The ﬁrst layer has two source nodes s1 , s2 . The
second layer consists of m nodes v1 , v2 , . . . , vm . For each
i = 1, 2, j = 1, 2, . . . , n, si is connected to vj . Let xi (yi ) be
the variable associated with the edge s1 , vi (s2 , vi ). The third
layer has also n nodes w1 , w2 , . . . , wm . Each vi is connected
to wi . Let ai be the variable associated with that edge. The last
layer contains N pairs of receiver nodes. The i-the pair has 2
4

4

a1

nodes ri , ti . Each pair has two in-neighbors from wj ’s where
one is connected to ri and one is connected to ti . Suppose
that ri is connected to wf (i) and ti is connected to wg(i) in
which f, g are two functions from the set [N ] to the set [m],
in which [j] = {1, 2, . . . , j}. In Figure 2 and Example 3.2, we
used pi and qi instead of wf (i) and wg(i) for simplicity.
Suppose that the variable associated to the edge ri , wf (i) is
pi and the one associated to the edge ti , wg(i) is qi . As we
saw in Example 3.2, the transfer polynomial of each receiver
can be computed. Therefore, the network polynomial of G is:
p=

N
∏

af (i) ag(i) pi qi (xf (i) yg(i) − yf (i) xg(i) )

s1

y1
x2
y2
x3

s2

y3
x4
y4

a2

a3

q4
p4
q3
p3
q2
p2

a4

q1
p1

(2)
Fig. 2.

Figure 2 shows the line graph of a combination network with
h = 2, m = 4, N = 5.
Alphabet Size: We use the results of the previous sections
to prove the following theorem.
Theorem 5.1: For every combination network with N receivers and min-cut 2 to every receiver, √
there exists a network
code over any ﬁeld of size larger than 2N .
Proof: Let G be a combination network. The network
polynomial of G is expressed in 2. We must ﬁnd an assignment
of the values to the variables so that I evaluates to a nonzero value. Set ai = pi = q1 = xg(i) = xf (i) = 1 for all
i = 1, 2, . . . , m.
The network polynomial then becomes:
N
∏

p5

x1

i=1

I=

q5

An example of the line graph of a combination network.

an appropriate value for all the variables. Thus, it is enough
√
to show that lk ≤ 2N . We prove this inequality using two
inequalities.
i) lk ≤ m − k
ii) lk ≤ 2N/(m − k)
The ﬁrst inequality holds because when we select the k-th
variable, there are m−k other variables left. Even if yk appears
with all the left variables, it will be appeared m−k times. The
second inequality holds because in the k-th step, each of the
m − k + 1 variables appear at least lk times in the parenthesis.
There are at most N parenthesis and each parenthesis has
exactly two elements. Therefore, lk (m − k + 1) ≤ 2N and
therefrom, we deduce the desired inequality. If we multiply
both sides of the two inequalities, we can deduce that lk ≤
√
2N .

(yf (i) − yg(i) )

i=1

Thus, we only need to show that if the ﬁeld size is larger
√
than 2N , we can always assign values to yi ’s such that
yf (i) √g(i) , for i ∈ [m]. Let F be a ﬁnite ﬁeld of size larger
̸=
than 2N . Each variable yi appears in certain number of
parenthesis. Without loss of generality suppose that y1 is a
variable that appears in the minimum number of parenthesis.
Let’s assume that y1 appears in l1 parenthesis.
We remove all the parenthesis containing y1 from the
product and again without loss of generality, we assume
that y2 is the least appeared variable among the remaining
terms. Let’s assume that y2 appears in l2 of the remaining
parenthesis. We exclude all the terms with y1 , y2 from the
product and we repeat the procedure. What we end up is
an ordering of the variables and N numbers l1 , . . . , lN . Let
lk = max {l1 , . . . , lN }. We show that we can always ﬁnd an
assignment to the variables yi from any ﬁeld of size larger
than lk such that I is not zero. We assign values to the
variables based on the ordering we deﬁned above, in the
opposite direction. Namely, we ﬁrst assign an arbitrary value
to yN , then we chose an appropriate value for yN −1 and at
the end we ﬁnd a right value for y1 . At each step i we must
make sure that we select a value for the variable i such that it
is different from the value of every other variable that appears
with yi in some parenthesis. Clearly, if the ﬁeld size is larger
than li , we have enough elements in the ﬁeld to select an
appropriate value for yi . Since lk is the largest li , we can ﬁnd

VI. C ONCLUSIONS
In this paper, we established relationships between the
monomials that appear in the transfer and network polynomials to graph theoretical properties of the underlying
network conﬁguration. Several questions remain open, with
most prominent a more exact characterization of the terms of
the network polynomial for an arbitrary number of receivers.
R EFERENCES
[1] S. Avestimehr, S N. Diggavi and D N C. Tse, “A deterministic approach
to wireless relay networks”, Proceedings of Allerton Conference on
Communication, Control, and Computing, Illinois, September 2007. See
http://licos.epﬂ.ch/index.php?p=research projWNC
[2] R. Koetter and M. M´ dard, “Beyond routing: An algebraic approach to
e
network coding”, IEEE/ACM Transactions on Networking, vol. 11, no. 5,
pp. 782-796, October 2003.
[3] M. Kim, E. Erez, E. M. Yeh, M. Mdard, “Deterministic network model
revisited: An algebraic network coding approach”, CoRR, 2011.
[4] C. Fragouli and E. Soljanin, “Network coding: Fundamentals,” Foundations and Trends in Networking, vol. 2, pp. 1–133, 2007.
[5] J. Ebrahimi and C. Fragouli, “Multicasting algorithms for deterministic
networks”, ITW, Cairo, January 2010.
[6] J. Ebrahimi and C. Fragouli, “Algebraic algorithms for vector network
coding”, IEEE Transactions on Information Theory vol. 57, no. 2, pp. 9961007, 2011.
[7] J.
Ebrahimi
and
C.
Fragouli,
“Properties
of
network
polynomials:
Technical
report”,
2012.
See
http://infoscience.epﬂ.ch/record/174732/ﬁles/isit2012-18.pdf
[8] D. B. West, “Introduction to graph theory”, Prentice Hall, 2001.

5

5

