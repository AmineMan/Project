Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Tue May 15 22:03:09 2012
ModDate:        Tue Jun 19 12:55:35 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      586084 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569565143

Code Based Efﬁcient Maximum-Likelihood
Decoding of Short Polar Codes
Sinan Kahraman
National Research Institute of Electronics
¨ ITAK
and Cryptology (UEKAE), TUB˙
41470 Kocaeli, Turkey
kahraman@ieee.org

M. Ertu˘ rul Celebi
g
¸
Electronics and Communication Eng.
Istanbul Technical University
34469 Istanbul, Turkey
mecelebi@itu.edu.tr

tree search algorithm with ML performance in the receiver
unit that is based on depth-ﬁrst search strategy in sphere
decoding method for polar codes. Secondly, we simpliﬁed
the proposed method by the help of an encoding property
of polar coding. By this way, the search tree can be split
up two independent parallel trees with reduced depths. It has
been shown in [9] that the conventional sphere decoding for
space-time block codes reduces the expected complexity from
exponential to polynomial (roughly in cubic). The idea of the
sphere decoding algorithm is ﬁrst introduced by Fincke and
Phost in [10] as a method for the shortest vector problem in
a lattice. Later, it is adapted to efﬁcient decoders for lattice
codes in [11] and space-time block codes of multiple antenna
systems in [12] and [13]. We focused on code based fast sphere
decoding algorithms to reduce not only expected, but also
worst-case decoding complexities [14]–[16]. Our motivation
is about to develop polar code structure based fast optimal
sphere decoding algorithm for various block lengths. In this
work we only consider small block lengths that are N ≤ 64.
Moreover, our method can also be applied for relatively long
block lengths.
Polar codes are identiﬁed as P (N, K), where K is the
dimension such that 0 ≤ K ≤ N . Noting that GF (2) denotes
the Galois ﬁeld of two elements, an algebraic description of
polar codes is given as a matrix product in GF (2)

Abstract—Polar codes are known as the ﬁrst provable code construction to achieve Shannon capacity for arbitrary symmetric
binary-input channels. Although, there exist efﬁcient sub-optimal
decoders with reduced complexity for polar codes, the complexity
of the optimum ML decoder increases exponentially. Hence the
optimum decoder is infeasible for the practical implementation
of polar coding. In this paper, our motivation is about developing
efﬁcient ML decoder with reduced complexity. In this purpose,
polar code based sphere decoding algorithm is proposed with the
optimal performance. Additionally, proposed technique exploits
two properties of polar coding to reduce decoding complexity.
By this way, the reduced complexity of optimal decoding is only
cubic, not exponential.
Index Terms—ML estimation, Polar codes, Reed-Muller codes,
Sphere Decoding.

I. I NTRODUCTION
The polar codes are the ﬁrst provable class of codes to
achieve Shannon capacity for binary symmetric channels [1].
This can be obtained by encoders and decoders with the
complexity of O(N log N ), namely quasilinear in terms of the
block length N = 2n , where n is the number of polarization
steps. In spite of low complexity in encoder and decoder units
of polar codes, the corresponding decoders have sub-optimal
performances. It is also reported in [1] and [2] that successivecancellation (SC) decoder performs block-error probability as
β
Pe ≤ 2−N for any β < 0.5 making use of the quasilinear
complexity. The generalization of SC decoder is described for
polar codes in [3]. In this case, it can be shown that the
performance suffers from sub-optimality of the SC decoder
for short polar codes. Additionally, another efﬁcient and suboptimal decoder for polar codes, the belief propagation (BP)
decoder, is introduced [4]. The performance of polar codes
and Reed-Muller (RM) codes are investigated and an efﬁcient
implementation of BP decoder for polar codes is presented
in [5]. Accordingly, it is reported in [6] that the performance
of BP is signiﬁcantly better than SC decoding over the binary
erasure channel (BEC). However, this is not true for the binaryinput additive white Gaussian noise channel (BAWGNC) [6].
To investigate the performance of polar codes under ML
decoding, Viterbi algorithm based ML decoder for short polar
codes are implemented in [7]. Unfortunately in polar coding,
decoding complexity increases exponentially to get the ML
performance [8]. In this work, ﬁrstly, we propose an efﬁcient

x = dF ⊗n ,

(1)

where F ⊗n is the nth Kronecker power of F = 1 0 . Here,
1 1
transmitted bits and corresponding codewords are represented
by d = (d0 , . . . , dN −1 ) and x = (x0 , . . . , xN −1 ), respectively.
To construct P (8, 5), ﬁrst, F ⊗3 is computed as


1

F ⊗3

1
1

1
=
1
1

1
1

0
1
0
1
0
1
0
1

0
0
1
1
0
0
1
1

0
0
0
1
0
0
0
1

0
0
0
0
1
1
1
1

0
0
0
0
0
1
0
1

0
0
0
0
0
0
1
1

0
0
0

0
,
0

0

0
1

(2)

and 5 rows are selected that are highly ranked by the
help of Bhattacharyya parameters in the construction of polar codes [1]. Here, we can notice that (N − 1)th row

1

[ 1 0 . . . 1 0 ] is mostly selected and it gives us a property for proposed technique to reduce decoding complexity of
the sphere decoding of polar codes. The generator matrix is
given as


1
1
G(8, 5) =  1

1
1

1
1
1
0
1

0
1
0
1
1

0
1
0
0
1

0
0
1
1
1

0
0
1
0
1

0
0
0
1
1

0
0
0

0
1

P2 =

1
1
1
1
0
0
0
0

1
1
0
0
1
1
0
0

1
0
1
0
1
0
1
0

P5 =

P3 = 1 (s4 + 1) − d5 ⊕ d6 ⊕ d7
2
if P1 + P2 + P3 > r 2
continue next m in loop
endif
{•, •, d5 , d6 , d7 },
for n = 1 : 2,
d3 = Ω(n), compute P4

(6)

P5 =

1
2 (s0
1
2 (s1

.

(12)

2

+

2

1
2 (s5

+

2

+ 1) − d5 ⊕ d7

1
2 (s3

2

+ 1) − d3 ⊕ d7

+ 1) − d1 ⊕ d3 ⊕ d5 ⊕ d6 ⊕ d7

+
+ 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7
if P1 + P2 + P3 + P4 + P5 > r 2
continue next p in loop
endif
update soln = {d1 , d3 , d5 , d6 , d7 },
update r = P1 + P2 + P3 + P4 + P5 ,
end
end
end
end
end
ML Estimation : return soln
Minimum metric : return r.

2

2

+

2

(13)

2

The considered search tree in the proposed method is depicted
in Fig.1 as a search graph. There are black nodes that are able
to produce at least one child node (black or grey) inside the
sphere. Contrarily, grey nodes are unproductive nodes. The
software implementation of the pseudocode is available online
[17]. The decoding complexity of the proposed algorithm is
polynomial (roughly in cubic [9]) for short polar codes and
also RM codes.

(7)

where r denotes the radius of the sphere. To clarify the
proposed method, an open form of this constraint can be given
as r2 ≥ ΣK Pi , where Pi ’s for the case of P (8, 5) can be
i=1
given by the following equations.
1
(s7 + 1) − d7
2

2

1
P4 = 2 (s2 + 1) − d3 ⊕ d6 ⊕ d7
if P1 + P2 + P3 + P4 > r 2
continue next n in loop
endif
{•, d3 , d5 , d6 , d7 },
for p = 1 : 2,
d1 = Ω(p), compute P5

II. P ROPOSED O PTIMAL D ECODER FOR P OLAR C ODES
As a well known iterative receiving process, the sphere
decoding algorithm is an efﬁcient search method with optimal
error performance. Brieﬂy, in the ﬁrst step of the algorithm,
the sphere decoder assumes a sphere with a center point at
1
2 S + 1 which depends on the received noisy vector in
N −dimensional space. Then, a constraint is imposed for all
possible data sequence d as the requirement to be inside of
a sphere which is given in the following expression,

P1 =

2

d6 = Ω(l), compute P2 = 1 (s6 + 1) − d6 ⊕ d7
2
if P1 + P2 > r 2
continue next l in loop
endif
{•, •, •, d6 , d7 },
for m = 1 : 2,
d5 = Ω(m), compute P3

2

,

(11)

2

1
(s1 + 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7
2

1
d7 = Ω(k), compute P1 = 2 (s7 + 1) − d7
if P1 > r 2
continue next k in loop
endif
{•, •, •, •, d7 },
for l = 1 : 2,

where 1 is the column vector all ones with the length of N .

,

1
(s3 + 1) − d3 ⊕ d7
2

2

+

(10)

for k = 1 : 2,

(5)

1
S + 1 − GT d T
2

1
(s5 + 1) − d5 ⊕ d7
2

2

+

The radius of the sphere is initialized as inﬁnity r = inf ,
and the modulated signal alphabet is given in the set Ω =
{−1, +1}. For more clarity, the pseudocode for P (8, 5) can
be given as

where V is the additive white Gaussian noise with zero mean
and variance σ 2 . X is the column vector with BPSK modulated
signals for encoded bits in x, {“1” → +1, “0” → −1}. The
ML estimation for the polar codes for BPSK modulation is
equivalent to obtaining minimum Euclidean distance and it is
given as

r2 ≥

(9)

1
(s0 + 1) − d1 ⊕ d3 ⊕ d5 ⊕ d6 ⊕ d7
2
+

(4)

S = X + V,

d

2

(3)

1
1 
d1
1
 d
1 3 
d ,
1 5 
 d6
1
 d7
1
1

1
S + 1 − GT d T
2

1
(s2 + 1) − d3 ⊕ d6 ⊕ d7
2

2

P4 =

where x6 = (d6 ⊕ d7 ) (⊕ represents xor bit operation). The
received signal with BPSK modulation on BAWGNC can be
expressed as

ΛM L = arg min

1
(s4 + 1) − d5 ⊕ d6 ⊕ d7
2

2

P3 =

An analysis of the channel polarization rule is beyond the
scope of this paper. Reader may ﬁnd the detailed description
in [1]. Additionally, heuristic construction method is also given
in [4], and [7]. There are N − K = 3 input bits that are ﬁxed
to zero. These are also called as frozen bits, d0,2,4 = 0. The
other K = 5 bits d = (d1 , d3 , d5 , d6 , d7 ) are data dependent.
In this way, the encoder of the polar code P (8, 5) can be given
as x = d G(8, 5) in GF(2). More explicitly,

  
1
x0
 x1   1
 x2   0
  
 x3   0
x  = 0
 4 
 x5   0
  
x6
0
x7
0

1
(s6 + 1) − d6 ⊕ d7
2

2

(8)

2

Here, we can give pseudo code of the parallel process-1 as
for k = 1 : 2,
2

0
d7 = Ω(k), compute P1 = 1 (s7 + 1) − d7
2
0
if P1 > r 2
continue next k in loop
endif
{•, •, •, d7 },
for m = 1 : 2,
0
d5 = Ω(m), compute P2
2

0
1
P2 = 2 (s4 + 1) − d5 ⊕ d7
+
0
0
if P1 + P2 > r 2
continue next m in loop
endif
{•, •, d5 , d7 },
for n = 1 : 2,
0
d3 = Ω(n), compute P3

1
2 (s5

2

Fig. 1.

0
P3 = 1 (s2 + 1) − d3 ⊕ d7
+
2
0
0
0
if P1 + P2 + P3 > r 2
continue next n in loop
endif
{•, d3 , d5 , d7 },
for p = 1 : 2,
0
d1 = Ω(p), compute P4

Proposed search tree for (8,5) polar code on BPSK channel.

A. Code Based Complexity Reduction on Proposed Decoder
To obtain more complexity reduction we consider that
encoding structure of polar coding can be exploited without
any performance loss. In this purpose we notice that dN −1
and related (N − 1)th row [ 1 0 . . . 1 0 ] of F ⊗n can be
used to reduce the complexity of the proposed search tree in
(13). Using property of (N − 1)th row, we can apply parallel
two separated search processes. By this way, N −dimensional
proposed search process can be split up two independent
(N − 1)−dimensional search processes that can be parallel
implemented without any performance loss.
In parallel process-1, let we assume d6 = 0 for P(8,5), the
equation (4) can be written as
 x0   1 1 1 1 
1

x1

 x2   0
 x3   0
 =
 x4   0
 x5   0
x6
x7

0
0

1
1
1
0
0
0
0

1
0
0
1
1
0
0

1
1

1
1
1
1
1

d1
d3
d5
d7

.

0
P4 =

arg

min

(15)

1

x1
 not(x2 ) 
 x3 


 not(x4 )  =
 x5 
not(x6 )
x7

1
0
0

0
0
0
0

The sphere constraint can be given as r ≥
1
(s7 + 1) − d7
2

2

1
(s4 + 1) − d5 ⊕ d7
2

2

P2 =

1
(s2 + 1) − d3 ⊕ d7
2

2

0
P3

0

P1 =
0

=

0
P4

=
+

1
1
1
1
0
0
0
0

1
1
0
0
1
1
0
0

 −s0 
ΣK−1 Pi0 ,
i=1

where
Λ1 =

2

+

1
(s6 + 1) − d7
2

1
(s5 + 1) − d5 ⊕ d7
2

2

+

1
(s3 + 1) − d3 ⊕ d7
2

arg

2

+

1
(s0 + 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7
2
1
(s1 + 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7
2

d |dN −1 =1

(16)

+

2

1
1
1

1
1
1
1
1

d1
d3
d5
d7

.

(21)

min

2



s1
 −s2  
 s3  
1 
 + 1 − GT d

2  −s4 
 s5  
−s6
s7

T

,

(22)

(17)

Independently, the sphere constraint can be given as r2 ≥
where

K−1
Σi=1 Pi1 ,

(18)

1
(s7 + 1) − d7
2

2

1
(−s4 + 1) − d5 ⊕ d7
2

2

1

P1 =

2

2

.

2

2

Conditional estimation for d6 = 1 can be obtained by

s6
s7

2

2

+ 1) − d3 ⊕ d7

+ 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7

 not(x0 ) 

,

1
2 (s3

2

(20)

s1

d |dN −1 =0

+ 1) − d7

By this way, this method produces the solution d with d6 = 0
and respectively metric r0 .
Independently, in parallel process-2, we assume d6 = 1,
then the equation (4) can be written in this case as

(14)

 s2  

1  s3 
   + 1 − GT d T

2  s4 
 s5  

1
2 (s6

+ 1) − d5 ⊕ d7

+ 1 (s1 + 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7
2
0
0
0
0
if P1 + P2 + P3 + P4 > r 2
continue next p in loop
endif
update soln = {d1 , d3 , d5 , d7 },
0
0
0
0
update r = P1 + P2 + P3 + P4 ,
end
end
end
end
ML Estimation : return soln|d6 = 0
Minimum metric : return r 0 .

Conditional estimation for d6 = 0 can be obtained by
 s0  
2
Λ0 =

1
2 (s0

+

1

P2 =

(19)

3

2

+

1
(−s6 + 1) − d7
2

+

1
(s5 + 1) − d5 ⊕ d7
2

(23)
2

(24)

1

P3 =

1
(−s2 + 1) − d3 ⊕ d7
2

1

P4 =
+

2

+

1
(s3 + 1) − d3 ⊕ d7
2

2

performances under ML estimation. Moreover, frame-errorrates (FERs) are ﬁgured in Fig.5-6. Proposed methods in this
paper and Viterbi based method in [7] perform same ML
performances. Fortunately, we can show that the expected
complexity is cubic for the proposed method, whereas Viterbi
based method has exponential complexity. In the sphere decoding algorithm, expected number of node visitings may be used
as expected complexity, whereas complexity per node visiting
increases by the level of the node. Additionally, the full trial
set is used for the exhaustive search decoder. We presume
that the expected complexity of the proposed algorithm and
the exhaustive search decoder can be given as the average
number of node visitings for the target BER=10−2 , 10−3 and
10−4 . Simulation results are given in Table.1 suggest that
signiﬁcant complexity reduction can be obtained by the code
based efﬁcient decoding method and the proposed algorithm
for the polar codes is up to 2 times faster than for RM codes.
Additionally, signiﬁcant reduction of the expected decoding
complexities of P(64,57) and RM(64,57) are shown in Fig.4
as the number of node visitings for EbN0.

(25)

2

1
(−s0 + 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7
2

2

1
(s1 + 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7
2

.

(26)

The pseudocode of the parallel process-2 can be given as
for k = 1 : 2,
2

1
d7 = Ω(k), compute P1 = 1 (s7 + 1) − d7
2
1
if P1 > r 2
continue next k in loop
endif
{•, •, •, d7 },
for m = 1 : 2,
1
d5 = Ω(m), compute P2
2

1
P2 = 1 (−s4 + 1) − d5 ⊕ d7
+
2
1
1
if P1 + P2 > r 2
continue next m in loop
endif
{•, •, d5 , d7 },
for n = 1 : 2,
1
d3 = Ω(n), compute P3
1
P3 = 1 (−s2 + 1) − d3 ⊕ d7
2
1
1
1
if P1 + P2 + P3 > r 2
continue next n in loop
endif
{•, d3 , d5 , d7 },
for p = 1 : 2,
1
d1 = Ω(p), compute P4
1
P4 =

1
2 (−s0

2

1
2 (s5

+

1
2 (−s6

+

+ 1) − d7

+ 1) − d5 ⊕ d7

1
2 (s3

+ 1 (s1 + 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7
2
1
1
1
1
if P1 + P2 + P3 + P4 > r 2
continue next p in loop
endif
update soln = {d1 , d3 , d5 , d7 },
1
1
1
1
update r = P1 + P2 + P3 + P4 ,
end
end
end
end
ML Estimation : return soln|d6 = 1
Minimum metric : return r 1 .

2

+ 1) − d3 ⊕ d7

+ 1) − d1 ⊕ d3 ⊕ d5 ⊕ d7

2

2

2

Table.1: Complexity vs. ML performance for
Number of visited nodes
for Target BER=10−2
(8,5)
(16,13)
Parallelized tree of P
1.5E1
1.7E2
Search tree of P
2.0E1
1.9E2
Search tree of RM
2.4E1
3.1E2
Exhaustive search comp.
1.6E2
1.0E5

+

2

the target BERs
(32,26)
5.9E3
7.7E3
7.8E3
1.7E9

(64,57)
2.4E5
2.7E5
5.5E5
8.2E18

Number of visited nodes
for Target BER=10−3
Parallelized tree of P
Search tree of P
Reduced comp. of RM
Exhaustive search comp.

Independently, the other solution d with d6 = 1 and respectively metric r1 are obtained.
There are two independent and also different solutions and
respectively two different metrics. Finally, the optimal solution
can be decided by the use of a simple comparator for two
different metrics. Consequently, N −dimensional search tree
can be split up 2 parallel (N − 1)−dimensional search trees.

(16,13)
1.6E2
1.9E2
3.0E2
1.0E5

(32,26)
5.4E3
6.2E3
6.2E3
1.7E9

(64,57)
1.4E5
1.6E5
3.4E5
8.2E18

Number of visited nodes
for Target BER=10−4
Parallelized tree of P
Search tree of P
Search tree of RM
Exhaustive search comp.

(27)

(8,5)
1.5E1
1.9E1
2.4E1
1.6E2
(8,5)
1.5E1
1.8E1
2.3E1
1.6E2

(16,13)
1.5E2
1.8E2
2.9E2
1.0E5

(32,26)
5.1E3
5.8E3
5.8E3
1.7E9

(64,57)
1.3E5
1.6E5
2.5E5
8.2E18

IV. C ONCLUSION
In this work, we introduce a new approach that is sphere
decoding to implement efﬁcient ML decoding techniques for
polar codes. In this case, sphere decoding based proposed
algorithms are ﬁrstly considered for polar codes with the
optimal error performance. Additionally, a signiﬁcant complexity reduction is obtained by the proposed methods. Firstly,
it is shown that the complexity of the optimal decoder is
only cubic, not exponential. Secondly, it is observed that the
decoding complexity of polar codes is lower than RM codes
under the proposed algorithm while the optimal performance
is guaranteed. Consequently, we show that polar codes have
fast decodable properties. In polar coding, there are two useful
properties on decoding complexity that are high number of
zeros in the generator matrix and encoding scheme property
for parallel search trees.

III. P ERFORMANCE AND C OMPLEXITY R ESULTS
In this section, we give some simulation results to evaluate
the expected decoding complexities and the attained ML error
performances of the proposed methods for the short polar and
RM codes. Firstly, we investigate the error performances under
ML estimation of the RM and polar codes for (64,57) by the
use of proposed method. In this case, bit-error-rates (BERs)
are ﬁgured in Fig.2 that RM(64,57) does better than P(64,57)
at optimal performances. These results are also reported in [7]
that RM code has better error performance due to its hamming
distance based construction. Additionally, it is ﬁgured in
Fig.3 that RM(32,26) and P(32,26) achieve equivalent error

4

0

10

0

10

P(64,57)
RM(64,57)

P(64,57)
RM(64,57)
−1

10

−1

10

−2

FER

BER

10

−2

10

−3

10

−3

10

−4

10

−5

10

Fig. 2.

0

1

2

3
EbN0 (dB)

4

5

−4

10

6

Bit error rates for (64,57) polar and RM codes on BPSK channel.

0

1

2

3
EbN0 (dB)

4

5

6

Fig. 5. Frame error rates for (64,57) polar and RM codes on BPSK channel.

0

0

10

10
P(32,26)
RM(32,26)

P(32,26)
RM(32,26)

−1

10

−1

10

−2

FER

BER

10

−2

10

−3

10

−3

10

−4

10

−5

10

Fig. 3.

−4

0

1

2

3
EbN0 (dB)

4

5

10

6

Bit error rates for (32,26) polar and RM codes on BPSK channel.

0

1

2

3
EbN0 (dB)

4

5

6

Fig. 6. Frame error rates for (32,26) polar and RM codes on BPSK channel.

8

10

[6] N. Hussami,S. B. Korada, and R. Urbanke, “Performance of polar codes
for channel and source coding,” in Proc. 2009 IEEE Int. Symp. Inform.
Theory, (Seul, Korea), p. 1488-1492, 2009.
¨ ¨ u
[7] E. Arıkan, K. Haesik, M. Garik, O. Ust¨ n, and E. Efecan, “Performance
of short polar codes under ML decoding,” in Proc. ICT Mobile Summit
2009, (Santander, Spain), 10-12 June 2009.
[8] E. Arıkan, “A survey of reed-muller codes from polar coding perspective,”
in Proc. IEEE Inform. Theory Workshop, 6-8 Jan. 2010.
[9] B. Hassibi and H. Vikalo, “On the sphere-decoding algorithm I. expected
complexity,” IEEE Trans. Signal Processing, vol. 53, no. 8-1, Aug. 2005.
[10] U. Fincke, and M. Phost, “Improved methods for calculating vectors of
short length in a lattice, including a complexity analysis,” Mathematics
on Computation, vol. 44, no. 170, pp. 463-471, Apr. 1985.
[11] E. Viterbo, and J. Boutros, “A Universal Lattice Code Decoder for
Fading Channels,” IEEE Trans. Inform. Theory, vol. 45, no. 25, pp.
1639-1642, July 1999.
[12] O. Damen, A. Chkeif, and J-C. Belﬁore, “Lattice code decoder for
space-time codes,” IEEE Comm. Letters, vol. 4, May. 2000.
[13] B. M. Hochwald and S. ten Brink, “Achieving near-capacity on a
multiple-antenna channel,” IEEE Trans. Comm., vol. 51, pp. 389-399,
Mar. 2003.
[14] S. Kahraman, and M. E. Celebi, “Fast maximum-likelihood decoding for
¸
BLAST Systems: decomposed matrix structure technique,” in Proc. 2010
IEEE Int. Symp. Personal, Indoor and Mobile Radio Comm., (Istanbul,
Turkey), p. 582-586, 2010.
[15] S. Kahraman, and M. E. Celebi, “Dimensionality reduction for the
¸
Golden code with worst-case decoding complexity of O(m2 ),” in Proc.
2011 IEEE Int. Symp. Wireless Comm. Systems, (Aachen, Germany), p.
362-366, 2011.
[16] S. Kahraman, and M. E. Celebi, “Dimensionality Reduced Decoding
¸
for the Golden Code with the Worst-case Complexity of O(m1.5 ) for
Low Range of SNR,” Proc. 2012 IEEE Wireless Communications and
Networking Conference, (Paris, France), p. 246-250, 2012.
[17] An Implementation of Fast ML Decoding for the Short Polar Codes
[Online]. Available: http://web.itu.edu.tr/kahramansi

Proposed Search Tree Meth. P(64,57)
Proposed Code Based Meth. P(64,57)
Proposed Search Tree Meth. RM(64,57)
Proposed Code Based Meth. RM(64,57)
7

Number of node visitings

10

6

10

5

10

4

10

0

1

2

3
4
EbN0 (dB)

5

6

7

Fig. 4. Expected complexities for (64,57) polar and RM codes on BPSK
channel, where exhaustive search decoder requires 8.2E18 node visitings.

R EFERENCES
[1] E. Arıkan, “Channel polarization: A method for constructing capacityachieving codes for symmetric binary-input memoryless channels,” IEEE
Trans. Inform. Theory, vol. 55, no. 7, pp. 3051-3073, 2009.
[2] E. Arıkan, and E. Telatar, “On the rate of channel polarization,” in Proc.
2009 IEEE Int. Symp. Inform. Theory, (Seul, Korea), p. 1493-1495, 2009.
[3] I. Tal, and A. Vardy, “List Decoding of Polar Codes,” in Proc. 2011
IEEE Int. Symp. Inform. Theory, (St.Petersburg, Russia), p. 1-5, 2011.
[4] E. Arıkan, “A performance comparison of polar codes and reed-muller
codes,” IEEE Comm. Letters, vol. 12, pp. 447-449, June 2008.
[5] A. Pamuk, “An FPGA Implementation Architecture for Decoding of
Polar Codes,” in Proc. 2011 IEEE Int. Symp. Wireless Comm. Systems,
(Aachen, Germany), p. 437-441, 2011.

5

