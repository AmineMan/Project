Title:          
Subject:        
Keywords:       
Author:         
Creator:        LaTeX with hyperref package
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Thu May 17 18:40:15 2012
ModDate:        Tue Jun 19 12:54:19 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      344243 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569565665

Approximately Counting the Number of
Constrained Arrays via the Sum-Product Algorithm
Farzad Parvaresh

Pascal O. Vontobel

Hewlett–Packard Laboratories
1501 Page Mill Road
Palo Alto, CA 94304, USA
farzad.parvaresh@hp.com

Hewlett–Packard Laboratories
1501 Page Mill Road
Palo Alto, CA 94304, USA
pascal.vontobel@ieee.org

25

Abstract—Very often, constrained coding schemes impose nonlinear constraints on arrays and therefore it is usually nontrivial
to determine how many arrays satisfy the given constraints.
In this paper we show that there are non-trivial constrained
coding scenarios where the number of constrained arrays can
be estimated to a surprisingly high accuracy with the help of
the sum-product algorithm, despite the fact that the underlying
factor graphs have many short cycles, and we investigate the
reasons why this is the case. These ﬁndings open up interesting
possibilities for determining the number of constrained arrays
also for scenarios where other counting and bounding techniques
are not readily available.

r
rBethe
√
ρn − δodd √
n
ρn − δeven n

Redundancy [bits]

20

15

10

5

rBethe − r [bits]

0.06
0.04

0

0.02

I. I NTRODUCTION
0
0

An important ingredient of coded data communication and
storage systems are constrained codes (see, e.g., [1] and
references therein). The main idea is to transmit or to store
only waveforms and patterns that will not be distorted too
much by the channel (even without noise), or to use waveforms
and patterns that are beneﬁcial for the operation of the
device (like minimizing wear out, etc.). For example, it is
rather suboptimal to transmit a wide-band waveform over a
channel with a low-pass characteristic. The investigations in
the present paper were motivated by families of constrained
codes that naturally arise in the area of non-volatile memristorbased crossbar memory devices [2]–[4], where such codes are
employed towards limiting the half-select problem, the energy
consumption, and the device and circuitry wear out.
The design of constrained codes encompasses the following
steps: determining the desired constraints, determining the
number of sequences or arrays that satisfy these constraints,
and ﬁnally designing efﬁcient encoders and decoders (that
often also include some error-correction control features).
This paper focuses on the second step, i.e., determining the
number of sequences or arrays that satisfy a given set of
constraints. In his seminal paper, Shannon [5] considered the
one-dimensional case and gave an explicit solution to a wide
class of constrained coding setups. In particular, he gave a
formula for determining the leading term of the number of
constrained sequences as the block length goes to inﬁnity;
however, the techniques can easily be extended to also obtain
terms beyond the leading term.
One of the constrained coding problems that we consider
in this paper is the following: counting the number of ele-

−5
0

2

4

6

n

5

8

10

10

12

15

14

16

Fig. 1. Redundancy of the set Cn (cf. Section I) and its Bethe approximation.

ments in the set Cn of n × n arrays over {0, 1} such that
no row and no column contains more than n/2 ones. For
n = 1, . . . , 15 the exact values of |Cn | are shown in Fig. 1;
actually, this ﬁgure does not show |Cn |, but the redundancy
2
r log2 2n − log2 |Cn | = n2 − log2 |Cn | w.r.t. the number
of n × n arrays over {0, 1} where no constraints are imposed.
Using results from [6], the papers [7], [8] determine the
asymptotic enumeration of |Cn | and obtain the redundancy
expression
√
(1)
r = ρn − δ n + O(log2 n),
where
ρ

2

−2 log2 Φ(x0 )e−x0 /2 ≈ 1.42515 bits

and
δ

δodd
δeven

0 bits
2x0 / ln 2 ≈ 1.46016 bits

(for odd n)
.
(for even n)

Here, Φ( · ) denotes the cumulative distribution function of the
normal distribution with zero mean and variance equal to one,
x
√1 ·
exp(−z 2 /2) dz, and x0 denotes the
i.e., Φ(x)
−∞
2π
2

constant x0
arg maxx Φ(x)e−x /2 . Moreover, efﬁcient
encoding and decoding of binary data into the set Cn is
presented in [9], [10], with an encoding redundancy of 2n.

1

Finding the size of sets like Cn can also be cast as the
computation of the so-called total sum ZG (N) of a suitable
graphical model N.1 In some cases computing the total sum is
tractable (see, e.g., [11] and references therein), but in general
the exact computation of the total sum is intractable. However,
there are methods available to approximate, or to upper and
lower bound the total sum. In the present paper we consider
the so-called Bethe approximation (BA) ZB (N) [12] to the
total sum ZG (N). This approximation is interesting because
of its connection [12] to the efﬁcient sum-product algorithm
(SPA) [13], [14]. However, in general there are no guarantees
on the quality of the BA/SPA approximation.
Figure 1 also shows the resulting redundancy estimate
rBethe n2 − log2 (ZB (N)) that is obtained by applying the
BA/SPA to a suitable normal factor graph whose underlying
topology is the complete bipartite graph with two times n
vertices. (The vertices correspond to the n row and n column
constraints and the edges correspond to the n2 entries of
the array.) It is rather remarkable that this relatively simple
approach gives such an accurate redundancy estimate for this
scenario. After all, the underlying graph is, independently of
n, highly connected and has many short cycles, i.e., the graph
is of a type where the BA/SPA is not typically expected to
perform well. In fact, for the present scenario one can show
that the BA redundancy estimate matches the true redundancy
√
in (1) at least up to and including the n term.
There are several classes of factor graphs where the BA/SPA
is known to work well (besides the case of cycle-free factor
graphs, where the Bethe approximation is exact):
• the underlying graph is sparse, and has no or very few
short cycles, and a suitable correlation decay condition is
satisﬁed (see, e.g., [15]);
• Gaussian graphical models, where all function nodes are
either Gaussian functions or subspace constraints (see,
e.g., [16]);
• graphical models where valid conﬁgurations correspond
to matchings [17] or perfect matchings [18]–[21];
• graphical models where the BA yields a provable lower
bound to the total sum (see, e.g., [22], which relates
ZB (N) to ZG (N) with the help of the loop calculus
technique [23], or [24], which relates ZB (N) to ZG (N)
with the help of (topological) graph covers [25]).
In general, however, the BA/SPA does not need to work well
as is for example discussed in [26], where graphical models are
presented that need a generalized version of the SPA (the socalled generalized belief propagation algorithm [12]) to yield
reliable results (see also [27]).
In this paper, our goal is to study the reasons why the
BA/SPA gives a very accurate estimate for the enumeration
of sets like Cn , despite the fact that the associated graphical
model is highly connected and has many short cycles. Ultimately, we also want to apply the BA/SPA to counting prob-

ae1

gf1

ae2

ae5

gf2

gf3

ae4

ae7

ae6

gf4
Fig. 2.

ae3

ae8

gf5

Normal factor graph.

lems where it is difﬁcult to efﬁciently obtain good approximations otherwise, but where one can show that the BA/SPA gives
a good estimate. For example, in the case of the permanent of
a non-negative matrix θ of size n × n (which can be cast as
summing weighted perfect matchings, and which is known to
be #P-complete), one can show that perm(θ)
permB (θ),
where permB (θ) is the BA of perm(θ); moreover, √ is
it
n
conjectured that perm(θ) χn · permB (θ), with χn = 2
√
in general and χn = O( n) with high probability for some
ensembles of matrices [21], [28].
The rest of this paper is structured as follows. Section II
reviews some important notions in the context of normal factor
graphs, Section III explores the reasons why ZB (N) is very
close to ZG (N) for the graphical models under consideration,
and Section IV offers some conclusions.
′
Note that if we deﬁne Cn to be the set of all n × n arrays
over {+1, −1} such that all row and all column sums (over
′
the integers) are at least zero, then |Cn | = |Cn |. This identity
′
is clear from the bijection between Cn and Cn that maps an
′
array in Cn to an array in Cn by applying component-wise the
mapping 0 → +1, 1 → −1. Because of didactical reasons, in
the rest of the paper we will prefer to consider binary arrays
over {+1, −1} instead of binary arrays over {0, 1}.
We will use Iverson’s notation, i.e., if S is a statement then
[S] = 1 is S if true and [S] = 0 otherwise.
II. N ORMAL FACTOR G RAPHS
This section brieﬂy reviews some key facts about normal
factor graphs (NFGs) [14], [29].
Example 1 Consider the multivariate function
g(ae1 , . . . , ae8 )

gf1 (ae1 , ae2 , ae5 ) · gf2 (ae2 , ae3 , ae6 )

· gf3 (ae3 , ae4 , ae7 ) · gf4 (ae5 , ae6 , ae8 )
· gf5 (ae7 , ae8 ),

where the so-called global function g is the product of the
so-called local functions gf1 , gf2 , gf3 , gf4 , and gf5 . The
decomposition of this global function as a product of local
functions can be depicted with the help of an NFG as shown
in Fig. 2. In particular, the NFG in Fig. 2 consists of
• the function nodes f1 , f2 , f3 , f4 , and f5 ;
• the half edges e1 and e4 (sometimes also called “external
edges”), with associated variables ae1 and ae4 (“external
variables”).
• the full edges e2 , e3 , e5 , e6 , e7 , and e8 (sometimes also
called “internal edges”), with associated variables ae2 ,
ae3 , ae5 , ae6 , ae7 , and ae8 (“internal variables”).

1 The “total sum” of N is often called the “partition function” of N. If the
alphabet of a variable is R (or an interval of R) then the summation is replaced
by a suitable integration. Note that “G” in ZG (N) refers to “Gibbs,” as we
will see in Section II.

2

In general, for an NFG N,
•

•

•

•

•

•
•
•
•
•

•

the set of function nodes is denoted by F;
a function node f ∈ F represents the local function gf
(here with co-domain R 0 );
the set of half edges is denoted by Ehalf ;
the set of full edges is denoted by Efull ;
the set of all edges is denoted by E Ehalf ∪ Efull ;
with an edge e ∈ E we associate the variable Ae with
alphabet Ae and realization ae ;
an edge e is incident on a function node f if and only if
ae appears as an argument of the local function gf ;
we deﬁne the alphabets Ahalf
e∈Ehalf Ae , Afull
Ae , and A Ahalf × Afull ;
e∈Efull
we deﬁne the global function of N to be g : A → R 0 ,
a → f ∈F gf (af ), where af (ae )e is incident on f ;
we deﬁne the total sum of N to be ZG (N)
a g(a);
an element a ∈ A is called a conﬁguration; if g(a) = 0
then a is called a valid conﬁguration.

g0
Ai
gi Ai,j gi,j Aj,i gj
(a)
Fig. 3.

TABLE I
T HE TOTAL SUMS AND THEIR APPROXIMATIONS UNDER CONSIDERATION .

Consider the n · (n − 1)/2 i.i.d. random variables (Ui,j )i<j ,
where Ui,j has normal distribution with mean 0 and variance
σ 2 . For i = j we deﬁne Ui,j
0 and for i > j we
deﬁne Ui,j
Uj,i . Moreover, let Ri
j Ui,j . This set of
random variables was studied by McEliece and Posner [30],

ZG (Ng,n )

ZB (Nb,n )

B. The NFG Ng,n

NFG Ng,n

BA of total sum

NFGs that are studied in Section III. (Here n = 5.)

Consider the set M of all symmetric n × n arrays with
entries in {+1, −1} and zeros in the diagonal; clearly |M| =
2n(n−1)/2 . We are interested in the size of the constrained code
Cn given by all arrays C = (ci,j )i,j ∈ M whose row and
columns sums (over the integers) are at least zero. (Because
of the symmetry of the arrays, it is clear that enforcing only
the row constraints is sufﬁcient.)
Consider now the NFG Nb,n , which is speciﬁed as follows,
see Fig. 3(a): the variable alphabets are Ai,j
{+1, −1}
and the local functions gi,j are deﬁned to be gi,j (ai,j , aj,i )
1/2 · [ai,j = aj,i ]. Because for every valid conﬁguration of
Nb,n we have ai,j = aj,i , we will in the following identify
ai,j and aj,i . Finally, the local functions gi are deﬁned to
0 . Clearly, there is a bijection
be gi (ai )
j: j=i ai,j
between the set Cn and the set of valid conﬁgurations of Nb,n ,
and it can be veriﬁed that the |Cn |/|M| = ZG (Nb,n ).3

The purpose of this section is to study a certain NFG Nb,n
with binary variables, whose total sum ZG (Nb,n ) is related to
the size of some constrained code Cn with parameter n. We
want to understand why the BA ZB (Nb,n ) is rather close to
the true value. To that end, it will be helpful to also study an
NFG Ng,n with the same topology but with different function
nodes. Its total sum is denoted by ZG (Ng,n ), whereas its BA
is denoted by ZB (Ng,n ).2 These total sums and their BAs are
summarized in Table I.

ZG (Nb,n )

gj
(b)

A. The NFG Nb,n

III. A C ASE S TUDY

total sum

gi

This section is structured as follows. First we introduce
the NFGs Nb,n and Ng,n and afterwards we discuss various
connections between Nb,n and Ng,n that explain why the total
sums and their approximations in Table I are very close to
each other. (For simplicity, in the present discussion we only
keep track of the leading terms.) Throughout this section we
will see the importance of the constants x0 and ρ that also
played a key role for the setup considered in Section I.
In the rest of this section, n will denote an arbitrary positive
integer, and i and j will be elements of the set {1, . . . , n}. We
warn the reader that variables and function nodes in upcoming
drawings of NFGs can have different meanings depending on
the context. Moreover, a local function in one NFG does not
necessarily represent the same local function in another NFG,
also if they have the same name.

The total sum ZG (N) can be expressed in terms of the socalled Gibbs free energy function FG,N . Namely, ZG (N) =
exp − minp FG,N (p) , where the minimization is over all
probability mass functions over A (see, e.g., [12]).
The Bethe approximation (BA) of the Gibbs free energy
function FG,N is called FB,N and the BA of the total sum
ZG (N) is deﬁned to be ZB (N) exp − minβ FB (β) , where
the minimization is over all vectors in the local marginal
polytope of N. For more details on these functions we refer
to, e.g., [12]; for a discussion of these functions in the context
of NFGs we refer to, e.g., [25]. The BA is interesting because
the sum-product algorithm (SPA) [13], [14] can be used to
efﬁciently ﬁnd the minimum of FB (or at least a stationary
point of FB ), cf. [12].

NFG Nb,n

Aj

µ′i,j µi,j

ZB (Ng,n )

3 Omitting the factor 1/2 in the deﬁnition of g
i,j implies that |Cn | =
ZG (Nb,n ). However, we prefer the former deﬁnition towards a tighter
connection with Ng,n .

2 The index “b” in N
b,n refers to the fact that the variable alphabets in
Nb,n are binary. The index “g” in Ng,n refers to the fact that most function
nodes in Ng,n represent Gaussian functions.

3

who showed that 2n · Pr(R1 0, . . . , Rn 0) represents the
expected number of stable points of a certain inﬁnite-range
spin-glass memory with n spins [30].
Consider now the NFG Ng,n , whose topology is also given
by Fig. 3(a) and which is speciﬁed as follows: the variable
alphabets are Ai,j R and the local functions gi,j are deﬁned
√
to be gi,j (ai,j , aj,i ) (1/ 2π) · exp(−a2 /2) · [ai,j = aj,i ].4
i,j
Because for every valid conﬁguration of Ng,n we have ai,j =
aj,i , we will in the following identify ai,j and aj,i . Finally, the
0 .
local functions gi are deﬁned to be gi (ai )
j: j=i ai,j
One can verify that Pr(R1 0, . . . , Rn 0) = ZG (Ng,n ).

E. Connection between ZB (Nb,n ) and ZB (Ng,n )
In this section we discuss the closeness of ZB (Nb,n ) to
ZB (Ng,n ). For obtaining ZB (Nb,n ), we must ﬁnd the relevant
ﬁxed point of the SPA and evaluate the Bethe free energy
FB,Nb,n at this ﬁxed point; a similar statement holds for
ZB (Ng,n ).
For ﬁnite n, this can be done numerically, as was done for
obtaining the BA redundancy values in Fig. 1 for the counting
problem that is discussed in Section I. (This computation
is vastly simpliﬁed by using the inherent symmetries of the
relevant NFG.)
For large n we can show analytically why ZB (Nb,n ) is
very close to ZB (Ng,n ). (As mentioned at the beginning of
Section III, here we only show how to obtain the leading order
terms.) Towards doing this, let us ﬁrst investigate the NFG
Nb,n . Consider the SPA ﬁxed-point messages {µi,j (ai,j )}i,j
and {µ′ (ai,j }i,j as shown in Fig. 3(a). By symmetry we
i,j
can assume that there are functions µ, µ′ : {+1, −1} → R 0
such that µi,j (a) = µ(a) and µ′ (a) = µ′ (a). (We omit the
i,j
details showing that the relevant SPA ﬁxed point satisﬁes this
symmetry.) Then µ′ (a) must be related to µ(a) by the SPA
ﬁxed-point equations

C. The Total Sum ZG (Ng,n )
The paper [30] presents a neat trick to analyze Pr(R1
0, . . . , Rn
0). Namely, the authors introduce n + 1 new
i.i.d. Gaussian random variables V0 , V1 , . . . , Vn such that the
random vector V0 + (V1 , . . . , Vn ) has the same mean vector
and covariance matrix (and therefore the same distribution)
as the random vector (R1 , . . . , Rn ). (This can be achieved by
setting V0 to have mean 0 and variance σ 2 and by setting Vi ,
1 i n, to have mean 0 and variance (n − 2) · σ 2 . In terms
of NFGs, this reformulation can be represented by the NFG in
Fig. 3(b) (where g0 and gi are suitably deﬁned local functions;
the latter different from gi in Fig. 3(a)). The interpretation of
the trick in [30] in terms of NFGs is as follows: the new NFG
is deﬁned such that the total sum of the new NFG equals the
total sum of the old NFG, but, most importantly, the new NFG
does not have cycles!
For n → ∞, the analysis in [30] shows that the integral
Pr(V0 + V1 0, . . . , V0 + Vn 0 | V0 = v0 ) · p(v0 ) dv0 =
v0
Pr(R1 0, . . . , Rn 0) is dominated by the contribution of
√
v0 very close to σ · x0 / n − 2, where x0 has the same value
as x0 in Section I. With this key role played by x0 , it is not
surprising that ρ appears in the leading terms of ZG (Ng,n ).

n−2

µ′ (a) ∝
µ(a) ∝

r 0

det 2πΣR

√

a
a
Φ′ (γn )
√
≈ Φ(γn ) · exp
,
Φ(γn ) n − 2
n−2
where Φ was introduced in Section I. Finally, it can be shown
that γn → x0 , where x0 was deﬁned in Section I.
Let us now investigate the SPA ﬁxed-point equations for
Ng,n . Without going into the details, by symmetry we can
assume that there are functions µ, µ′ : R → R 0 such that
µi,j (a) = µ(a) and µ′ (a) = µ′ (a), and so
i,j
≈

1
· exp − r T Σ−1 r dr,
R
2

n−2

µ′ (a) ∝

[a+a1 +· · ·+an−2

0] ·

a2
1
exp − 2
µ(a) ∝ µ′ (a) · √
2σ
2πσ

where ΣR is the covariance matrix of the random vector R
(R1 , . . . , Rn ). We now want to argue why ZG (Nb,n ) is close
to ZG (Ng,n ). Namely, using the results of [31]–[33], along
with techniques analogous to techniques used in [7], [8], the
total sum ZG (Nb,n ) can be written as the sum of two terms.
The ﬁrst term is a discrete version of the above integral for
vectors r that give the dominant contribution to the integral.
In the limit n → ∞ the approximation of the integral by the
discrete version becomes better and better. The second term
can be bounded by simple lower and upper bounds whose
values are negligible compared to the ﬁrst term.
4 Here,

√

µ(ai ),
i=1

µ(a) ∝ Φ γn + √

Note that the total sum of Ng,n can be written as the
following integral
1

1 ′
· µ (a).
2

0] ·

1+γn / n−2
1−γn / n−2
W.l.o.g., µ(+1)
and µ(−1)
for
2
2
some γn , and so the above ﬁxed-point equations can, in the
limit n → ∞, be approximated by

D. Connection between ZG (Nb,n ) and ZG (Ng,n )

ZG (Ng,n ) =

a1 ,...,an−2

[a+a1 +· · ·+an−2

µ(ai ) dai ,
i=1

.

√
1
¯
The ansatz µ(a) = √2πσ · exp −(a/σ − γn / n − 2)2 /2
leads to
a/σ
Φ′ (¯n ) a/σ
γ
√
µ′ (a) ∝ Φ γn + √
¯
≈ Φ(¯n ) · exp
γ
,
Φ(¯n ) n − 2
γ
n−2
One can show that in the limit n → ∞ this ansatz for µ for
obtaining the leading term is justiﬁed and one gets γn → x0 .
¯
Given the appearance of x0 in both cases, it is not surprising
to ﬁnd, after doing the relevant computations, that the leading
terms of ZB (Nb,n ) and ZB (Ng,n ) will be expressed in terms
of the constant ρ, and are actually the same.

[ai,j = aj,i ] represents a suitable Dirac function.

4

F. Connection between ZG (Ng,n ) and ZB (Nb,n ), ZB (Ng,n )
In order to establish the closeness of ZG (Ng,n ) to ZB (Nb,n )
and ZB (Ng,n ) we use (topological) graph covers. Graph covers
were used in [25] to give a combinatorial characterization of
the BA of the total sum of a graphical model. Applying these
results to Nb,n , one obtains
ZB (Nb,n ) = lim sup
M →∞

M

ZG (N)

N∈Nb,n,M

[10] ——, “Low complexity two-dimensional weight-constrained codes,”
submitted to IEEE Trans. Inf. Theory, Sep. 2011.
[11] V. Y. Chernyak and M. Chertkov, “Planar graphical models which are
easy,” J. Stat. Mech.: Theory and Experiment, p. P11007, Nov. 2010.
[12] J. S. Yedidia, W. T. Freeman, and Y. Weiss, “Constructing free-energy
approximations and generalized belief propagation algorithms,” IEEE
Trans. Inf. Theory, vol. 51, no. 7, pp. 2282–2312, Jul. 2005.
[13] F. R. Kschischang, B. J. Frey, and H.-A. Loeliger, “Factor graphs and
the sum-product algorithm,” IEEE Trans. Inf. Theory, vol. 47, no. 2, pp.
498–519, Feb. 2001.
[14] H.-A. Loeliger, “An introduction to factor graphs,” IEEE Sig. Proc. Mag.,
vol. 21, no. 1, pp. 28–41, Jan. 2004.
[15] V. Chandrasekaran, M. Chertkov, D. Gamarnik, D. Shah, and J. Shin,
“Counting independent sets using the Bethe approximation,” SIAM J.
Discr. Math., vol. 25, no. 2, pp. 1012–1034, 2011.
[16] Y. Weiss and W. T. Freeman, “Correctness of belief propagation in
Gaussian graphical models of arbitrary topology,” Neural Computation,
vol. 13, no. 10, pp. 2173–2200, Oct. 2001.
[17] M. Bayati and C. Nair, “A rigorous proof of the cavity method for
counting matchings,” in Proc. 44th Allerton Conf. on Communications,
Control, and Computing, Allerton House, Monticello, IL, USA, Sep. 27–
29 2006.
[18] M. Chertkov, L. Kroc, and M. Vergassola, “Belief propagation and
beyond for particle tracking,” CoRR, available online under http://
arxiv.org/abs/0806.1199, Jun. 2008.
[19] B. Huang and T. Jebara, “Approximating the permanent with belief propagation,” CoRR, available online under http://arxiv.org/abs/
0908.1769, Aug. 2009.
[20] M. Chertkov, L. Kroc, F. Krzakala, M. Vergassola, and L. Zdeborov´ ,
a
“Inference in particle tracking experiments by passing messsages between images,” Proc. Natl. Acad. Sci., vol. 107, no. 17, pp. 7663–7668,
Apr. 2010.
[21] P. O. Vontobel, “The Bethe permanent of a non-negative matrix,” accepted for IEEE Trans. Inf. Theory, available online under
http://arxiv.org/abs/1107.4196, Jan. 2012.
[22] E. B. Sudderth, M. J. Wainwright, and A. S. Willsky, “Loop series
and Bethe variational bounds in attractive graphical models,” in Proc.
Neural Information Processing Systems Conference, Vancouver, Canada,
Dec. 3–8 2007.
[23] M. Chertkov and V. Y. Chernyak, “Loop series for discrete statistical
models on graphs,” J. Stat. Mech.: Theory and Experiment, p. P06009,
Jun. 2006.
[24] N. Ruozzi, “The Bethe partition function of log-supermodular graphical
models,” CoRR, available online under http://arxiv.org/abs/
1202.6035, Feb. 2012.
[25] P. O. Vontobel, “Counting in graph covers: a combinatorial characterization of the Bethe entropy function,” submitted to IEEE Trans. Inf. Theory,
available online under http://arxiv.org/abs/1012.0065,
Nov. 2010.
[26] O. Shental, N. Shental, S. Shamai (Shitz), I. Kanter, A. J. Weiss,
and Y. Weiss, “Discrete-input two-dimensional Gaussian channels with
memory: estimation and information rates via graphical models and
statistical mechanics,” IEEE Trans. Inf. Theory, vol. 54, no. 4, pp. 1500–
1513, Apr. 2008.
[27] G. Sabato and M. Molkaraie, “Generalized belief propagation for the
noiseless capacity and information rates of run-length limited constraints,” IEEE Trans. Commun., vol. 60, no. 3, pp. 669–675, Mar. 2012.
[28] L. Gurvits, “Unleashing the power of Schrijver’s permanental inequality
with the help of the Bethe approximation,” Elec. Coll. Comp. Compl.,
Dec. 2011.
[29] G. D. Forney, Jr., “Codes on graphs: normal realizations,” IEEE Trans.
Inf. Theory, vol. 47, no. 2, pp. 520–548, Feb. 2001.
[30] E. C. Posner and R. J. McEliece, “The number of stable points of an
inﬁnite-range spin glass memory,” JPL, TDA Progress Report, vol. 42–
83, pp. 209–215, Jul.–Sep. 1985.
[31] B. D. McKay and N. C. Wormald, “Asymptotic enumeration by degree
sequence of graphs of high degree,” Euro. J. Combin., vol. 11, no. 6,
pp. 565–580, Nov. 1990.
[32] O. Riordan and A. Selby, “The maximum degree of a random graph,”
Comb. Probab. Comput., vol. 9, no. 6, pp. 549–572, Apr. 2000.
[33] B. D. McKay, I. M. Wanless, and N. C. Wormald, “Asymptotic enumeration of graphs with a given bound on the maximum degree,” Comb.
Probab. Comput., vol. 11, no. 14, pp. 373–392, Sep. 2002.

,

where the term in angular brackets represents the average of
the total sum of N, where the average is taken over all M -fold
covers of Nb,n . Without going into the details, the constants
x0 and ρ play again a key role in evaluating the right-hand
side of the above expression, ultimately showing the closeness
of ZB (Nb,n ) to ZG (Ng,n ). Similar investigations can be made
w.r.t. ZB (Ng,n ).
IV. C ONCLUSIONS
In this paper we have presented some classes of NFGs
for which the Bethe approximation to the total sum works
surprisingly well, and for a particular binary graphical model
we have analyzed in more detail the reasons for this behavior.
Interestingly, an associated graphical model with Gaussian
local functions played a key role in this analysis.
Note that similar techniques can be used to analyze the BA
of the graphical model that is discussed in Section I. Although
there does not appear to be a trick similar to the one that was
used in Section III-C to analyze the total sum of the associated
graphical model with Gaussian local functions, more elaborate
techniques can be used to handle the total sum of that graphical
model.
ACKNOWLEDGMENT
We gratefully acknowledge our colleague Ronny Roth for
providing us the exact redundancy values shown in Fig. 1.
R EFERENCES
[1] K. A. S. Immink, P. H. Siegel, and J. K. Wolf, “Codes for digital
recorders,” IEEE Trans. Inf. Theory, vol. 44, no. 6, pp. 2260–2299, Oct.
1998.
[2] P. O. Vontobel, W. Robinett, P. J. Kuekes, D. R. Stewart, J. Straznicky,
and R. S. Williams, “Writing to and reading from a nano-scale crossbar
memory based on memristors,” Nanotechnology, vol. 20, no. 42, p.
425204, Oct. 2009.
[3] E. Ordentlich, G. Ribeiro, R. M. Roth, G. Seroussi, and P. O. Vontobel,
“Coding for limiting current in memristor crossbar memories,” in Proc.
2nd Annual Non-Volatile Memories Workshop, UC San Diego, La Jolla,
CA, USA, Mar. 6–8 2011.
[4] D. B. Strukov and R. S. Williams, “Four-dimensional address topology
for circuits with stacked multilayer crossbar arrays,” Proc. Natl. Acad.
Sci., vol. 106, no. 48, pp. 20 155–20 158, Dec. 1 2009.
[5] C. E. Shannon, “A mathematical theory of communication,” Bell Syst.
Tech. J., vol. 27, pp. 379–423, 623–656, July/Oct. 1948.
[6] E. R. Canﬁeld, C. Greenhill, and B. D. McKay, “Asymptotic enumeration
of dense 0–1 matrices with speciﬁed line sums,” J. Comb. Theory A, vol.
115, no. 1, pp. 32–66, Jan. 2008.
[7] E. Ordentlich, F. Parvaresh, and R. Roth, “Asymptotic enumeration of
binary matrices with bounded row and column weights,” in Proc. IEEE
Int. Symp. Inf. Theory, St. Petersburg, Russia, Jul. 31–Aug. 5 2011, pp.
154–158.
[8] ——, “Asymptotic enumeration of binary matrices with bounded row
and column weights,” submitted to SIAM J. Discr. Math., 2011.
[9] E. Ordentlich and R. M. Roth, “Low complexity two-dimensional
weight-constrained codes,” in Proc. IEEE Int. Symp. Inf. Theory, St. Petersburg, Russia, Jul. 31–Aug. 5 2011, pp. 149–153.

5

