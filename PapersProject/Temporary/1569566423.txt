Title:          WOM_with_retained_messages_final_submittion_Lele_v1.3.pdf
Author:         Minghai
Creator:        Adobe Acrobat 9.0.0
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Thu May 17 21:35:46 2012
ModDate:        Tue Jun 19 12:55:07 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      519924 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569566423

WOM with Retained Messages
Lele Wang∗, Minghai Qin∗ , Eitan Yaakobi∗† , Young-Han Kim∗ , Paul H. Siegel∗
† California Institute of Technology
University of California, San Diego
Electrical and Computer Engineering Department Electrical Engineering Department
∗

1st
Abstract—Write-once memory (WOM) is a binary storage write
medium in which each memory cell is initially in state 0 and
can be irreversibly programmed to state 1. This paper studies
the problem of writing multiple messages into a WOM. Instead
of writing a new message (and obliterating old ones) as in the 2nd
traditional setup, the user wishes to retain access to some of the write
previously written messages. The capacity region is studied and
code constructions are proposed for three canonical cases.

I. I NTRODUCTION AND M AIN R ESULTS
As part of the tremendous increase in coding research for
the ubiquitous ﬂash memories, a considerable attention has
been given to rewriting codes. The motivation comes from the
special physical properties of the ﬂash memory ﬂoating-gate
cells, the most conspicuous of which is the asymmetric programming behavior of the cells [1]. The memory cells can
only increase their level by the injection of electrons to each
cell. However, in order to decrease the level of even a single cell, its entire containing block (∼ 106 cells) has to be
erased. This undesired property not only reduces the writing
speed but also signiﬁcantly affects the lifetime of ﬂash memories, which is often speciﬁed in terms of a maximum number
of block erasures [1]. As this number can be as low as a few
hundreds or thousands, reducing the number of block erasures
becomes critical in improving the lifetime of ﬂash memories.
The idea of rewriting codes dates back to the pioneering work [10] by Rivest and Shamir on write-once memory
(WOM) in 1982. The motivation came from storage media
such as punch cards and ablative optical disks. These media are modeled as a collection of write-once binary cells,
where each cell is initially in state 0 and can be irreversibly
programmed to state 1. Figure 1 shows a typical model for
rewriting t times on a binary WOM.
An [n, t; 2nR , . . . , 2nR ] WOM code consists of
nR
], . . . , [1 : 2nR ],
• t message sets [1 : 2
• t encoders, where encoder i ∈ [1 : t] for the i-th write
assigns a codeword xi = Ei (mi , yi−1 ) ∈ {0, 1}n (y0 =
∅) to each message mi ∈ [1 : 2nR ] and the cell levels
yi−1 from the previous write, and
• t decoders, where decoder i ∈ [1 : t] assigns an estimate
mi = Di (yi ) or an error e to the cell levels yi from the
ˆ
i-th write.
The notation [i : j] denotes the set {k ∈ Z : i k j}.
The average probability of error of the WOM code is deﬁned
ˆ
ˆ
as Pe(n) = P{(M1 , . . . , Mt ) = (M1 , . . . , Mt)}. A rate tuple
(R1 , . . . , Rt ) is said to be achievable for the WOM if there exists a sequence of [n, t; 2nR , . . . , 2nR ] WOM codes such that
(n)
limn→∞ Pe = 0. The capacity region CWOM (t) is the closure of the set of all achievable rate tuples (R1 , . . . , Rt ). The
sum-capacity Csum (t) of WOM is the maximum achievable
sum-rate t Rj . A sequence of WOM codes is said to be
j=1
1

t-th
write

X1

n-cell

WOM

Y1

Decoder 1

ˆ
M1

M2

Encoder 2

X2

n-cell

WOM
..
.

Y2

Decoder 2

ˆ
M2

Yt

Decoder

ˆ
Mt

Mt

Xt

Encoder t

n-cell

WOM

t

Fig. 1. A t-write WOM model

sum-rate optimal if its sum-rate approaches the sum-capacity

in the limit.
The capacity region as well as the sum-capacity for the
WOM model is well studied in the literature [3], [5]; for example, it is known that the t-write sum-capacity is Csum (t) =
log2 (t + 1) and the capacity region is
CWOM (t) = (R1 , . . . , Rt )|R1

H(p1 ),

i−1

Ri

pk
k=1
t−1

Rt

pk

H(pi ), i ∈ [2 : t − 1],

1
for some p1 , . . . , pt−1 ∈ [ 2 , 1]

.

k=1

Furthermore, many code constructions have been found
(e.g., [8], [12], [13]), the sum-rates of which are close to the
sum-capacity.
Following the work by Rivest and Shamir on the binary
WOM, many papers on WOM codes appeared during the
1980s and 1990s, (e.g., [2], [3], [5], [11]) as well as in the
past few years (e.g., [4], [6], [8], [9], [12]). Among all of
the existing models for rewriting on ﬂash memories, one assumes that a new message is stored in the memory on each
write, effectively overwriting previously written messages.
This can be a drawback in some applications, however, if
the user wishes to retain access to one or more previously
written messages. For example, suppose that a police station
keeps trafﬁc surveillance videos for up to a certain amount of
time, say 30 days. This requires that the most current video
as well as the videos from the previous 29 days be retrievable
at any time. If the entire set of 30 daily videos are treated as
a completely new message to be written on top of the existing content of the memory cells, the writing efﬁciency will
be low, because the same message is being written multiple
times via different codewords.
This motivates the model of rewriting ﬂash memories with
retained messages. This model is related to the work on buffer

t

i

1

Encoder 1

Yt−1

t

1

M1

t

1

codes and trajectory codes [6], [7], which are capable of remembering the most recent values stored in the memories. To
make the problem simple, in this paper we consider rewriting
on a binary WOM, where after each write the current message
and some of the previously written messages need to be retrievable. We aim to characterize the optimal rate tradeoff and
ﬁnd code constructions focusing on three concrete problems
motivated by different scenarios in real storage systems.
In Section II, we formulate the problem of retaining two
days of video surveillance as follows.

roughly 1 log2 (t) in the worst case scenario. Can we do better
2
than this? In Section III, we construct a code by enlarging the
number of blocks, and we show that it can strictly outperform
the above code. Moreover, it is shown to be asymptotically
optimal in t. A simple outer bound on the capacity region and
an upper bound on the sum-capacity are also presented.
Now we introduce the last problem. Suppose the surveillance videos are layered as high-ﬁdelity and low-ﬁdelity ones,
e.g., encoded by the H.264 standard. On each day, all lowﬁdelity videos from previous days and the high-ﬁdelity video
from the current day should be stored. This motivates the following.

Problem 1. Consecutive two-step WOM

On the i-th write, i ∈ [1 : t], encoder i stores (Mi−1 , Mi )
Problem 3. Incremental WOM
(M0 = ∅) and decoder i has to recover both messages.
We rewrite each message Mi , i ∈ [1 : t], as two independent
By ignoring the correlation between message pairs over parts: the common message Mic ∈ [1 : 2nR ] and the private
multiple writes and treating (Mi−1 , Mi ) as a new message, message Mip ∈ [1 : 2nR ], i.e., Mi = (Mic , Mip ). On the i1
one can achieve roughly 2 log2 (t + 1) in sum-rate using a th write, encoder i stores all the previous common messages
c
c
traditional WOM code, since every Mi , i ∈ [1 : t − 1], is writ- and its own full message, i.e., (M1 , M2 , . . . , Mic , Mip ), and deten twice. Is this optimal? We establish in Theorem 1 that coder i has to recover all of them.
the sum-capacity of the consecutive two-step WOM model is
t
One extreme special case of this problem is Mic = ∅, i ∈
log2 2 + 1 , which can be twice as large as 1 log2 (t + 1)
2
for large t. How can we fully exploit the correlation among [1 : t], i.e., there is no common message. Then we go back to
messages? We propose in Construction 1 a very simple code, theptraditional t-write WOM. The other extreme special case is
which turns out to be sum-rate optimal. The idea is to parti- Mi = ∅, i ∈ [1 : t], i.e., there is no private message. Since all
tion the set of n cells into two blocks and to update the new the previously written messages have to be recoverable by the
message alternately on the two blocks, as shown in Table I. current decoder, the performance is fundamentally limited by
An outer bound on the capacity region for general t is also the last write. It can be tshown that the capacity region for this
extreme problem is i=1 Ri 1. Thus, an obvious choice
derived.
TABLE I
to maximize the sum-rate is to set all the common-message
W RITING ARRANGEMENT OF THE CONSECUTIVE 2- STEP WOM CODE
rates to be zero and the sum-capacity is readily established as
log2 (t + 1). In Section IV, we establish the optimal trade-off
block 1 block 2
c
c
1st write
M1
between the common-message sum-rate Rsum := n Ri
i=1
n
p
2nd write
M1
M2
p
and the private-message sum-rate Rsum := i=1 Ri . More3rd write
M3
M2
3
over, we investigate the symmetric sum-capacity Cssum (t), de4th write
M3
M4
p
c
5th write
M5
M4
ﬁned as the maximum achievable sum-rate when R1 = R1 =
p
p
c
c
R2 = R2 = · · · = Rt = Rt = R.
Now suppose the police station wishes to keep track of the
Since the problem formulation is apparently a combination
video from the most recent day on which there was a trafﬁc of two completely solved extreme problems, one might think
accident, as well as the trafﬁc video for the current day. Since that a time-sharing strategy between the two optimal coding
the trafﬁc accident is unpredictable, we cannot tell which part schemes would be optimal. Surprisingly, in Section IV, we
of the video will be kept for the next day until the end of construct a code that strictly outperforms the time-sharing code
the current day. This is the situation in which the retrievable and is asymptotically optimal in t. The performance of this
message for the next write can be an arbitrary one from the construction is illustrated in Figure 2.
two messages currently written in the memory. To be more
II. C ONSECUTIVE T WO -S TEP WOM
concrete, we formulate the problem as follows.
In this section we establish the sum-capacity as well as an
Problem 2. Arbitrary two-step WOM
On the ﬁrst write, encoder 1 stores message M1 and decoder 1 outer bound and an inner bound on the capacity region for the
has to recover M1 . On the i-th write, i ∈ [2 : t], encoder i consecutive two-step WOM deﬁned in Problem 1.
stores (Ms(i) , Mi ), where Ms(i) ∈ {Ms(i−1) , Mi−1 } is arbi- Proposition 1.(Outer bound on the capacity region) If a rate
trarily chosen from the two messages stored on the (i − 1)-st tuple (R1 , R2 , . . . , Rt ) is achievable for the t-write consecutive two-step WOM, it must satisfy R1 H(Y1 ), R1 + R2
write, and decoder i has to recover both messages.
c
i

p
i

H(Y2 ), R2 + R3

H(Y3 |Y1 ), R3 + R4

H(Y4 |Y2 ), . . . ,

For this problem, an idea arises naturally from the construc- Rt−1 + Rt H(Yt |Yt−2 ) for some pmf p(x1 )p(x2 |y1 ) · · ·
tion for the consecutive two-step WOM. With Table I in mind, p(xt |yt−1).
we store M1 and M2 the same way as before for the ﬁrst two
writes. If (M1 , M3 ) is stored on the third write, we update M3 Proposition 2.(Inner bound on the capacity region) For
′
′
on block 2. If instead (M2 , M3) is stored on the third write, even t, let s = t/2. If two rate tuples (R1 , . . . , Rs ) and
′′
′′
we update M3 on block 1. It can be shown that the sum-rate is (R1 , . . . , Rs ) are achievable for the s-write WOM, then for

2

¯
all λ ∈ [0, 1], with λ = 1 − λ, the rate tuple (R1 , . . . , Rt ) =
′ ¯ ′′
′ ¯ ′′
′ ¯ ′′
(λR1 , λR1 , λR2 , λR2 , . . . , λRs , λRs ) is achievable for the
t-write consecutive two-step WOM.
′
′
For odd t, let s = (t − 1)/2. If the rate tuple (R1 , . . . , Rs+1 )
is achievable for the (s + 1)-write WOM and the rate
′′
′′
tuple (R1 , . . . , Rs ) is achievable for the s-write WOM,
then for all λ ∈ [0, 1], the rate tuple (R1 , . . . , Rt ) =
′ ¯ ′′
′ ¯ ′′
′ ¯ ′′
′
(λR1 , λR1 , λR2 , λR2 , . . . , λRs , λRs , λRs+1 ) is achievable
for the t-write consecutive two-step WOM.

′
′
¯ ′′
Rt = s λRi + s λRi = s Ri . Therefore,
i=1
i=1
i=1
if and C2 are sum-rate optimal, then C achieves the sumt
capacity log2 ( 2 + 1). For odd t, a consecutive two-step WOM
t
i=1
C1

code can be constructed similarly.
III. A RBITRARY T WO -S TEP WOM
In this section we study the arbitrary two-step WOM deﬁned in Problem 2. Note that if a WOM code C is a t-write
arbitrary two-step WOM code, then we can construct from
it a t-write consecutive two-step WOM code. Therefore, the
2
sum-capacity Csum (t) of the arbitrary two-step WOM is upper
t
2
1
bounded as Csum (t) Csum (t) = log2 ( 2 + 1).
Now we give a construction that strictly outperforms the
1
construction in the introduction and achieves 2/3 of Csum (t)
of the consecutive two-step WOM, while keeping track of arbitrary messages as required. Partition the set of all cells into
three blocks as illustrated in Table II. In the ﬁrst two blocks,
we write in the exactly same manner as for the consecutive
two-step WOM. The third block is updated with Ms(i) every
other write to help retrieve the desired message of the arbitrary demand. This can be improved by further enlarging the
number of blocks as given in Construction 2.

The above outer and inner bounds coincide at the sumrate and establish the sum-capacity of the consecutive two-step
WOM for every t.
1
Theorem 1. The sum-capacity Csum (t) of the t-write consecutive two-step WOM is
1
Csum (t) = log2

t
+1 .
2

Due to space limitations, we skip the proofs. In the following, we give a code construction1 for even t, which is sum-rate
optimal. It also serves as part of the proof for Proposition 2.
Partition the set of all cells into two blocks and write odd messages to one block on odd writes and even messages to the
other block on even writes, as shown in Table I. Thus, each
block of cells can reliably store t/2 messages using a traditional (t/2)-write WOM code and decoder i can recover both
messages (Mi−1 , Mi ) stored in the two blocks.
Construction 1 Let t and n be positive integers, with t even,
¯
and let λ ∈ [0, 1] such that λn is an integer. Let λ = 1 − λ
and s = t/2. Suppose that the cell levels after the i-th
′
′′
′
′′
write, i ∈ [1 : t], are (yi , yi ), where yi and yi denote
blocks of lengths λn and (1 − λ)n, respectively. Let C1 be
a [λn, s; 2λnR , . . . , 2λnR ] WOM code of length λn with
′
encoder Ei′ (mi , yi−1 ), mi ∈ [1 : 2λnR ], on the i-th write,
¯
¯
¯
i ∈ [1 : s]. Let C2 be a [λn, s; 2λnR , . . . , 2λnR ] WOM code
¯
¯ with encoder E ′′ (mi , y′′ ), mi ∈ [1 : 2λnR ], on
of length λn
i
i−1
′
¯ ′′
the i-th write, i ∈ [1 : s]. Let R2i−1 = λRi and R2i = λRi ,
nR
nR
∀i ∈ [1 : s]. An [n, t; 2
, . . . , 2 ] consecutive two-step
WOM code C of length n is constructed as follows. The
cells are partitioned into block 1 with length λn and block 2
¯
with length λn. On the i-th write, the encoder i assigns the
codeword xi = (x′i , x′′ ) as follows:
i
1) For odd i = 2j − 1, write message mi ∈ [1 : 2nR ] to
block 1 using the encoder on the j -th write from C1 and
keep block 2 unchanged, i.e.,
′
′
x′ = Ej (mi , yi−1 ).
i
2) For even i = 2j , write message mi ∈ [1 : 2nR ] to block
2 using the encoder on the j -th write from C2 and keep
block 1 unchanged, i.e.,
′′
′′
x′′ = Ej (mi , yi−1 ).
i
It can be seen that C is a consecutive two-step WOM code.
′
′′
If Ri = Ri , ∀i ∈ [1 : s], the sum-rate of C in Construction 1 is
′
1

TABLE II
W RITING ARRANGEMENT OF THE ARBITRARY 2- STEP WOM CODE

′
i

′′
s

′

′′
i

1

block 2

block 3

M1
M1
M3
M3
M5

M2
M2
M4
M4

Ms(2)
Ms(2)
Ms(4)
Ms(4)

Construction 2 Let ℓ and t be positive integers such that t is
a multiple of ℓ. The cells consist of ℓ + 1 blocks, each of size
n′ ; thus n = n′ (l + 1). After the i-th write, i ∈ [1 : t], the cell
(1)
(2)
(ℓ+1)
(j)
levels are (yi , yi , . . . , yi ), where yi , j ∈ [1 : ℓ + 1],
denotes the j -th block of length-n′ cells. Let CW be an
[n′ , t/ℓ; 2n R , . . . , 2n R ] WOM code of length n′ with
encoder Ei′ (mi , yi−1 ), mi ∈ [1 : 2n R ], on the i-th write,
i ∈ [1 : t/ℓ]. An [n, t; 2nR , 2nR , . . . , 2nR ] arbitrary two-step
′
WOM code C is constructed, where Ri = R⌈i/ℓ⌉ , i ∈ [1 : t].
On the i-th write, i ∈ [1 : t], the encoder i assigns the codeword xi = (x(1) , x(2) , . . . , x(ℓ+1) ) using the following rules.
i
i
i
i
Let h = (i − 1 mod ℓ) and j = ⌈ ℓ ⌉.
nR
1) Write message mi ∈ [1 : 2 ] to the (h + 1)-st block,
using the encoder on the j -th write from CW and keep the
rest of the ﬁrst n′ ℓ cells unchanged, i.e.,
(h+1)
(h+1)
′
xi
= Ej (mi , yi−1 ).
2) If h = 0 and i = 1, write message ms(i) to the (ℓ + 1)-st
block, using the encoder on the (j − 1)-st write from CW ,
i.e.,
(ℓ+1)
(ℓ+1)
′
xi
= Ej−1 (ms(i) , yi−1 ).
Otherwise, the last block is kept unchanged.

′
s

′′
1

block 1

1st write
2nd write
3rd write
4th write
5th write

′
1

′

′
t/ℓ

′

1

t

t

2

′

i

i

′
i

i

Proposition 3. If the WOM code CW is sum-rate optimal, then

the code C in Construction 2 is an arbitrary two-step WOM
code with sum-rate

1 In

all the following constructions, the decoders of the WOM codes for
Problems 1, 2, and 3 are similar to the decoders of the traditional WOM
codes that are assumed to exist in each construction, and thus we omit the
details of the decoders here.

2
Rsum (t) =

3

ℓ
log2
ℓ+1

t
+1 .
ℓ

For large t, let ℓ = log2 t. Then the asymptotic sum-rate is problem of maximizing the symmetric sum-rate is identical
to minimizing the value of n = n1 + n2 + n3 as a function of
log t
t
Rsum (t) = log t+1 log2 ( log t + 1) = log2 t − O(log2 (log2 t)).
λ. Now we state the construction formally and then present
t
Since an upper bound on the sum-capacity is log2 2 + 1 , the symmetric sum-rate analysis.
this construction is asymptotically optimal in t.
Construction 3 Let k
positive
λ
If t is not a multiple of ℓ we slightly modify Construction 2. n = k. Suppose that be acell levelsinteger,the i∈ [0, 1], and
the
after
-th write are
1
t
We use a ℓ -write WOM code for the ﬁrst (t mod ℓ) blocks (y′ , y′′ , y′′′ ), where y′ , y′′ , and y′′′ denote blocks of length
t
i
i
i
i
i
i
and a ℓ -write WOM code for the last (ℓ + 1 − (t mod ℓ)) n , n , and n , respectively. Let C be an [n , 1; 2k ] WOM code
1
2
3
1
1
blocks. The constructions yield the following corollary.
′
with encoder E1 (m1 ) for the ﬁrst write, C2 be an [n2 , 2; 2λk , 2k ]
2
Corollary 1 A lower bound of Csum (t) is given by
′′
WOM code with encoders Ei′′ (mi , yi−1 ), i ∈ [1 : 2], for the
t
t
(t mod ℓ) log2 ( ℓ + 1) + (ℓ − (t mod ℓ)) log2 ( ℓ + 1)
ﬁrst two writes, and C3 be an [n3 , 3; 2(1−λ)k , 2k , 22k ] WOM
max
.
′′′
ℓ∈[1:t]
ℓ+1
code with encoder Ei′′′ (mi , yi−1 ), i ∈ [1 : 3], for all three
k k
writes. An [n, 3; (2 , 2 )] symmetric incremental WOM code
IV. I NCREMENTAL WOM
C is constructed. On the i-th write, encoder i assigns the
We study the incremental WOM model in Problem 3.
codeword xi = (x′i , x′′ , x′′′ ) using the following encoding
i
i
Theorem 2. The sum-capacity of the t-write incremental WOM rules:
is
3
Csum (t) = log2 (t + 1).
1) If i = 1, then write message mc ∈ [1 : 2k ] to block
1
1 using the encoder from C1 , write message mp ∈ [1 :
11
The optimal trade-off between the common-message sum-rate
2λk ] to block 2 using the encoder for the ﬁrst write from
n
c
c
p
Rsum := i=1 Ri and the private-message sum-rate Rsum :=
C2 , and write message mp ∈ [1 : 2(1−λ)k ] to block 3
n
p
c
p
12
i=1 Ri is the set of rate pairs (Rsum , Rsum ) such that
using the encoder for the ﬁrst write from C3 , i.e.,
t−1
′
′′
′′′
c
(x′ , x′′ , x′′′ ) = E1 (mc ), E1 mp , E1 mp .
Rsum
pi ,
1
1
1
1
11
12
i=1
2) If i = 2, then the ﬁrst n1 cells are unchanged, write mest−1
t−1
i−1
sage mc ∈ [1 : 2k ] to block 2 using the encoder for the
2
c
p
Rsum + Rsum
pi +
pk H(pi )
second write from C2 , and write message mp ∈ [1 : 2k ]
2
i=1
i=1 k=1
to block 3 using the encoder for the second write from C3 ,
i.e.,
for some p1 , p2, . . . , pt−1 ∈ [ 1 , 1].
2
′′
′′
′′′
′′′
c
c
(x′′ , x′′′ ) = E2 (mc , y1 ) , E2 mp , y1 .
Theorem 2 follows by noting that R1 = R2 = · · · =
2
2
2
2
c
Rt−1 = 0 is optimal for the sum-rate trade-off.
3) If i = 3, then the ﬁrst n1 + n2 cells are unchanged and
3
Now we focus on the symmetric sum-capacity Cssum (t),
write message (mc , mp ) ∈ [1 : 22k ] to block 3, using the
3
3
c
deﬁned as the maximum achievable sum-rate when R1 =
encoder for the third write from C3 , i.e.,
p
p
p
c
c
R1 = R2 = R2 = · · · = Rt = Rt = R. We denoted by
′′′
′′′
x′′′ = E3 (mc , mp ), y2 .
3
3
3
nR
[n, t; 2 ] the t-write symmetric incremental WOM code. It
The symmetric sum-rate of the code C is given by 6k/n.
can be proved that the symmetric sum-capacity of the t-write
As k is ﬁxed, this value is maximized when n is minimized.
incremental WOM is upper bounded as
We denote by n2 (λ) the minimum length of an [n2 , 2; 2λk , 2k ]
2
3
Cssum (t) 2 −
< 2.
WOM code and similarly n3 (λ) is the minimum length of an
t+1
In the following, we give a construction of t-write sym- [n3 , 3; 2(1−λ)k , 2k , 22k ] WOM code. Then, the problem is to
metric incremental WOM codes. To illustrate the basic idea, ﬁnd the value of minλ∈[0,1] (n2 (λ) + n3 (λ)).
we show a construction for t = 3. Suppose that every private/common message represents k = nR bits. Partition the Proposition 4. The minimum value of n in Construction 3 is
c
n cells into three blocks. Write M1 to the ﬁrst block. Parti- n = 4.386k , which is achieved by setting λ = 0.3116. The
3
p
p
p
tion M1 into two messages M11 with λk bits and M12 with corresponding symmetric sum-rate is Rssum (3) = 1.3679.
p
c
Proof: Let us ﬁrst ﬁnd the value of n2 (λ). That is, we
(1 − λ)k bits. Write M11 and M2 to the second block and
p
p
p
c
ﬁnd a WOM code of minimum length n2 (λ) such that its
M12 , M2 , (M3 , M3 ) to the third block. Thus, in the ﬁrst block
we use a one-write WOM code, in the second block we use a rate on the ﬁrst write is R1 = λk/n2 (λ) and its rate on the
two-write WOM code and in the third block we use a three- second write is R2 = k/n2 (λ). Thus, we have R1 /R2 =
λ. Since the capacity region of the two-write WOM is given
write WOM code, as illustrated in Table III.
by {(R1 , R2 )|R1 h(p1 ), R2 p1 , for some p1 ∈ [1/2, 1]},
TABLE III
and we ﬁnd a WOM code of minimum length, the ratio of R1
W RITING ARRANGEMENT OF THE 3- WRITE INCREMENTAL WOM CODE
and R2 satisﬁes
block 1 block 2
block 3
h(p1 )/p1 = λ,
(1)
p
p
c
1st write
M1
M11
M12
p
c
c
2nd write
M1
M2
M2
for some p1 ∈ [1/2, 1]. Note that if λ is positive then
p
c
c
c
3rd write
M1
M2
(M3 , M3 )
equation (1) always has a solution, which we denote by
Suppose that the lengths of the ﬁrst, second, and third p1 (λ). Now, we deduce from R2 = k/n2 = p1 that
blocks are n1 , n2 , and n3 , respectively. For the ﬁxed k, the n2 (λ) = k/p1(λ).
2

2

2

2

4

Similarly, the capacity region of the three-write WOM is
given by {(R1 , R2 , R3 )|R1 h(p2 ), R2 p2 h(p3 ), R3
p2 p3 , for some p2 , p3 ∈ [1/2, 1]}. Thus, it can be shown that
the values of p2 , p3 ∈ [1/2, 1] that give the minimum code
length for n3 (λ) satisfy
h(p2 )/(p2 h(p3 )) = 1 − λ,
(2)
h(p3 )/p3 = 1/2.
(3)
The value of p3 is independent of λ and is given by p3 =
0.9055, and p2 (λ) is the solution to equation (2). Hence, n3 (λ)
satisﬁes n3 (λ) = 2k/((p2(λ)p3 ).
We are now left to solve the minimization problem
minimize

1
2
+
p1 (λ) p2 (λ)p3

bits/cell

written as an i-write WOM code of length ni , and messages
p
p
p
p
M1,t−1 , M2,t−2 , . . . , Mt−2,2 , Mt−1 , (Mtc , Mtp ) will be written as a t-write WOM code of length nt , where (Mtc , Mtp )
represents 2k bits.
Figure 2 shows the achievable symmetric sum-rate of the
time-sharing scheme described in the introduction and our construction based on the optimal partition strategy, λi,j , i ∈ [1 :
3
t − 2], j ∈ [1 : t − i], that maximizes Rssum (t).

1.8

(4)

,

Incremental WOM
2

1.6
time−sharing
our construction
upper bound

1.4

with λ ∈ [0, 1], where p1 (λ), p2 (λ), and p3 satisfy equations (1), (2), and (3) respectively.
From Equation (3), p3 was already calculated numerically.
From Equation (1) and (2), we have

1.2
1
0

20

40
60
number of writes t

80

Fig. 2. Lower and upper bounds on

h(p1 (λ))
h(p2 (λ))
+
= 1.
p1 (λ)
p2 (λ)h(p3 )

100

3
Cssum (t)

V. ACKNOWLEDGMENT
This research was supported in part by the ISEF Foundation, the Lester Deutsch Fellowship, the University of California Lab Fees Research Program, Award No. 09-LR-06118620-SIEP, the National Science Foundation under Grants
h(p2 )
CCF-0747111 and CCF-1116739, and the Center for Magh(p1 )
+
= 1, where p3 = 0.9055.
netic Recording Research at the University of California, San
p1
p2 h(p3 )
It follows that p1 = p2 = 0.9479 and we get λ = Diego.
h(p1 )/p1 = h(p3 )/(h(p3 ) + 1) = 0.3116. Therefore,
R EFERENCES
3
n = n1 + n2 (λ) + n3 (λ) = 4.386k and Rssum (3) satisﬁes
[1] P. Cappelletti, C. Golla, P. Olivo, and E. Zanoni, Flash Memories.
Therefore, we can formulate the minimization problem as
1
2
minimize
+
p1
p2 p3
1
with p1 , p2 ∈ [ 2 , 1], subject to

3
Rssum (3) = 6R =

Kluwer Academic Publishers, 1st Edition, 1999.
[2] F. Fu, “Maximum information bits stored in reusable memory,” Chinese
Science Bulletin, vol. 40, no. 15, pp. 1241–1244, August 1995.
[3] F. Fu and A. J. Han Vinck, “On the capacity of generalized writeonce memory with state transitions described by an arbitrary directed
acyclic graph,” IEEE Trans. Inform. Theory, vol. 45, no. 1, pp. 308–313,
September 1999.
[4] R. Gabrys and L. Dolecek, “Characterizing capacity achieving write
once memory codes for multilevel ﬂash memoriess,” in Proc. IEEE Int.
Symp. Inform. Theory, July-August 2011, pp. 2517–2521.
[5] C. Heegard, “On the capacity of permanent memory,” IEEE Trans. Inform. Theory, vol. 31, no. 1, pp. 34–42, January 1985.
[6] A. Jiang, V. Bohossian, and J. Bruck, “Rewriting codes for joint information storage in ﬂash memories,” IEEE Trans. Inform. Theory, vol. 56,
no. 10, pp. 5300–5313, October 2010.
[7] A. Jiang, M. Langberg, M. Schwartz, and J. Bruck, “Universal rewriting in constrained memories,” in Proc. IEEE Int. Symp. Inform. Theory,
Seoul, Korea, July 2009, pp. 1219–1223.
[8] S. Kayser, E. Yaakobi, P. H. Siegel, A. Vardy, and J. K. Wolf, “Multiplewrite WOM-codes,” in Proc. 48-th Annual Allerton Conference on Communication, Control and Computing, Monticello, IL, September 2010.
[9] L. Wang and Y.-H. Kim, “Sum-capacity of multiple-write noisy memory,” in Proc. IEEE Int. Symp. Inform. Theory, Saint Petersburg, Russia,
August 2011, pp. 2494–2498.
[10] R. Rivest and A. Shamir, “How to reuse a write-once memory,” Inform.
and Contr., vol. 55, no. 1-3, pp. 1–19, December 1982.
[11] J. K. Wolf, A. D. Wyner, J. Ziv, and J. Korner, “Coding for a writeonce memory,” AT&T Bell Labs. Tech. J., vol. 63, no. 6, pp. 1089–1112,
1984.
[12] Y. Wu and A. Jiang, “Position modulation code for rewriting write-once
memories,” IEEE Trans. Inform. Theory, vol. 57, no. 6, pp. 3692–3697,
June 2011.
[13] E. Yaakobi, S. Kayser, P. H. Siegel, A. Vardy, and J. K. Wolf, “Efﬁcient two-write WOM-codes,” in Proc. IEEE Inform. Theory Workshop,
Dublin, Ireland, August 2010.

6k
6k
=
= 1.3679.
n
n1 + n2 (λ) + n3 (λ)

This completes the proof.
We are now ready to generalize the construction for
an arbitrary number of writes t. Each of the messages
p
c
M1 , M1 , . . . , Mtc , Mtp represents k = nR bits, and the n
cells are partitioned into t blocks. Message Mip , i ∈ [1 : t− 2],
p
p
p
is partitioned into t − i parts (Mi1 , Mi2 , . . . , Mi,t−i ). The arrangement of these messages when written into the memory
is depicted in Table IV.
TABLE IV
W RITING ARRANGEMENT OF THE t- WRITE INCREMENTAL WOM CODE
1
2
3
..
.
t

block 1

···

···

c
M1
c
M1
c
M1

p
M11
c
M2
c
M2

p
M12
p
M21
c
M3

..
.

c
M1
c
M1
c
M1

..
.

c
M2
c
M2
c
M2

..
.

c
M3
c
M3
c
M3

···
···
···
p
M31

..
.

c
M4
c
M4
c
M4

···

···

block t

···
···
···

p
M1,t−2
p
M2,t−3
p
M3,t−4

p
M1,t−1
p
M2,t−2
p
M3,t−3

p
Mt−2,1
c
Mt−1
c
Mt−1

p
Mt−2,2
p
Mt−1
p
c
(Mt , Mt )

..

.

···
···
···

..
.

..
.

According to this layout, the i-th block, for i ∈ [1 : t], consists of ni cells and is used to construct an i-write WOM code.
p
Assume that message Mij for i ∈ [1 : t − 2], j ∈ [1 : t − i]
represents λi,j k bits, where t−i λi,j = 1. Then for i ∈ [2 :
j=1
p
p
p
t − 1], messages (M1,i−1 , M2,i−2 , . . . , Mi−1,1 , Mic ) will be

5

