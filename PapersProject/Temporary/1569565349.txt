Title:          comp_report_ver3.dvi
Creator:        dvips(k) 5.98 Copyright 2009 Radical Eye Software
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Wed May 16 18:32:51 2012
ModDate:        Tue Jun 19 12:54:15 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      595 x 842 pts (A4)
File size:      299155 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569565349

An Asymptotically Optimal Push-Pull Method for
Multicasting over a Random Network
Vasuki Narasimha Swamy

Rajesh Sundaresan

Pramod Viswanath

Department of Electrical Engineering
Indian Institute of Technology Madras
Chennai, India

Department of ECE
Indian Institute of Science
Bangalore, India

Department of ECE
University of Illinois, Urbana-Champaign
Urbana, IL, USA

Abstract—We consider multicast ﬂow problems where either
all of the nodes or only a subset of the nodes may be in session.
Trafﬁc from each node in the session has to be sent to every
other node in the session. If the session does not consist of all
the nodes, the remaining nodes act as relays. The nodes are
connected by undirected edges whose capacities are independent
and identically distributed random variables. We study the
asymptotics of the capacity region (with network coding) in the
limit of a large number of nodes, and show that the normalized
sum rate converges to a constant almost surely. We then provide
a decentralized push-pull algorithm that asymptotically achieves
this normalized sum rate.

I. I NTRODUCTION
In this paper, we investigate the capacity of allcast and
multicast sessions over a random edge-capacitated graph.
Allcast: Consider a setting where there are n nodes, all of
which are engaged in a conference over a wired network. Each
node has data that needs to be made entirely available over the
network to each of the other n − 1 nodes in a simultaneous
fashion. The data can be split and routed and coded in any
way, so long as all nodes eventually get the information.
The underlying complete undirected graph on n vertices is
capacitated: each undirected edge e has capacity Ce sampled
independently and identically from a distribution F . An allcast
ﬂow assignment is said to be feasible if the net ﬂow over any
edge (in any direction) respects the edge’s capacity constraint.
For each such ﬂow assignment, let ri be the bit-rate of trafﬁc
sent by node i to each of the other nodes. We address the
question of the set of all achievable rate tuples r1 , · · · , rn in
the asymptotics of a large number of nodes n. As we shall
soon see, this problem is closely related to packing of disjoint
spanning trees in an edge-capacitated network with integer
capacities. Minor extensions of some previous results readily
yield that the achievable rate region is almost surely (a.s.)
1
(r1 , r2 , . . .) : lim sup
n
n→∞

n

1
ri ≤ E[C]
2
i=1

(1)

where the expectation is of a random variable C having
distribution F . The linear programming formulation of this
problem is given in Section II, and the proof of (1) is given in
Sections III (converse) and IV (achievability). It is known that
network coding does not yield any gain in allcast settings [1],
and thus we have an asymptotic characterization of allcastcapacity.

1

Multicast: We next address a more general setting with
only a subset of kn nodes in the multicast session, where
limn→∞ kn /n = α and α < 1. Data from each of the kn nodes
has to reach every one of the other kn −1 nodes. The remaining
n − kn nodes serve as relays. Again, in an edge-capacitated
framework where each edge is independent and identically
distributed (iid) with distribution F , we are interested in the
set of all achievable rate tuples r1 , · · · , rkn in the asymptotics
of a large number of nodes n. We demonstrate that the capacity
region is almost surely
(r1 , r2 , . . .) : lim sup
n→∞

1
n

kn

ri ≤ 1 −
i=1

α
E[C].
2

(2)

The LP formulation of this problem is in Section II, proof of
the converse is in Section III, and proof of achievability is
in Section V. Our proof of achievability in this case is via a
combination of “push” and “pull” that suggests a decentralized
implementation.
Our achievability proof is based on ﬂows (allowing for
duplications) and thus do not employ network coding. While
it has been observed empirically that the gain from network
coding is marginal for random network topologies (see [1,
p.1017]), our results of this paper imply that there is indeed
no asymptotic gain from network coding with respect to the
performance metric of normalized rate. Our simple “pushpull” scheme in the multicast case and the observation that
asymptotically network coding does not yield a gain for almost
every graph (with respect to a probability distribution on
graphs) are the central contributions of this paper.
II. A L INEAR P ROGRAMMING F ORMULATION
A. Allcast
Consider the allcast problem described in Section I. Rightaway, we observe that the allcast capacity region in the
undirected capacitated network does not depend on who the
sender is ([1, Th. 4]). This is straightforward for ﬂow-based
schemes, but the same holds under coding as well; see [1, Th.
4]. We may therefore assume that there is only one sender
(say node 1), and all other n − 1 nodes are recipients that
must receive all information sent by node 1. Thus, the rates
are (r1 , 0, 0, . . .), and we characterize r1 .

The maximum rate is obtained by solving the following
linear programming (LP) problem. Given the complete graph
Kn on n vertices, let C : E → R be the capacity function (a
realization of iid random variables). Let Tn be the set of all
spanning trees on the complete graph. The vertices are labeled,
and so Cayley’s formula tells that the number of such trees is
nn−2 . Solve the LP (Tutte [2], Nash-Williams [3] Barahona
[4], Li et al. [1]):
λT

Maximize

(3)

T ∈Tn

subject to (1)

λT ≤ Ce

for all e

T ∈Tn :T ∋e

(2) λT ≥ 0

(node 1) to the kn − 1 other recipients is the maximum value
of the modiﬁed LP:
λT

Maximize

(4)

T ∈Tn (kn )

subject to

λT ≤ Ce

(1)

for all e

T ∈Tn (kn ):T ∋e

(2) λT ≥ 0

for all T ∈ Tn (kn ).

Set αn = kn /n, and denote the maximum value of (4) as
πn (αn ). The above LP is the same as that of (3) with Tn
replaced by the less restrictive Tn (kn ).

for all T ∈ Tn .

III. A N U PPER B OUND

Denote the maximum value of (3) as πn . Then πn is the
maximum rate at which node 1 can allcast its information to
all the other nodes. This has a simple and intuitive explanation.
• If one tags an inﬁnitesimal information element originating at node 1 and follows the path of its spread to each
of the n − 1 recipients, one gets a directed graph rooted
at the source node 1 and spanning all the n nodes.
• If the undirected version of this directed graph is not a
tree, i.e., there is some cycle, some node in the cycle is
receiving this information element from two other nodes.
One of these links can be removed without affecting the
multicast property. We can thus reduce the directed graph
to a spanning arborescence, which is a directed graph
with no incoming edges at the root node, exactly one
incoming edge at every other node, and all vertices are
covered.
• This spanning arborescence is in one-to-one correspondence with a tree, since the root is speciﬁed. So we
may simply focus on the spanning tree associated with
arborescence. Call this tree T , an element of Tn .
• Collect all the information elements that are spread via
this tree. Call its volume λT .
It is clear that each λT ≥ 0 and constraint (1) above is
the capacity constraint associated with each of the edges.
Consequently, the value of the optimization problem in (3)
is an upper bound on the optimal net ﬂow from node 1.
But it is immediate that any set of λT satisfying the two
constraints provides a means to achieve a rate T λT , since
λT units of information may be directed through the spanning
arborescence associated with the tree T and root vertex 1.
Thus the maximum rate of allcast ﬂow from a single sender
is πn , the solution to the LP in (3).
When edge capacities are random, πn is a random variable
whose asymptotics we shall soon characterize.

Consider the following deﬁnitions.
•

•

Let χn and χn (kn ) denote the maximum throughput
achievable in the allcast and multicast settings with the
added possibility of network coding at each node. (The
dependence of these quantities on the edge capacities is
understood and suppressed).
Let ηn denote the strength of the allcast network deﬁned
as follows. Let P denote the set of all partitions of the
vertex set {1, 2, . . . , n}. Consider a partition ℘ ∈ P. Let
∂℘ denote the set of intercomponent edges. Deﬁne
ηn := min
℘∈P

•

2

Ce

(5)

|℘| − 1

where |℘| denotes the number of subsets in the partition.
Let ηn (kn ) denote the strength of the multicast network
with kn nodes in the session. This is deﬁned as follows.
Let P(kn ) denote the set of all partitions of the vertex
set {1, 2, . . . , n} such that each component of a partition
contains at least one of the session nodes {1, 2, . . . , kn }.
Deﬁne
e∈∂℘ Ce
ηn (kn ) := min
.
(6)
℘∈P(kn ) |℘| − 1

Li et al. [1] showed the following result.
Theorem 1: (Li et al. [1, Th. 2 and Th. 3])
(a) For any allcast session, πn = χn = ηn .
(b) For any multicast session, πn (kn ) ≤ χn (kn ) ≤ ηn (kn ).
We can easily ﬁnd upper bounds on ηn and ηn (kn ) as in
the following theorem.
Theorem 2: Let {Ci,j }1≤i<j≤n denote the undirected edge
capacities. We then have the following upper bounds:

B. Multicast
For the multicast problem, without loss of generality, let us
index the session nodes as {1, 2, . . . , kn }. Denote by Tn (kn )
the set of all Steiner trees that span the vertices 1, 2, . . . , kn .
Obviously Tn (n) ≡ Tn . For multicast, as for allcast, the
maximum simultaneously transmissible rate from one sender

e∈∂℘

ηn

≤

ηn (kn ) ≤

1
Ci,j
n−1
1≤i<j≤n

1 
Ci,j +
kn
i≤kn j>kn

(7)

1≤i<j≤kn



Ci,j  . (8)

As a consequence, with limn→∞ kn /n = α, the inequalities
ηn
n
ηn (kn )
lim sup
n
n→∞
lim sup

≤

n→∞

≤

1
E[C]
2
α
1−
E[C]
2

(9)
(10)

hold almost surely.
Proof: Consider the partition ℘ = {{1}, {2}, · · · , {n}}.
There are n subsets in the partition, and ∂℘ is the set of all
edges. Apply now the deﬁnition (5) of ηn and we immediately
get (7) as the upper bound for the allcast case.
For the multicast case, consider the partition
℘ = {{1}, {2}, · · · , {kn }, {kn + 1, . . . , n}}.

{(i, j) : 1 ≤ i ≤ kn , j ≥ kn } ∪ {(i, j) : 1 ≤ i < j ≤ kn }.

(11)

for multicast.
Using |∂℘| = n(n − 1)/2 for allcast in (7), we obtain
ηn
1 1
≤
n
2 |∂℘|

1−

By the strong law of large numbers, it is then obvious that
limn πn /n = p/2 almost surely.

While one could in principle proceed as in Catlin et al. [6]
to prove achievability, we wish to provide a more constructive
proof of achievability for cases when α < 1. We shall use
Theorem (3) in the proof. Our constructive procedure does
not yet handle the boundary case when α = 1.

lim

e∈∂℘

1
|∂℘|

a.s.

α
πn (kn )
= 1−
E[C] a.s.
n→∞
n
2

Ce .

(kn + 1)
2n

n−1

Theorem 4: For the multicast problem with kn in the session, let limn→∞ kn /n = α < 1. We then have

The sum on the right-hand side is composed of independent
and identically distributed random variables. Consequently, the
right-hand side converges almost surely to 1 E[C] by the strong
2
law of large numbers, and we obtain (9).
For the multicast case, use (11) in (8) to obtain
ηn (kn )
≤
n

Ci,j

V. M ULTICAST: ACHIEVABILITY

Apply now the deﬁnition (6) of ηn (kn ) and we immediately
get (8) as the upper bound for the multicast case.
Note that |∂℘| = n(n − 1)/2 for allcast, and
kn + 1
kn (kn − 1)
= kn n −
2
2

1≤i<j≤n

πn =

There are kn + 1 subsets in the partition. The set of edges in
∂℘ are

|∂℘| = kn (n − kn ) +

Furthermore, it sufﬁces to prove achievability for graphs
whose edge capacities are independent Bernoulli random variables with parameter p, i.e., lim inf n→∞ πn /n ≥ p/2 almost
surely. By following standard techniques of truncation, scaling,
and quantization, see for example [5], one can show that
lim inf n→∞ πn /n ≥ (1/2)E[C] for any generic distribution
with an expectation.
Graphs whose edge capacities are independent Bernoulli
random variables with parameter p are the Erd˝ s-R´ nyi rano e
dom graphs denoted G(n, p). For such graphs, even for p as
low as (28 log n/n)1/3 , Catlin et al. [6, Sec. 3] proved the
stronger result that

Ce .
e∈∂℘

Again by an application of the strong law of large numbers,
the conclusion (10) follows.
Observe that, by Theorem 1, the upper bounds in Theorem
2 apply for capacity with the possibility of network coding.
Let us now turn to achievability of this rate with no network
coding.
IV. A LLCAST: ACHIEVABILITY
Achievability follows directly from prior results.
Theorem 3: For the allcast problem, we have
πn
1
= E[C] a.s.
n→∞ n
2
lim

Proof: The converse was already shown in (9). So it
sufﬁces to show achievability.

3

Proof: As in the proof of Theorem 3, converse was
already shown in (10). So showing achievability sufﬁces, and
further this can be shown on Erd˝ s-R´ nyi random graphs with
o e
parameter p.
Next observe that the subset of session nodes alone form
a complete graph with kn vertices for which Theorem 3 is
applicable. Using the scheme suggested by that theorem, we
have
1≤i<j≤kn Ci,j
(1)
(12)
πn ≥
kn − 1
is achievable for simultaneous multicast, almost surely, without using any of the relay nodes.
Removing these direct links between the session nodes,
we end up with a graph in Figure 1, where the session
nodes are now only connected to the mn = n − kn relay
nodes. The edge to each relay node from each session node
has Bernoulli(p) capacity. Further the relay nodes have interrelay edge capacities that are independent Bernoulli(p) random
(2)
variables. We now claim that a rate πn can be simultaneously
multicast to the kn session nodes (solely with the help of the
relay nodes), and the rate almost surely satisﬁes
(2)

lim inf
n

πn
≥ p.
mn

(13)

2

3

Source
1

e−mn c1 for some c1 > 0.
Push step 2: Each ﬁrst hop relay node relays its bit to each
neighbor that is not already a ﬁrst hop relay. The resulting
bit carrying relays are called secondary relays. Note that there
may be secondary relays that are in contact with the source,
but did not receive any bit on account of the source’s degree
exceeding mn p(1 − ε).
The bit-map of available bits with relays is as follows.
Let us index the bits as 1, 2, . . . , mn p(1 − ε), and relays as
1, 2, . . . , mn . Then row i indicates what relay i contains.
In the table, Xi,j = 1 if relay i (with mn p(1 − ε) < i ≤
mn ) is connected to ﬁrst hop relay j. Clearly, the presence or
absence of this edge is independent of all other events, and so
Xi,j is a Bernoulli(p) random variable.

kn

Figure 1. Graph with all links between session nodes removed. Source pushes
bits to ﬁrst hop relays which then push to secondary relays (solid lines). The
session nodes pull the bits from either ﬁrst hop relays or secondary relays
(dashed lines).

Supposing the claim is true, we can put (12) and (13)
(2)
(1)
together, and get an achievable rate πn = πn + πn that
satisﬁes the following almost surely:
lim inf
n

πn
n

= lim inf
n

(1)
πn

n

+

n

(1)

(2)

πn
n

≥ lim inf

kn πn
2n kn /2

n

πn
n

+ lim inf
n

(1)

n

≥

=
=

(2)

+ lim inf
n

Relay 1 + mn p(1 − ε)
.
.
.
Relay mn

Bit
2
0
1

0

0

···
···
···
..
.
···

Bit
mn p(1 − ε)
0
0
1

((Xi,j ))

Data is “pulled” from the relays by the session nodes as
follows. Consider a session node i.
Pull step 1: If a session node i is connected to a ﬁrst
(n)
hop relay, it pulls the corresponding bit. Let A2 (i) be the
2
2
event there are less than mn p (1 − ε) ﬁrst hop relays that
our session node is in contact with. Again by Bernstein’s
(n)
inequality, Pr{A2 (i)} ≤ e−mn c2 for some c2 > 0.
Pull step 2: The session node now has to pull the remaining
bits from the secondary relays. The number of bits that remain
to be pulled is

(2)
πn

≥ lim inf

First hop relay 1
First hop relay 2
.
.
.
First hop relay
mn p(1 − ε)

Bit
1
1
0

mn πn
n mn

mn
kn
· p + lim
·p
n
2n
n
(using (12) and (13))
α
p + (1 − α)p
2
α
p
1−
2
lim

bn := mn p(1−ε)−mn p2 (1−ε)2 = mn p(1−ε)(1−p(1−ε)).

n

The number of relays that are not ﬁrst hop relays is at least
mn − mn p(1 − ε) = mn (1 − p(1 − ε)).
(n)

which establishes the theorem.
We now proceed to verify the claim in (13). Fix ε > 0
sufﬁciently small. Data is “pushed” as follows.
Push step 1: The source sends a total of mn p(1 − ε) bits
to relays connected to it. (Rounding to integer can easily be
handled and is ignored for expository purposes). Each relay
carries a unique bit. If there are more neighbors than (mn p(1−
ε)), the extra relays are not supplied a bit. Let us call all
those nodes that receive a bit directly from the source as ﬁrst
hop relays. The case when there are fewer ﬁrst hop relays
than mn p(1 − ε) is an event having negligible probability.
Indeed, let A1 be the event that the degree of the source node
(n)
is less than mn p(1−ε). By Bernstein’s inequality, Pr{A1 } ≤

4

Let A3 (i) be the event that the session node is connected to
fewer than p(1 − ε) fraction of these nodes, i.e., to fewer than
mn (1 − p(1 − ε)) · p(1 − ε) = bn such relays. By Bernstein’s
(n)
inequality again, Pr{A3 (i)} ≤ e−mn c3 for some c3 > 0.
(1)
(2)
(3)
Pull step 3: Assume now that An ∪ An (i) ∪ An (i)
does not occur. Then the matrix rows corresponding to the
secondary relays in contact with the session node and the
columns corresponding to the bits not yet pulled constitutes a
bn × bn square submatrix whose entries are conditionally iid
Bernoulli(p) random variables. We may view this as a bipartite
graph with (non-ﬁrst-hop) relays on the one side and not-yetpulled bit indices on the other side. There are bn vertices on
each side. The edges of this bipartite graph are Xk,l which
are independent Bernoulli(p) random variables. For a selected

relay k connected to session node i, if Xk,l = 1, then the
relay is a secondary relay and has bit l. It may contain other
bits of interest to session node i, but can send at most 1 bit to
node i. If we have a complete matching (where all bn selected
relays and all unpulled bits are matched), then the session node
can pull these remaining bits from the selected relays without
violating the capacity constraint of one bit per edge.
The probability that such a matching does not exist, say
Mn (i), can be upper bounded by γ(bn ), where k(n)γ(bn ) is
summable, using [7, Lem. 7.12, p.174]. (See Appendix).
In the ﬁnal analysis, the event that some session node is
unable to pull all the bits is

not be connected to any vertex in V3−i −Γ(A) The probability
that this happens for A ⊂ V1 is at most
a(a − 1) 2a−2
p
(1 − p)a(n−a+1) .
2a − 2
n
There are n choices for A ⊂ V1 with |A| = a, a−1 choices
a
for Γ(A), and an extra factor of 2 to account for A ⊂ Vi ,
i = 1, 2. Using these and n ≤ (en/k)k , we get
k
n1

n1

P

Fa
n1

=

2

(n)

a=2

e

+ kn (e

+e

−mn c2

n1

≤

+ γ(bn )).

2
a=2

Using α < 1, summing the above over n, using the fact that
kn γ(n) is summable, and the Borel-Cantelli lemma, we obtain
that almost surely all the session nodes will be able to pull
mn p(1 − ε) bits. By considering rational ε and staying out
of the union of all the associated null sets, it follows that
(2)
lim inf n πn /mn ≥ p (a.s.). This concludes the proof.
VI. S UMMARY
Our main contributions are the following.
• For multicast sessions on random graphs, speciﬁcally
Erd˝ s-R´ nyi random graphs, the maximum asymptotic
o e
rate can be achieved via ﬂows. This was already known
for the allcast case kn = n. We studied the multicast case
when kn /n → α < 1.
• We proposed a push-pull scheme for data distribution in
a multicast session with kn nodes, kn /n → α < 1. Our
scheme is decentralized and easily implementable.
A PPENDIX A
T HE EXISTENCE OF A BIPARTITE

n
a

n
a−1

a(a − 1)
2a − 2

× p2a−2 (1 − p)a(n−a+1)

Its probability is upper bounded by
−mn c2

P (Fa )
a=2

a=2

A1 ∪kn A(2) (i) ∪ A(3) (i) ∪ Mn (i) .
n
n
i=2

−mn c1

≤

MATCHING

The following lemma, taken from Bollob´ s, is key to
a
showing that matchings exist almost surely and one can pull
the bn bits from secondary relays. We present the result for a
bipartite graph with n vertices.
Lemma 5: ([7, Lem. 7.12, p. 174]). Let G be a bipartite
graph with vertex classes V1 and V2 , |V1 | = |V2 | = n. Suppose
G has no isolated vertices and it does not have a complete
matching. Then there is a set A ⊂ Vi (i = 1, 2) such that:
(i) Γ(A) = {y : (x, y) ∈ E(G) for some x ∈ A} has |A|−1
elements,
(ii) the subgraph of G spanned by A∪Γ(A) is connected and
(iii) 2 ≤ |A| ≤ (n + 1)/2.
Let n1 = ⌊(n + 1)/2⌋. We follow Bollob´ s’s arguments
a
on [7, p. 174]. Let Fa denote the event that there is a set
A ⊂ Vi (i = 1 or 2), |A| = a, satisfying (i)-(iii) of Lemma
5. The subgraph spanned by A ∪ Γ(A) is connected, and so
must have at least 2a−2 edges. Further the vertices of A must

5

en
a

a

en
a−1

a−1

ea
2

2a−2

× p2a−2 (1 − p)a(n−a+1)
n1

≤

e3a n2a−1 p2a−2 (1 − p)a(n−a+1)

const.
a=2

=: γ1 (n),
where the last equation is the deﬁning equation for γ1 (n).
The probability that there is some isolated node is upper
bounded by γ2 (n) := n(1 − p)n−1 . Thus the probability that
the bipartite graph of n vertices does not have a complete
matching is at most γ(n) = γ1 (n) + γ2 (n).
When we have bn vertices on each side, the above bound
turns out to be γ(bn ). Straightforward computations yield that
n kn γ(bn ) is summable, details of which we are omitted.
ACKNOWLEDGEMENTS
This work was done as part of a summer internship by V. N.
Swamy in her junior undergraduate year at the Indian Institute
of Science, and where P. Viswanath was on sabbatical leave at
the time. This work is supported by the Department of Science
and Technology, Government of India, by the University
Grants Commission, India, and by the US National Science
Foundation under grant CCF-1017430. The authors would like
to thank Prof. Navin Kashyap for bringing references [4] and
[6] to their attention.
R EFERENCES
[1] Z. Li, B. Li, and L. C. Lau, “A constant bound on throughput improvement
of multicast network coding in undirected networks,” vol. 55, no. 3, pp.
1016–1026, Mar. 2009.
[2] W. T. Tutte, “On the problem of decomposing a graph into n connected
factors,” J. London Math. Soc., vol. 36, pp. 221–230, 1961.
[3] C. S. J. A. Nash-Williams, “Edge-disjoint spanning trees of ﬁnite graphs,”
J. London Math. Soc., vol. 36, pp. 445–450, 1961.
[4] F. Barahona, “Packing spanning trees,” Mathematics of Operations Research, vol. 20, no. 1, pp. 104–115, Feb. 21995.
[5] M. Khandwawala and R. Sundaresan, “Optimal multicommodity ﬂow
through the complete graph with random edge-capacities,” Journal of
Applied Probability, vol. 47, no. 1, pp. 201–215, Mar. 2010.
[6] P. A. Catlin, Z. Hong Chen, and E. M. Palmer, “On the edge arboricity
of a random graph,” ARS Combinatorica, vol. 35-A, pp. 129–134, 1995.
[7] B. Bollob´ s, Random Graphs, 2nd ed.
a
Cambridge, UK: Cambidge
University Press, 2001, vol. Cambridge studies in advanced mathematics,
no. 73.

