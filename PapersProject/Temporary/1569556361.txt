Title:          untitled
Creator:        'Certified by IEEE PDFeXpress at 05/17/2012 10:26:24 AM'
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Thu May 17 10:26:18 2012
ModDate:        Tue Jun 19 12:56:41 2012
Tagged:         no
Pages:          4
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      268885 bytes
Optimized:      no
PDF version:    1.7
ISIT'2012 1569556361

Greedy Codes over ℤ4
Kenza Guenda

T. Aaron Gulliver and S. Arash Sheikholeslam

Faculty of Mathematics USTHB
University of Sciences and Technology of Algiers
B.P. 32 El Alia, Bab Ezzouar, Algiers, Algeria
Email: kguenda@gmail.com

Dept. of Electrical and Computer Engineering
University of Victoria
P.O. Box 3055, STN CSC, Victoria, BC Canada V8W 3P6
Email: agullive@ece.uvic.ca

the resulting lexicode 𝐶(𝐵, 𝑃 ) is linear and each vector
x ∈ 𝐶(𝐵, 𝑃 ) satisﬁes the property 𝑃 .
In this paper, we consider the construction of lexicodes
using a 𝐵-ordering over the ring ℤ4 and a selection property
𝑃 . We deﬁne multiplicative properties over ℤ4 and give a
greedy algorithm over ℤ4 . Since the code obtained depends
on the 𝐵 ordering and the property 𝑃 , we denote it by
𝐶(𝐵, 𝑃 ). Note that this greedy algorithm can be used with
any multiplicative property as deﬁned in this paper. We prove
that the code 𝐶(𝐵, 𝑃 ) when using a selection property on
the weight has covering radius equal to 𝑑 − 1. Hence via the
Gray map 𝒢, we prove that the corresponding binary codes
𝒢(𝐶(𝐵, 𝛿)) meet the Gilbert bound. We compare the lexicodes
obtained using our algorithm with the optimal codes in [8].
This shows that many of the codes are optimal over ℤ4 , and
several optimal binary codes are also obtained.
Recall that a selection property 𝑃 on 𝑉 can be considered
as a boolean valued function 𝑃 : 𝑉 −→ {True, False} that
depends on one variable. We call 𝑃 a multiplicative property
if 𝑃 [x] is true implies 𝑃 [3x] is true for all x ∈ 𝑉 . This is
slightly different from the deﬁnition given by van Zanten and
Nengah Suparta [13]. Our choice is justiﬁed by the arguments
given in Remark 1.
The remainder of the paper is organized as follows. In
Section II we present the main algorithm, and prove that
the codes obtained are linear and the selection criteria 𝑃 is
satisﬁed for all codewords. In Section III we consider selforthogonal codes. We prove that the multiplicative condition
𝑥 ⋅ 𝑥 = 0 which results in self-orthogonal codes over ﬁnite
ﬁelds is not sufﬁcient for rings, although self-orthogonal codes
may be obtained. In Section IV, lexicodes are given based on
the Lee-weight criteria. In Section V we prove that the binary
codes obtained as the Gray map of codes constructed using
the Lee weight selection property meet the Gilbert bound.

Abstract—In this paper, we consider the construction of lexicodes by using a 𝐵-ordering over the ring ℤ4 . This algorithm can
be applied to any multiplicative property over ℤ4 . It is shown
that this construction produces many optimal codes over ℤ4 and
also good binary codes.

I. I NTRODUCTION
Surprisingly, many good binary linear codes can be constructed using the following greedy algorithm with minimum
distance as the selection criterion. Starting with the all zero
vector, all binary vectors of length 𝑛 are considered in lexicographic order, and when the distance of a vector to all other
vectors in the code is at least 𝛿, the vector is added to the
code. Levenstein [11] proved that the resulting code (called
lexicode), is linear. Conway and Sloane [6] proved that the
𝑙
lexicodes are linear over ﬁelds of order 22 , 𝑙 ∈ ℕ. Moreover,
they proved linearity when using a more general selection
criterion called a turning-set. Brualdi and Pless [5] discussed
another generalization of binary lexicodes. They introduced
the concept of 𝐵-ordering, which is used in the greedy
algorithm instead of the standard basis. Their starting point is
a list of binary vectors of length 𝑛, ordered lexicographically
with respect to a basis obtained by adding recursively all
previous words to the next basis word. They also proved that
the resulting lexicodes are linear. Unfortunately, for ﬁelds other
than 𝔽2 , the lexicodes constructed using a 𝐵-ordering are not
always linear. To solve this problem, Bonn [3] introduced
another concept called forcing linearity. In this case, a list of
all vectors over 𝔽 𝑞 of length 𝑛 is searched. This list need not be
ordered in a speciﬁc way. If a vector a satisfying 𝑑(a, y) ≥ 𝛿
is found, then a is added to the lexicode as well as all its
multiples without checking the minimum distance condition.
Surprisingly, the minimum distance condition is satisﬁed for
all added words [3, Proposition 1]. Thus the resulting code,
which is forced to be linear over all ﬁnite ﬁelds, has a basis
composed of the selected vectors a and has minimum distance
greater than or equal to the designed distance 𝛿. Azab et al. [1]
presented an almost greedy algorithm over ℤ4 using a 𝐵ordering and considering the Lee distance.
Recently, van Zanten and Nengah Suparta [13] generalized
the work of Bonn to a more general selection property over
an arbitrary ﬁnite ﬁeld 𝔽 𝑞 . They considered a 𝐵-ordering on
𝔽 𝑞𝑛 . The basis 𝐵 = {b1 , . . . , b 𝑛 } is ordered with respect
to a lexicographically ordered list in a recursive way. By
using a multiplicative selection property 𝑃 , they proved that

II. C ONSTRUCTION OF L EXICODES OVER ℤ4
A linear code 𝐶 of length 𝑛 over ℤ4 is an additive subgroup
over ℤ4𝑛 . For x ∈ ℤ4𝑛 , denote the number of components of
x equal to 𝑎 by 𝑛 𝑎 (x). Hence the Hamming weight of x is
𝑤𝑡 𝐻 (x) = 𝑛1 (x) + 𝑛2 (x) + 𝑛3 (x). The Lee weight of x is
𝑤𝑡 𝐿 (x) = 𝑛1 (x) + 2𝑛2 (x) + 𝑛3 (x), and the Euclidean weight
of x is 𝑤𝑡 𝐸 (x) = 𝑛1 (x) + 4𝑛2 (x) + 𝑛3 (x). The Hamming, Lee
and Euclidean distances 𝑑 𝐻 (x, y), 𝑑 𝐿 (x, y), 𝑑 𝐸 (x, y) between
two vectors x and y are 𝑤𝑡 𝐻 (x − y), 𝑤𝑡 𝐿 (x − y) and 𝑤𝑡 𝐸 (x −

1

y), respectively. The minimum Hamming, Lee and Euclidean
weights, 𝑑 𝐻 , 𝑑 𝐿 and 𝑑 𝐸 of 𝐶 are the smallest Hamming, Lee
and Euclidean weights among all nonzero codewords of 𝐶.
ℤ4𝑛 is a linear code over ℤ4 with basis 𝐵 = {𝑏1 , . . . , 𝑏 𝑛 }.
With respect to this basis, we recursively deﬁne a lexicographically ordered list 𝑉 𝑖 = 𝑥1 , 𝑥2 , . . . , 𝑥4 𝑖 as follows

𝐴 we have a nested sequence of linear codes
0 = 𝐶0 ⊂ 𝐶1 ⊂ . . . ⊂ 𝐶 𝑛 .

The set 𝐵 = {𝑎 𝑖1 , . . . , 𝑎 𝑖𝑙 } is a generating set for the code
𝐶 𝑖 . The code 𝐶 𝑛 is the so-called lexicode. This is a maximal
code in the sense that it cannot be contained in a larger code
with the same generating set and property. Since the codes 𝐶 𝑖
𝑉0 := 0,
depend only on the selection property 𝑃 and ordering 𝐵, the
𝑉 𝑖 := 𝑉 𝑖−1 , 𝑏 𝑖 + 𝑉 𝑖−1 , 2𝑏 𝑖 + 𝑉 𝑖−1 , 3𝑏 𝑖 + 𝑉 𝑖−1 , 1 ≤ 𝑖 ≤ 𝑛.
code 𝐶 𝑛 is denoted by 𝐶(𝐵, 𝑃 ).
In this way ∣𝑉 𝑖 ∣ = 4 𝑖 , and we can identify ℤ4𝑛 by 𝑉 𝑛 . Assume
Remark 1: Our deﬁnition of the multiplicative property
now that we have a property 𝑃 which can test if a vector differs from that of van Zanten and Nengah Suparta [13].
c ∈ ℤ4𝑛 is selected or not. If this property is multiplicative, the They deﬁned a multiplicative property over a ﬁnite ﬁeld as a
following greedy algorithm provides lexicodes over ℤ4𝑛 .
boolean valued function 𝑃 for which 𝑃 [x] implies 𝑃 [𝛼x] for
Algorithm A
all 𝛼 ∈ 𝔽 𝑞 . Since 𝑃 [a 𝑖 + c] holds, then 𝑃 [a 𝑖 + 𝛼c] from Step
2 of [13, Algorithm A]. If the property 𝑃 is multiplicative,
1) 𝐶0 := 0; 𝑖 := 1;
then 𝑃 [𝛼−1 (a 𝑖 + 𝛼c)] = 𝑃 [𝛼−1 a 𝑖 + c] for all 𝛼 ∈ 𝐹 𝑞 . This is
2) select the ﬁrst vector ai ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 such that 𝑃 [ai + c] and
no longer true over rings since there are zero divisors. Hence
𝑃 [2ai + c] for all c ∈ 𝐶 𝑖−1 ;
3) if such an 𝑎 𝑖 exists, then 𝐶 𝑖 := 𝐶 𝑖−1 , 𝑎 𝑖 + 𝐶 𝑖−1 , 2𝑎 𝑖 + there are some vectors c ∈ 𝐶 𝑖 which are missing and may
not satisfy the property 𝑃 even if the code is linear and the
𝐶 𝑖−1 , 3𝑎 𝑖 + 𝐶 𝑖−1 ; otherwise 𝐶 𝑖 := 𝐶 𝑖−1 ;
property is multiplicative. This justiﬁes our modiﬁcation of
4) 𝑖 := 𝑖 + 1; return to 2.
the multiplicative property and adding the constraint in Step
For 0 < 𝑖 ≤ 𝑛, the codes 𝐶 𝑖 are forced to be linear because we
2 to also satisfy 𝑃 [2a 𝑖 + c].
take all linear combinations of the selected vectors 𝑎 𝑖1 , . . . , 𝑎 𝑖𝑙 ;
Theorem 2: For any basis 𝐵 of ℤ4𝑛 and any multiplicative
𝑙 ≤ 𝑖. 𝐶 𝑖 has a generating set formed by the selected vectors
selection criteria 𝑃 , the lexicode 𝐶(𝐵, 𝑃 ) is linear and 𝑃 [x]
𝑎 𝑖1 , . . . , 𝑎 𝑖𝑙 .
holds for each codeword x ∕= 0.
Considering the greedy algorithm [13, Algorithm A] for
Proof: The linearity of the code is assured by the code
ﬁnite ﬁelds, a natural question that arises is, can a vector construction. Since 𝑃 [a + c], 𝑃 [2a + c] for all c ∈ 𝐶 , and
i
i
𝑖−1
/
x ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 exist with 𝑃 [x + c] for all c ∈ 𝐶 𝑖 and x ∈ 𝐶 𝑖 . the property 𝑃 is multiplicative, then for all c ∈ 𝐶 , we also
𝑖−1
The following lemma, which is an extension of [13, Theorem have 𝑃 [3a + 3c], and 𝑃 [2a + 3c]. Since 𝐶
i
i
𝑖−1 is linear, this is
2.1], guarantees that such a vector x does not exist.
equivalent to having that 𝑃 [𝛼ai +c] for all c ∈ 𝐶 𝑖−1 . Applying
Lemma 1: Let 𝑃 be a multiplicative property over ℤ4 , and this result for 𝑖 = 1, 2, . . . , 𝑘 sequentially yields that 𝑃 [x] is
let ai ∈ 𝑉 𝑖 be such that 𝑃 [ai +c] and 𝑃 [2ai +c] for all c ∈ 𝐶 𝑖−1 , true for any codeword x ∕= 0, since the vectors a , a , . . . , a
1 2
k
for 𝑖 ≥ 1. Then every x ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 satisfying 𝑃 [x + c] and constitute a generating set for the code 𝐶(𝐵, 𝑃 ).
𝑃 [2x + c] for all c ∈ 𝐶 𝑖 is in 𝐶 𝑖 .
III. S ELF -O RTHOGONAL C ODES
Proof: The proof is by induction on 𝑖. Let 𝑗 > 0 be the
ﬁrst index such that 𝑃 [aj ] and 𝑃 [2aj ]. Hence 𝐶0 = 𝐶1 =
Let x = 𝑥1 . . . 𝑥 𝑛 and y = 𝑦1 . . . 𝑦 𝑛 be two elements of
. . . = 𝐶 𝑗−1 = 0, 𝐶 𝑗 = 0, aj , 2aj , 3aj . Let x ∈ 𝑉 𝑗 ∖ 𝑉 𝑗−1 be a ℤ4𝑛 . The inner product of x and y in ℤ4𝑛 is deﬁned as x ⋅ y =
vector such that 𝑃 [x + 𝛼a 𝑗 ] and 𝑃 [2x + 𝛼a 𝑗 ] for 0 ≤ 𝛼 ≤ 3. 𝑥1 𝑦1 + . . . + 𝑥 𝑛 𝑦 𝑛 (mod 4). Let 𝐶 be a ℤ4 linear code of
Since x ∈ 𝑉 𝑗 ∖ 𝑉 𝑗−1 , we can write x = 𝛽aj + v for some length 𝑛. The dual code of 𝐶 is deﬁned as 𝐶 ⊥ = {𝑥 ∈ ℤ4 ∣𝑥 ⋅
𝛽 ∕= 0 and some v ∈ 𝑉 𝑖−1 . If v = 0, then we have x = 𝛽a 𝑗 . 𝑐 = 0 for all 𝑐 ∈ 𝐶}. A code is said to be self-orthogonal if
Hence x ∈ 𝐶 𝑗 . If v ∕= 0, we ﬁrst take 𝛼 = −𝛽 and obtain
𝐶 ⊂ 𝐶 ⊥.
𝑃 [v], then take 𝛼 = −2𝛽 and obtain 𝑃 [2v]. This contradict
Using Algorithm A and the selection property 𝑃 [x] is true if
the assumption on 𝑗.
and only if x ⋅ x = 0, we obtain linear lexicodes 𝐶(𝐵, 𝑃 ) over
Let ai ∈ 𝑉 𝑖 , 𝑖 > 𝑗, be a selected vector such that 𝑃 [ai + c] ℤ4𝑛 . This is because this property is multiplicative over ℤ4 , i.e.,
and 𝑃 [2ai + c] for all c ∈ 𝐶 𝑖−1 . Assume that the lemma holds x ⋅ x = 0 implies that 3x ⋅ 3x = 0. Hence from Theorem 2, we
for all relevant index values less that 𝑖. Now let x ∈ 𝑉 𝑖 ∖ 𝑉 𝑖−1 have that the code 𝐶(𝐵, 𝑃 ) for this criteria is linear and 𝑃 [x]
such that 𝑃 [x + c] and 𝑃 [2x + c] for all c ∈ 𝐶 𝑖 . Since x ∈ holds for all x ∈ 𝐶(𝐵, 𝑃 ). Table I presents a number of codes
𝑉 𝑖 ∖ 𝑉 𝑖−1 , we can write x = 𝛽a 𝑖 + v for some v ∈ 𝑉 𝑖−1 obtained using this selection property. In the case of lexicodes
and 𝛽 ∕= 0. If we take c = −𝛽a 𝑖 + c′ and c = −2𝛽ai + c′ , over ﬁelds, this selection criteria is sufﬁcient to produce selfit follows that 𝑃 [v + c′ ] and 𝑃 [2v + c′ ] for all c′ ∈ 𝐶 𝑖−1 . orthogonal lexicodes. However this is not the case over ℤ4 ,
From the induction assumption we have that v ∈ 𝐶 𝑖−1 . Since since the argument of [13, Corollary 5.1] is not true over rings,
x = 𝛽ai + v, hence x ∈ 𝐶 𝑖 .
namely we can have x⋅x = 0, y ⋅y = 0 and (x+y)⋅(x+y) = 0
Lemma 1 shows that when a vector ai ∈ 𝑉 𝑖 is found without having x ⋅ y = 0. However, this criteria may result in
satisfying Step 2 of Algorithm A, and after extending the list of a self-orthogonal code. For instance, the ﬁrst code in Table I
codewords in Step 3, we can continue the selection procedure is self-orthogonal, whereas the others are not. In this table,
by searching the sublist 𝑉 𝑖+1 ∖𝑉 𝑖 . Thus at the end of Algorithm
𝐺 𝐶(𝐵,𝑃 ) is the generator set for the code 𝐶(𝐵, 𝑃 ).

2

TABLE I
L EXICODES OVER ℤ4𝑛 WITH THE S ELECTION P ROPERTY x ⋅ x = 0
𝑛
3

Basis of ℤ4𝑛
Canonical basis

4

b1 = 0001
b2 = 1100
b3 = 0110
b4 = 0011
Canonical basis

6

6

8

8

b1 = 322323
b2 = 220033
b3 = 311201
b4 = 322122
b5 = 212130
b6 = 231230
Canonical basis

b1
b2
b3
b4
b5
b6
b7
b8

=
=
=
=
=
=
=
=

32121211
01132301
23002111
22231202
11200323
01312220
20121213
31012112

𝐺 𝐶(𝐵,𝑃 )
a1 = 200
a2 = 002
a1 = 0002
a2 = 1100
a3 = 0110
a4 = 0011
a1 = 200000
a2 = 101000
a3 = 110000
a4 = 100100
a5 = 100010
a6 = 100001
a1 = 200202
a2 = 220033
a3 = 311201
a4 = 322122
a5 = 130013
a6 = 113113
a1 = 200000000
a2 = 11000000
a3 = 10100000
a4 = 10010000
a5 = 10001000
a6 = 10000100
a7 = 10000010
a8 = 10000001
a1 = 20202022
a2 = 33213112
a3 = 23002111
a4 = 22231202
a5 = 11200323
a6 = 33033031
a7 = 20121213
a8 = 23133323

TABLE II
L EXICODES OVER ℤ4𝑛 WITH THE S ELECTION P ROPERTY 𝑤 𝐿 (x) ≥ 𝛿

Type
22

𝑑𝐿
2

𝑛
3

Basis of ℤ4𝑛
Canonical basis

𝛿
2

43 2

2

4

2

45 2

2

5

b1 = 0001
b2 = 1100
b3 = 0110
b4 = 0011
Canonical basis
b1 = 10100
b2 = 10010
b3 = 33100
b4 = 00003
b5 = 00100
Canonical basis

3

b1
b2
b3
b4
b5
b6

2

5
45 2

2
6

47 2

6
2

=
=
=
=
=
=

231311
122322
122101
211321
110321
132023

6

3

4

3
”

47 2

2

6

4
”

6

”

5

6

”

6

𝐺 𝐶(𝐵,𝑃 )
a1 = 110
a2 = 101
a1 = 1100
a2 = 0110
a3 = 0011

Type
42 2

𝑑𝐿
2

SO/O
×

43 2

2

×

11100
21010
31001
11110
33103

43

3

×

42

3

×

a1 = 211000
a2 = 12011
a3 = 200011
a1 = 231311
a2 = 122322
a2 = 122101
a2 = 312221

43

4

S

44

2

×

a1
a2
a3
a1
a2
a3
a1
a2
a1

43

4

S

43

4

S

42

5

SO

4

7

SO

a1
a2
a3
a1
a2

=
=
=
=
=

=
=
=
=
=
=
=
=
=

231311
122101
333203
231311
122101
210001
231311
122101
231311

from ℤ4 to 𝔽2 is deﬁned as
2

IV. L EXICODES WITH A W EIGHT C RITERIA

𝒢 ′ (0) = 00, 𝒢 ′ (1) = 01, 𝒢 ′ (2) = 11, 𝒢 ′ (3) = 10.

As mentioned in the Introduction, the ﬁrst lexicodes were
obtained using a weight criteria over ﬁnite ﬁelds. The weight
criteria with the Lee weight is not multiplicative in ℤ4 in the
sense of [13]. Conversely, with the modiﬁed deﬁnition of the
multiplicative property we have the following result.
Lemma 3: Let 𝛿 be a positive integer. We have the property
𝑃 [x] if and only if 𝑤 𝐿 (x) ≥ 𝛿 is a multiplicative property.
Proof: We must show that if 𝑤 𝐿 (x) ≥ 𝛿 then 𝑤 𝐿 (3x) ≥ 𝛿.
It is easy to see that 𝑛1 (3x) = 𝑛3 (x), 𝑛3 (3x) = 𝑛1 (x) and
𝑛2 (3x) = 𝑛2 (x). This gives that 𝑤 𝐿 (3x) = 𝑤 𝐿 (x). Hence the
result follows.
Corollary 4: The lexicode 𝐶(𝐵, 𝛿) given by Algorithm A
for designed distance 𝛿 is a linear code over ℤ4 with minimum
distance greater than or equal to 𝛿.
Tables II and III presents some lexicodes obtained using the
weight criteria. The notation × denotes that the code is not
self-dual, 𝑆 denotes that the code is self-dual, and 𝑆𝑂 denotes
that the code is self-orthogonal. 𝐺 𝐶(𝐵,𝑃 ) is the generator set
of 𝐶(𝐵, 𝑃 ).

Then the Gray map 𝒢 : ℤ4𝑛 −→ 𝔽2𝑛 is deﬁned as
2
𝒢(𝑎1 , . . . 𝑎 𝑛 ) = (𝒢 ′ (𝑎1 ), . . . , 𝒢 ′ (𝑎 𝑛 )).
The following result is well known.
Lemma 5: The Gray map 𝒢 is the distance-preserving map
(ℤ4𝑛 , Lee distance) −→ (𝔽2𝑛 , Hamming distance).
2
The covering radius of a code 𝐶 over ℤ4 with respect to
the Lee distance is deﬁned as
𝜌 𝐿 (𝐶) = max {min 𝑑 𝐿 (𝑢, 𝑐)}.
𝑛
𝑢∈ℤ4

𝑐∈𝐶

ℤ4𝑛 ,

For 𝑢 ∈
the coset of 𝐶 is deﬁned to be the set 𝑢 + 𝐶 =
{𝑢 + 𝑐∣𝑐 ∈ 𝐶}. A minimum weight vector in a coset is called
a coset leader. It is obvious that the covering radius of 𝐶
with respect to the Lee weight is the largest minimum weight
among all cosets.
Lemma 6 ([2, Proposition 3.2]): Let 𝐶 be a code over ℤ4
with 𝒢(𝐶) the Gray map image of 𝐶. Then

V. G OOD B INARY C ODES FROM L EXICODES OVER ℤ4

𝜌 𝐿 (𝐶) = 𝜌(𝒢(𝐶))).

It was proven by Hammons et al. [9] that some of the
best known nonlinear binary codes such as the NordstromRobinson, Kerdock, Preparata, Goethals and Delsarte-Goethals
codes are Gray map images of ℤ4 -linear codes. The Gray map

Proposition 7: Let 0 = 𝐶0 ⊂ 𝐶1 ⊂ . . . ⊂ 𝐶 𝑛 = 𝐶(𝐵, 𝛿)
be the set of nested codes obtained by Algorithm 𝐴 for
designed distance 𝛿. Hence if 𝐶 𝑖 ⊊ 𝐶 𝑛 is of type 4 𝑘 𝑖1 2 𝑘 𝑖2

3

TABLE III
L EXICODES OVER ℤ4𝑛 WITH THE S ELECTION P ROPERTY 𝑤 𝐿 (x) ≥ 𝛿
𝑛
8

8

b1
b2
b3
b4
b5
b6
b7
b8
b1
b2
b3
b4
b5
b6
b7
b8

Basis of ℤ4𝑛
= 22312221
= 11311303
= 00121200
= 01313032
= 30122132
= 03213232
= 32132232
= 12201321
= 11112233
= 23100323
= 02222133
= 01133231
= 21310130
= 23101130
= 23001233
= 11203211

8

𝛿
5

𝐺 𝐶 (𝐵, 𝑃 )
a1 = 22312221
a2 = 11311303
a3 = 01030232

2

a1
a2
a3
a4
a5
a6
a7

=
=
=
=
=
=
=

a1
a2
a3
a4
a5
a1
a2
a3
a4
a1
a2
a3
a1
a2
a3
a1
a1
a2
a3
a4
a5
a6
a1
a2
a3
a4
a1
a2
a1
a2

3

8

”

4

8

5

8

6

8
8

b1
b2
b3
b4
b5
b6
b7
b8

=
=
=
=
=
=
=
=

10003121
01001231
00103332
00012311
22233221
10302221
10312111
02311100

7
2

8

3−6

8

7

8

8

Type
43

𝑑𝐿
5

SO/S
SO

11112233
23100323
02222133
01133231
21310130
20311130
22301233

47

2

×

=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=

11112233
23100323
02222133
21310130
22133112
11112233
23100323
02222133
23132112
11112233
23100323
02222133
11112233
23100323
33033123
11112233
10003121
01001231
00103332
00012311
22233221
10302221

45

3

×

44

4

SO

43

5

SO

43

6

SO

41
46

10
2

SO
SO

=
=
=
=
=
=
=
=

10003121
01001231
00103332
00012311
21102321
10310132
21102321
21213100

44

6

S(𝑂8 )

42

7

SO

8

Algorithm 𝐴. Then the binary code 𝒢(𝐶 𝐿 (𝐵, 𝛿)) obtained
from 𝐶 𝐿 (𝐵, 𝛿) by the Gray image meets the Gilbert bound.
Proof: Assume that 𝒢(𝐶 𝑛 ) is a binary code of minimum distance 𝑑, which is the same as the minimum distance of 𝐶 𝐿 (𝐵, 𝛿) since the Gray map is a weight preserving map. Hence we have 𝑑 ≥ 𝛿, and by Lemma 6
𝜌(𝒢(𝐶 𝐿 (𝐵, 𝛿)) = 𝜌 𝐿 (𝐶 𝐿 (𝐵, 𝛿)). Then from Proposition 7 we
have 𝜌 𝐿 (𝐶 𝐿 (𝐵, 𝛿)) ≤ 𝛿 − 1. Since 𝛿 ≤ 𝑑, 𝒢(𝐶 𝑛 ) has covering
radius less than 𝑑 𝐿 − 1. It is well known [10, p. 87], that a
code over 𝔽 𝑞 with minimum distance 𝑑 and covering radius
𝑑 − 1 or less meets the Gilbert bound.

SO

R EFERENCES

2

4

[1] S. Azab, M. Zayed, M. Atrash, and M. Ashker, “Linear codes over ℤ4
using almost-greedy algorithm,” J. Islamic Univ. Gaza, vol. 11, no. 1,
pp. 43–58, 2003.
[2] T. Aoki, P. Gaborit, M. Harada, M. Ozeki, and P. Sol´ , “On the covering
e
radius of ℤ4 and their lattices,” IEEE Trans. Inform. Theory, vol. 45,
no. 6, pp. 2162–2168, Sept. 1999.
[3] J. T. Bonn, “Forcing linearity on greedy codes,” Designs, Codes, Crypt.,
vol. 9, no. 1, pp. 39–49, Aug. 1996.
[4] A. Bonnecaze, P. Sol´ and A. R. Calderbank, “Quaternary quadratic
e
residue codes and unimodular lattices,” IEEE Trans. Inform. Theory,
vol. 41, no. 2, pp. 366–377, Mar. 1995.
[5] R. A. Brualdi and V. Pless, “Greedy codes,” J. Combin. Theory A, vol.
64, pp. 10–30, 1993.
[6] J. H. Conway and N. J. A. Sloane, “Lexicographic codes: Errorcorrecting codes from game theory,” IEEE Trans. Inform. Theory, vol.
32, no. 3, pp. 337–348, May 1986.
[7] J. H. Conway and N. J. A. Sloane, Sphere-packing, lattices and groups
New York:Springer-Verlag, 1988.
[8] S. T. Dougherty, A. Gulliver, and Y. H. Park, “Optimal linear codes over
ℤ 𝑚 ,” J. Korean Math. Soc., vol. 44, no. 5, pp. 1139–1162, 2007.
[9] A. R. Hammons, Jr., P. V. Kumar, A. R. Calderbank, N. J. A. Sloane, and
P. Sol´ , “The ℤ4 -linearity of Kerdock, Preparata, Goethals and related
e
codes,” IEEE Trans. Inform. Theory, vol. 40, no. 2, pp. 301–319, Mar.
1994.
[10] W. C. Huffman and V. Pless, Fundamentals of Error-correcting Codes,
New York:Cambridge Univ. Press, 2003.
[11] V. I. Levenstein, “A class of systematic codes,” Soviet Math. Dokl., vol.
1, pp. 368–371, 1960.
[12] A. J. van Zanten, “Lexicographic order and linearity,” Designs, Codes,
Crypt., vol. 10, no. 1, pp. 85–97, Jan. 1997.
[13] A. J. van Zanten and I. Nengah Suparta, “On the construction of linear
𝑞-ary lexicodes,” Designs, Codes, Crypt., vol. 37, no. 1, pp. 15–29, Oct.
2005.

the covering radius 𝜌 𝐿 (𝐶 𝑖 ) satisﬁes
𝛿 ≤ 𝜌 𝐿 (𝐶 𝑖 ) ≤ 2(𝑛 − 𝑘 𝑖1 ) − 𝑘 𝑖2 .

(1)

⌊𝛿/2⌋ ≤ ⌊𝑑/2⌋ ≤ 𝜌 𝐿 (𝐶(𝐵, 𝛿)) ≤ 𝛿 − 1 ≤ 𝑑 − 1.

(2)

Then we have

Proof: Assume that 𝐶 𝑖 ⊊ 𝐶(𝐵, 𝛿) for some 1 < 𝑖 < 𝑛.
Now, let 𝑥 ∈ 𝐶 𝑛 ∖ 𝐶 𝑖 be a codeword of minimum weight.
Such a vector must be a coset leader of 𝐶 𝑖 , as 𝐶 𝑖 ⊊ 𝐶(𝐵, 𝛿).
Hence 𝜌 𝐿 (𝐶 𝑖 ) ≥ 𝑤𝑡 𝐿 (𝑥) and then 𝜌 𝐿 (𝐶 𝑖 ) ≥ 𝛿. The right side
of (1) is obtained from the redundancy bound [2, Theorem
4.6]. Since each vector in ℤ4𝑛 has distance 𝛿 − 1 or less to
some vector in 𝐶 𝑛 , the covering radius of 𝐶 𝑛 is at most 𝛿 − 1.
By the construction we have ⌊𝛿/2⌋ ≤ ⌊𝑑/2⌋. The left side of
(2) is obtained from the packing radius bound [2, Theorem
4.3].
Theorem 8: Let 𝐶 𝐿 (𝐵, 𝛿) be the lexicode obtained by

4

