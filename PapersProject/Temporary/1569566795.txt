Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Fri May 18 13:36:33 2012
ModDate:        Tue Jun 19 12:55:54 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      547819 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569566795

Bipartite Index Coding
Arash Saber Tehrani

Michael J. Neely

Alexandros G. Dimakis

Department of Electrical Engineering Department of Electrical Engineering Department of Electrical Engineering
University of Southern California
University of Southern California
University of Southern California
Los Angeles, CA 90089, USA
Los Angeles, CA 90089, USA
Los Angeles, CA 90089, USA
email: mjneely@usc.edu
email: dimakis@usc.edu
email: saberteh@usc.edu

w = E(x1 , · · · , xn ) ∈ WX , each user ui is able to decode its
designated packet from the broadcast message w and its
side information. Let us call such a message w a mission
completing message. Note that we use the subscript X for
the set WX since for a speciﬁc index coding instance G,
the size of the set WX depends on the size of X . Let βX (G)
be the minimum coding length of the solution per input
symbol when packets belong to set X , i.e., min log|X | |WX |
over the encoding functions E : X n → WX that are mission
completing. Deﬁne the optimal broadcast rate β(G) to be

Abstract—We analyze a generalized index coding
problem that allows multiple users to request the
same packet. For this problem we introduce a novel
coding scheme called partition multicast. Our scheme
can be seen as a natural generalization of clique cover
for directed index coding problems. Further, partition
multicast corresponds to an achievable scheme for the
generalized bipartite index coding problem that we
introduce in this paper. Our scheme partitions the
nodes into groups and solves a multicasting problem
within each group. We show that Partition Multicast
is optimal for a few families of graphs and generalizes
previous achievable schemes, namely directed cycle
covers. We also show that ﬁnding the best partition
is computationally intractable to compute in general.

β(G)

lim βX (G) = inf βX (G)

|X |→∞

|X |

(1)

where the limit exists due to sub-additivity of β(·) as
explained in [7].
In network coding terms, this is the non-linear vector
capacity. Further, it can be interpreted as the average
asymptotic number of broadcast symbols (bits) needed per
symbols (bits) of input. To see how the above can be a
ratio of two quantities in bits, notice that log|X | βX (G) =
log2 βX (G)/ log2 |X |.
By representing an instance of index coding problem
with symmetric demands by an undirected graph G as
in [2], graph-theoretic parameters can be used to derive
bounds on the broadcast rate β(G), as follows:

I. Introduction
HE problem of broadcasting information to a set of
receivers that have some side information is relevant
for many applications. The index coding problem is a
simpliﬁed noiseless wireless broadcast problem that was
introduced by Birk and Kol [1], and further developed in
[2], [3]. Despite the simplicity of the model, the problem
is fundamental and interesting: It was recently shown that
any network coding problem can be reduced to an instance
of index coding [4] and [5]. Further, Wang [6] analyzed
broadcast packet erasure problems that use closely related
techniques.
In the original setup, Bar-Yossef et al. in [2] considered
a base station that aims at transmitting a set of n packets
x1 , · · · , xn ∈ X to n diﬀerent users u1 , · · · , un , while each
user ui requires a speciﬁc packet xi (with the same index i)
for i ∈ {1, · · · , n}. Further, each user may have some other
packets as side information. The work in [2] considered
the restrictive assumption of symmetric demands where if
user ui wants packet xi and knows packet xj , then user uj
who wants packet xj must know packet xi . This system
was modeled by an undirected graph G where each node i
represents both user ui and packet xi where user ui wants
packet xi and an edge between node i and j means that
users ui and uj know packets xj and xi respectively.
A solution of the problem G is a ﬁnite alphabet WX
and an encoding function E : X n → WX such that for each
tuple x1 , · · · , xn ∈ X n , if the server transmits the messages

T

α(G) ≤ β(G) ≤ χ(G)

(2)

where, α(G), χ(G) denote the independence and cliquecover numbers of G, respectively. Note that both upper
and lower bounds are NP-hard to compute. Let β (G)
denote the linear scalar capacity of the problem, i.e., the
solution under linear encoding function E. Bar-Yossef et al.
in [2] showed that the best possible linear scalar capacity
β (G) for the server is the graph functional minrank2 (G).
Lubetzky et al. in [7] showed that in general nonlinear
schemes can outperform linear ones, i.e., β(G) ≤ β (G).
Speciﬁcally, they found families of graphs for which the
gap between the nonlinear scheme achieving β(G) and
linear schemes is polynomial in the number of nodes of
G.
Bar-Yossef et al. extended the model of [3] to allow
asymmetric demands. That is, they changed the undirected graph model to a directed one where a directed edge
from node i to node j denoted by (i, j) indicates that user

This work was supported in part by NSF Career Grant CCF1055099 and research gifts by Intel and Microsoft Research.

1

ui knows packet xj . The main limitation of this model is
that a packet cannot be requested by more than one user.
Deriving tight bounds for β(G) is a challenging problem.
Clearly, the number of transmissions required by any
achievable scheme is an upper bound on β(G). Chaudhry
et al. [8] and, independently, Neely et al. [9] introduced
the directed cycle cover scheme which is optimal for a
few families of graphs, namely, directed cycles and sparse
directed graphs of maximum out-degree one.
For a directed graph G, one can ﬁnd the maximum
number of disjoint directed cycles and then as shown in
[9] resolve each cycle C with |C| − 1 transmissions, where
|C| represents the number of packets in the directed cycle.
Let C(G) denote the maximum number of disjoint directed
cycles in graph G. Using the cycle cover scheme, the server
can deliver all the packets to their recipients in m − C(G)
transmissions. Thus β(G) ≤ m − C(G).
There exist graphs for which the gap between m − C(G)
and β(G) is very large. For example, when each user in
graph G knows all packets except the one it wants, β(G) =
1 while C(G) = m/2 , which gives a gap linear in m.
Our goal in this paper is to introduce an achievable
index coding scheme that works for more general problems
and is provably matching the optimal β(G) for a broader
family of graphs.
We introduce such a scheme by partitioning the graph
into subgraphs and resolving each partition through multicasting all the desired packets of that subgraph. Our
scheme is a generalization of cycle cover and can be
shown to be equal to β(G) for a larger set of graphs.
Further, it can be considered as a generalization of clique
cover number X (G) for directed bipartite index coding
problems.

u1
x1
u2
x2
u3
x3
u4
x4
u5
x5
u6

Fig. 1: An example of index coding problem with n = 6
users and m = 5 packets. The black edges show the side
information of the users while the blue edges connect them
to their demanded packets.

a directed edge (ui , xk ) implies that user ui has packet
xk as side information. We note that our model contains
undirected and directed index coding as special cases and
can further model packet popularities.
We deﬁne the incoming and outgoing neighborhood of
a node v (either a user node or a packet node) denoted by
Nin (v) and Nout (v) respectively, as follows
Nin (v)

= {w|(w, v) ∈ E},

(3)

Nout (v)

= {w|(v, w) ∈ E}.

(4)

For each user ui , Nin (ui ) is the packet this user demands1 ,
and Nout (ui ) denotes the set of packets user ui knows.
Further, for each packet xj , Nin (xj ) is the set of all users
who know xj as side information, and Nout (xj ) is the set of
users who want packet xj . Such a graph G is shown in Fig.
1 with n = 6 users and m = 5 packets. For instance, user
u1 demands packet x1 , i.e., Nin (u1 ) = x1 , and it knows
packets Nout (u1 ) = {x2 , x3 }.
For the set S ⊆ P of packets, we deﬁne GS = (US , S, ES )
to be the subgraph induced by S, where US and ES are
deﬁned as follows

II. Our Results
We consider a noiseless wireless system where a broadcast station wants to transmit the set of packets P =
{x1 , x2 , · · · , xm } from a ﬁnite alphabet X where |X | > 1,
to a set of users U = {u1 , u2 , · · · , un } while each user ui
demands exactly one speciﬁc packet and may know some
other packets as side information.
We analyze the following generalized problem that we
call bipartite index coding. In this problem some packets may be demanded by more than one user. This is a very
natural requirement, especially in mobile content delivery
problems where many users demand few popular ﬁles. This
generalization of index coding was previously analyzed
in [10] and [9]. This general framework is presented in
the form of directed hypergraphs [10], where each directed
hyperedge from a packet to a set of packets represents a
user demanding the source of the edge and knowing the
tails.
Equivalently, in this paper we represent an instance of
the problem by a directed bipartite graph G = (U, P, E)
with users on one side and packets on the other. A directed
edge (xj , ui ) indicates that user ui demands packet xj , and

US = Nout (S) = {ui |ui ∈

Nout (sj )}

(5)

ES = {e ∈ E|N (e) ⊆ S ∪ US }2

(6)

sj ∈S

A valid packet decomposition of the graph G = (U, P, E)
for some 0 < k ≤ m is a set of k disjoint subgraphs
GS1 , · · · , GSK induced by k disjoint packet sets, namely
S1 , · · · , Sk , such that
1 Recall that we assumed, without loss of generality, that each user
wants one packet, i.e., |Nin (ui )| = 1 for all i = 1, 2, · · · , n.
1
2 For the edge e, we deﬁne its neighborhood N (e) to be the two
vertices incident to e, i.e., for e = (v, w) we have N (e) = {v, w}.

2

•
•

Si ∩ Sj = ∅ if i = j for i, j ∈ {1, · · · , k}.
S1 ∪ · · · ∪ Sk = P.

optimization problem
K

PaMul: maximize

Since each user demands exactly one packet, it is apparent
that for a packet decomposition with k subgraphs we have

di
i=1

subject to

US1 ∪ US2 ∪ · · · ∪ USk = U.

1≤K≤m
S1 , · · · , Sk ⊂ P
GS1 , · · · , GSK is a valid
packet decomposition

We present an upper bound on β(G). Our bound can be
considered as a generalization of the clique cover number
χ(G) used in undirected index coding. Our upper bound
is an achievable scheme that we call partition multicast.
Further, this bound can be considered as a solution for the
complementary index coding problem [8] whose objective
is to maximize the number of saved transmissions.
Let us begin with an observation. Assume the graph G =
(U, P, E), where each user knows at least d packets as side
information, i.e., minui ∈U |Nout (ui )| = d. We call d the
minimum out-degree or minimum knowledge of the graph.
Then, the server can transmit m−d independent equations
in the form α1 x1 +α2 x2 +· · ·+αm xm where αi ’s are taken
from some ﬁnite ﬁeld F, for which each user can decode the
packet it demands. We denote the number of transmission
required for this scheme over the graph G by T (G) = m−d.
Of course, we consider the ﬁeld F to be large enough so
that we are able to produce m − d independent equations.
As is well known, [11] random linear combinations of all
the packets of each multicast set will suﬃce to produce
such linear equations with high probability in a large ﬁeld.
Each user receives m − d linear equations and since the
user knows at least d packets, there are at most m − d
unknowns. Thus, each user can decode all the m packets
by solving a system of linear equations.
We can generalize the above scheme by ﬁnding a cover
of the graph where each subgraph has a large minimum
knowledge such that the sum of these minimum knowledges is maximized. We show that the optimal cover,
i.e., overlapping subgraphs, is suboptimal compare to
the optimal packet decomposition which are set of nonoverlapping subgraphs induced by some set of packets. We
do so in Lemma 1.
Lemma 1: Having overlapping packet sets is suboptimal.
As mentioned, our scheme is a packet decomposition
of the graph where the sum of the minimum out-degrees
are maximized. For example, assume that we partition
the graph into K disjoint subgraphs induced by packet
sets S1 , · · · , SK , each with the minimum knowledge di
for i = 1, · · · , K. Then each subgraph GSi can be resolved in T (GSi ) = |Si | − di transmissions which shows
that all users can obtain their designated packets in
K
k
T (G) =
i=1 T (GSi ) =
i=1 |Si | − di transmissions.
Further, assuming that the packet sets Si are disjoint
k
k
i=1 |Si | = |P| = m gives T (G) = m −
i=1 di . Thus,
the optimal partitioning is the solution to the following

From here on, by optimal scheme, we mean a solution of
the above optimization (there might be many). Note that
in the context of complementary index coding problem,
K
our scheme saves
i=1 di transmissions. We show that
ﬁnding best partition is computationally intractable:
Theorem 1: PaMul is NP hard.
Let us call the problem of ﬁnding the optimal packet decomposition over the undirected graph sum-degree cover.
Then, we prove Theorem 1 by ﬁnding a reduction from
clique cover to sum-degree cover and vice versa in Lemma
2.
Lemma 2: Sum-degree cover and clique cover are
equivalent, i.e., the solution of each one can be derived
from the solution of the other by a polynomial reduction.
To prove Lemma 2, we show that partitioning a clique is
strictly suboptimal in lemma 3. Using Lemma 2 it is easy
to prove Theorem 1.
Proof of Theorem 1: We map any undirected graph
G = (V, E) to a bipartite index coding instance, where
each node i ∈ V is mapped to two nodes xi , ui with
a directed edge (xi , ui ) and each edge {i, j} ∈ E is
mapped to two directed edges (ui , xj ), (uj , xi ). Then we
solve PaMul on the directed bipartite graph and convert
the soution back to the undirected graph. To get the clique
cover3 , we run the Welsh-Powell algorithm [12] which
ﬁnds a ∆ + 1 coloring on a graph with maximum degree
∆, on the complements of the partitions found in the
previous step. Since clique cover for undirected graphs is
NP complete, this completes our proof.
Before we conclude this section, let us analyze the
performance of our scheme for some speciﬁc families of
graphs, namely, directed cycles, complete side information
graphs, and directed acyclic graphs.
If G is a directed cycle, then the knowledge degree for
all users is d = 1, and as a result our scheme can deliver
all packets in m − 1 transmissions which is equal to β(G)
of directed cycles. Since our bound performs as the cycle
cover suggested in [8], [9] as the special case, it is tighter
and requires fewer transmissions.
We know that our scheme cannot reduce the number
of transmissions below β(G). Further, it is known that
β(G) = m for a directed acyclic graph. Since all packets
are demanded by at least one user, a leaf node must exist
3 See

3

the proof of Lemma 2 for more details.

which is a user with no side information. As a result the
minimum knowledge degree of the graph is d = 0 and the
scheme requires m transmissions which is again equal to
β(G).
When the users have complete side information, i.e.,
know all packets except the one they demand, the minimum knowledge degree of the graph is d = m − 1 and our
scheme can deliver all packets in a single transmission.
Note that the complete side information can be represented by an undirected clique.

u1 , x 1

u1
u2

u3 , x 3

III. Overlapping subgraphs are suboptimal

u4 , x 4

u3

x3
x4

u5

u5 , x 5

x2

u4

u2 , x 2

x1

x5

Fig. 2: A cycle of length ﬁve C5 and its representation in
bipartite model.

Here we show that the optimal packet decomposition is
optimal over all covers of the directed bipartite graph G.
proof of Lemma 1: Consider the packet sets to be
overlapping. Let the optimal number of transmissions
k
achieved through the scheme be T (G) = i=1 |Si | − di ,
k
where i=1 |Si | ≥ |P| since the packet sets are overlapping. The key observation for showing the suboptimality of
the overlapping subgraphs is that omitting a packet from
a subgraph GS does not increase number of transmissions
required for transmitting the remaining graph. Speciﬁcally,
consider the set of packets S and let GS be the subgraph
induced by S that has minimum knowledge d. Further, assume x ∈ S. Using the multicast scheme T (GS ) = |S| − d.
Now, consider omitting x from the set S and forming the
new set S = S \ {x} and the induced subgraph GS . Since
one packet is removed from GS , its knowledge degree is at
most reduced by one, i.e., d − 1 ≤ d ≤ d, where d denotes
the knowledge degree of GS . In other words, d can either
be d or d − 1. As a result, we have

length ﬁve and its corresponding bipartite representation.
Consider an instance of index coding problem with symmetric demands and m = n. Finding the optimal partition
which maximizes the sum of minimum out-degrees on the
bipartite graph, is equivalent to ﬁnding the partition which
maximizes the minimum degrees on the corresponding
undirected graph. This is true since in the undirected
model, if user ui who demands packet xi knows packet
xj , then user uj (who wants packet xj ) must know packet
xi , which in return shows that minimum out-degree of a
partition on the bipartite graph is the minimum degree of
the corresponding partition in the undirected one.
We here show that the problem of maximizing the sum
of minimum degrees on undirected graphs which we refer
to as sum-degree cover, is equivalent to the clique cover
problem. Before proving Lemma 2, to shed some light
on the connection of the two problems, we show that
partitioning a clique is strictly suboptimal.
Lemma 3: Consider the graph GS = (S, ES ) to be a
clique, then partitioning this graph is strictly suboptimal,
i.e., for any partitioning of S into sets S1 , · · · , S we have

T (GS ) = |S | − d = |S| − 1 − d ,
which implies T (GS ) − 1 ≤ T (GS ) ≤ T (GS ). Thus,
removing a packet from a graph does not increase the number of transmissions that the multicast scheme requires.
Assume we solve the problem by allowing overlapping
subgraphs. Further, assume we end up with a solution
which contains a subgraph GS induced by set S which
shares some packets x1 , · · · , x with some other subgraphs.
We can therefore omit all these elements from S and form
S = S \{x1 , · · · , x }. Since we know T (GS ) ≤ T (GS ), the
cost function will be either reduced or remain the same.
Furthermore, as packets x1 , · · · , x are included in some
other subgraphs, they will be delivered to their designated
users by multicasting over those subgraphs which shows
that no extra transmission is needed to deliver them. As
a result, using overlapping subgraphs is suboptimal.

T (GS ) <

T (GSi )
i=1

Proof: Note that for any graph GS = (S, ES ),
T (GS ) ≥ 1 since dS ≤ |S| − 1 and T (GS ) = |S| − dS .
The equality in above holds if and only if GS is a clique
for which the minimum degree is dS = |S| − 1. This shows
that for resolving a clique, transmitting a single equation,
namely sum of all packets in the clique, is adequate. So
T (GS ) = 1 if GS is a clique. Then

IV. Sum-degree cover and clique cover are
equivalent

1

T (GSi ) ≥ > 1 = T (GS )
i=1

Finding the optimal partitioning in general, however,
is NP-hard as we mentioned earlier. To show this, we
consider an instance of the index coding problem with
symmetric demands as described in [2], which is a special
case of the bipartite index coding. Fig. 2 shows a cycle of

which completes the proof.
We are ready now to give the proof of the Lemma 2.
Proof of Lemma 2: Consider the undirected graph
G = (V, E) where |V | = m. Further, assume that

4

the maximum sum-degree cover is the set of subgraphs GS1 , · · · , GSK which are induced by set of nodes
S1 , · · · , SK . Note that S1 , · · · , SK is a partition of the
set V . Furthermore, assume that each subgraph has the
minimum degree di .
The clique cover is also a partitioning of the graph into
some disjoint subgraphs where each subgraph is a clique.
Further, for each clique, the minimum degree is one less
than number of the nodes in the clique, i.e., we need
exactly one transmission to resolve each clique. Thus, we
have

subgraph, we ﬁnd a clique cover for the subgraph. From
(9) it follows that the clique cover of all the subgraphs
together is the minimum clique cover of G.
This Lemma shows that for any family of undirected
graphs for which β(G) is equal to the minimum clique
cover, our scheme is optimal and can achieve β(G).
Acknowledgements
The authors would like to thank Dorit Hochbaum and
Gerhard Kramer for fruitful discussions.
References

K

m−

di ≤ χ(G),

[1] Y. Birk and T. Kol, “Informed-source coding-on-demand (iscod)
over broadcast channels,” in Proceedings. IEEE INFOCOM,
vol. 3, 1998, pp. 1257–1264.
[2] Z. Bar-Yossef, Y. Birk, T. Jayram, and T. Kol, “Index coding
with side information,” in Foundations of Computer Science,
2006. FOCS’06. 47th Annual IEEE Symposium on, 2006, pp.
197–206.
[3] ——, “Index coding with side information,” Information Theory,
IEEE Transactions on, vol. 57, no. 3, pp. 1479–1494, 2011.
[4] S. El Rouayheb, A. Sprintson, and C. Georghiades, “On the
index coding problem and its relation to network coding and
matroid theory,” Information Theory, IEEE Transactions on,
vol. 56, no. 7, pp. 3187–3195, 2010.
[5] M. Langberg and A. Sprintson, “On the hardness of approximating the network coding capacity,” in Information Theory, 2008.
ISIT 2008. IEEE International Symposium on. IEEE, 2011,
pp. 315–319.
[6] C. Wang, “On the capacity of wireless 1-hop intersession network
˜
codingNa broadcast packet erasure channel approach,” in Information Theory Proceedings (ISIT), 2010 IEEE International
Symposium on. IEEE, 2010, pp. 1893–1897.
[7] E. Lubetzky and U. Stav, “Nonlinear index coding outperforming the linear optimum,” Information Theory, IEEE Transactions on, vol. 55, no. 8, pp. 3544–3551, 2009.
[8] M. Chaudhry, Z. Asad, A. Sprintson, and M. Langberg, “On the
complementary index coding problem,” in Information Theory
Proceedings (ISIT), 2011 IEEE International Symposium on.
IEEE, 2011, pp. 244–248.
[9] M. Neely, A. Saber Tehrani, and Z. Zhang, “Dynamic index
coding for wireless broadcast networks,” in Proceedings. IEEE
INFOCOM.
[10] N. Alon, A. Hassidim, E. Lubetzky, U. Stav, and A. Weinstein,
“Broadcasting with side information,” in 2008 49th Annual
IEEE Symposium on Foundations of Computer Science. IEEE,
2008, pp. 823–832.
[11] T. Ho, M. M´dard, R. Koetter, D. Karger, M. Eﬀros, J. Shi,
e
and B. Leong, “A random linear network coding approach to
multicast,” Information Theory, IEEE Transactions on, vol. 52,
no. 10, pp. 4413–4430, 2006.
[12] D. Welsh and M. Powell, “An upper bound for the chromatic
number of a graph and its application to timetabling problems,”
The Computer Journal, vol. 10, no. 1, p. 85, 1967.

(7)

i=1

where χ(G) is the clique cover number of G. Now consider
one of the subgraphs, namely GS1 . Since GS1 has the
minimum degree d1 , its complement graph GS1 has the
maximum degree |S1 | − 1 − d1 . Further, by Welsh-Powell
algorithm [12], any graph with maximum degree d has a
vertex coloring of size d+1. So we can color GS1 by |S1 |−d
colors. Based on deﬁnition of coloring, however, we know
that two nodes can have the same color, if they are not
adjacent. As a result, if two nodes have the same color in
GS1 , then they are adjacent in GS1 , i.e., all nodes with the
same color in GS1 form a clique in GS1 . So there exists a
clique cover of size |S1 | − d1 for GS1 . We, however, do not
know if this is the minimum clique cover of GS1 , so
|S1 | − d1 ≥ χ(GS1 ).
Note that partitioning these cliques further is strictly
suboptimal by Lemma 3, i.e., partitioning these cliques
will decrease the sum of min degrees. We can repeat the
same procedure over all subgraphs and decompose each
one to |Si | − di cliques for i = 1, · · · , K. Further, it is
apparent that the minimum clique cover of graph G is less
than or equal to the sum of the minimum clique covers of
all subgraphs GS1 , · · · , GSK . As a result
K

di ≥ χ(G).

m−

(8)

i=1

The above together with (7) shows that
K

m−

di = χ(G).

(9)

i=1

So the costs of both optimizations are the same. Now, we
show that by solving each problem, namely clique cover or
sum-degree cover, we can ﬁnd the solution for the other
one with number of computations polynomial in m. Assume we have the solution for the clique cover, from (9) we
know that the minimum clique cover is also the maximum
sum-degree cover, i.e., the same clique cover can be used
as partitions of sum-degree cover. Further, assume that
we have the solution of the sum-degree cover. By running
the Welsh-Powell algorithm on the complement of each

5

