Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Tue May 15 13:17:10 2012
ModDate:        Tue Jun 19 12:54:18 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      383113 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569566159

Partial Permutation Decoding for Abelian Codes
Jos´ Joaqu´n Bernal-Buitrago and Juan Jacobo Sim´ n
e
ı
o
Departamento de Matemticas
Universidad de Murcia
30100 Murcia, Spain
Email: {josejoaquin.bernal, jsimon}@um.es

and length l over the ﬁeld F. An information set for C is a set
of positions {i1 , . . . , ik } ⊆ {1, . . . , l} such that restricting the
codewords to these positions we get the whole space Fk . For
every codeword the symbols in the positions corresponding
to an information set are called information symbols and the
other l−k positions are called check positions [8]. A generator
matrix for C is a k×l matrix G whose rows form a basis for C.
We say that G is in standard form if it is of the form [Ik | A],
where Ik is the identity matrix of order k. We denote by C ⊥
the dual code of C under the ordinary inner product, that is,
C ⊥ = {v ∈ Fl | u·v = 0 for all u ∈ C}. A parity check matrix
for C is a generator matrix for C ⊥ . If G is a generator matrix
in standard form, it is easy to check that H = [−AT | Il−k ]
is a parity check matrix. In this case we say that H is also in
standard form.
As usual, for any codeword c ∈ C we denote its support by
supp(c) and its Hamming weight by wt(c). We consider the
parameter t = d−1 , where d is the minimum distance of
2
C, that measures the error-correction capability of C. Then we
say that C is an [l, k] t-error-correcting code.
We see the group of permutations on l symbols, Sl , acting
on Fl via σ(c1 , . . . , cl ) = cσ−1 (1) , . . . , cσ−1 (l) with σ ∈ Sl .
Then the permutation automorphism group of C is

Abstract—We show some sufﬁcient conditions for a semisimple
abelian code to be permutation decodable. We ﬁnd non trivial
partial PD-sets with respect to the information set introduced
red by the authors in a previous paper. By using these results
we present examples of permutation decodable abelian codes
improving the bounds about the dimension given by S. G. S.
Shiva, K. C. Fung and H. S. Y. Tan.

I. I NTRODUCTION
Permutation decoding was introduced by F. J. MacWilliams
in [10] and it is described in [4]. Fixing an information set
for a given linear code, this technique uses a special set of
permutation automorphisms of the code called PD-set.
The idea of permutation decoding is to apply the elements
of the PD-set to the received vector until the errors are moved
out of the ﬁxed information set. Finding adecuate PD-sets and
information sets is not trivial. Moreover, the existence of PDsets relies on the information set previously ﬁxed as reference.
In fact, it may happens that for an error correcting code the
election of the information set causes the existence or not of
a PD-set. Many authors ([5], [7] and [6], among others) have
studied families of codes for which it is possible to develop
methods to ﬁnd PD-sets for certain types of information sets.
It has been seen that all methods rely heavily on those families
chosen. Our interest is the family of abelian codes. Some
relevant families of codes are abelian, for instance: cyclic
codes, Reed-Muller codes, extended Reed-Solomon codes and
others.
In [3] we presented a method for constructing information
sets valid for every semisimple abelian code. It is based on the
structure of the deﬁning set of the code. This technique has
the advantage that it allows us to design codes with suitable
information sets to make permutation decoding.
In this note we ﬁnd sufﬁcient conditions for an abelian
code, viewed as elements of a multivariate polynomial quotient
ring, to have a PD-set contained in the translations associated
to each variable, with respect to the ﬁxed information sets
described in [3]. Moreover, the goal of this note is that
such conditions may be written solely in terms of the q-orbit
structure of the deﬁning set of abelian codes (see below for
all deﬁnitions).

PAut(C) = {σ ∈ Sl | σ(C) = C}.
Now, we recall some basic facts about the family of abelian
codes and their permutation automorphisms (the reader may
see [1] for details).
A. Abelian codes
An abelian code is an ideal of a group algebra FG, where
G is an abelian group. It is well-known that a decomposition
G Cr1 × · · · × Crn , with Cri the cyclic group of order ri ,
induces a canonical isomorphism of F-algebras from FG to
r
r
F[X1 , . . . , Xn ]/ X1 1 − 1, . . . , Xnn − 1 .

We denote this quotient algebra by A(r1 , . . . , rn ). So, we
identify the codewords with polynomials P (X1 , . . . , Xn ) such
that every monomial satisfy that the degree of the indeterminate Xi belongs to Zri , the set of non negative integers
less than ri . We write the elements P ∈ A(r1 , . . . , rn ) as
P = P (X1 , . . . , Xn ) =
aj X j , where j = (j1 , . . . , jn ) ∈
j
j
j
Zr1 × · · · × Zrn and X = X11 · · · Xnn . We deal with abelian
codes in the semisimple case; that is, we always assume that
gcd(ri , q) = 1 for every i = 1, . . . , n.

II. P RELIMINARIES
All throughout F denotes the ﬁeld with q elements where q
is a power of a prime p. Let C be a linear code of dimension k,
*Partially supported by MEC (subprograma MTM)

1

Fixing α = {α1 , . . . , αn } where αi is a primitive ri -th root
of unity in some extension of F, for each i = 1, . . . , n, every
abelian code C of A(r1 , . . . , rn ) is totally determined by its
deﬁning set,
Dα (C)

computation of n-families of sequences of natural numbers
obtained from a special set of representatives of the q-orbits
of the deﬁning set of C, denoted by D(C) [3, p. 7991].
In the general case, the algorithm is too large and complicated to be included here. Then, we shall see the case n = 2,
which allows us to understand how we can obtain some of the
codes exhibited in Section V.
So, let C be an abelian code in A(r1 , r2 ), with deﬁning set
D(C) = Dα (C). For each e = (e1 , e2 ) ∈ D(C), we deﬁne

= {(a1 , . . . , an ) ∈ Zr1 × · · · × Zrn |
a
a
P (α1 1 , . . . , αnn ) = 0 for all P ∈ C} .

Given an element a = (a1 , . . . , an ) ∈ Zr1 × · · · × Zrn , we
deﬁne its q-orbit modulo (r1 , . . . , rn ) as
Q(a) =

m(e1 ) = |C(q,r1 ) (e1 )| and

a1 · q i , . . . , an · q i ⊆ Zr1 × · · · × Zrn | i ∈ N .

m(e1 , e2 ) = |C(qm(e1 ) ,r2 ) (e2 )|,

where C(qγ ,r) (a) denotes the q γ -cyclotomic coset, modulo r,
for any a ∈ Zr .
Following the algorithm in [3, p. 7993] we choose D(C),
a restricted set of representatives of the q-orbits of D(C).
We recall that D1 (C) is the projection of D(C) onto de ﬁrst
coordinate.
For each e ∈ D1 (C), one deﬁnes

It is easy to see that, in the semisimple case, for every
abelian code C in A(r1 , . . . , rn ), Dα (C) is a disjoint union
of q-orbits modulo (r1 , . . . , rn ). Conversely, every union
of q-orbits modulo (r1 , . . . , rn ) deﬁnes an abelian code in
A(r1 , . . . , rn ).
B. Permutation decoding

R(e)

=

M (e)

Fixing an information set for a given linear code C, the algorithm of permutation decoding uses certain sets of permutation
automorphisms of the code called PD-sets.

{a ∈ Zr2 | (e, a) ∈ D(C)},

=

m (e, a)
a∈R(e)

Deﬁnition 1. Let C be an [l, k] t-error-correcting code. Let I
be an information set for C. For s ≤ t a s-PD-set for C and I
is a subset P ⊆ PAut(C) such that every set of s coordinate
positions is moved out of I by at least one element of P . In
case s = t, we say that P is a PD-set.

and consider the set {M (e)}e∈D1 (C) . Then we denote the
different values of the M (e)’s as follows,
f [1]

=

max {M (e)}

and

e∈D 1 (C)

f [i]

=

max {M (e) | M (e) < f [i − 1]}.
e∈D 1 (C)

Given a t-error-correcting code with a PD-set with respect
to certain information set, the idea of permutation decoding
is to apply the elements of the PD-set to the received vector
until the errors are moved out of the ﬁxed information set.
In general to ﬁnd t-PD-sets for a given t-error correcting
code is not at all an easy problem. Moreover, the algorithm
will be more efﬁcient if the size of the PD-set is small.
We denote the permutation group on Zr1 × · · · × Zrn by
Sr1 ×···×rn and we consider it acting on A(r1 , . . . , rn ) via
j
τ (j)
τ
=
. Under this point of view the
j aj X
j aj X
permutation automorphism group of an abelian code C in
A(r1 , . . . , rn ) may be described as

If there are s2 distinct nonzero values for the f [−] we obtain
r2 ≥ f [1] > · · · > f [s2 ] > 0 = f [s2 + 1],
where f [s2 + 1] = 0 by convention.
Finally, we deﬁne the last sequence as follows: for every
1 ≤ u2 ≤ s2 we set
g [u2 ] =

m(e)
e∈D 1 (C)
M (e)≥f [u2 ]

Using the sequences obtained previously, we deﬁne the set
Γ(C)

PAut(C) = {τ ∈ Sr1 ×···×rn | τ (C) = C} .

= {(i1 , i2 ) ∈ Zr1 × Zr2 | ∃u ∈ {1, . . . , s}
with

Let Tj be the transformation from A(r1 , . . . , rn ) into itself,
given by Tj (P ) = Xj · P , for j = 1, . . . , n. Then it is clear
that Tj induces a permutation in Sr1 ×···×rn , which we also
denote by Tj , via Tj (i1 , . . . , in ) = (i1 , . . . , ij + 1, . . . , in ).
Then {Tj }n
j=1 may be viewed as a subgroup of permutation
automorphisms for every abelian code in A(r1 , . . . , rn ). We
n
shall look for PD-sets contained in the subgroup {Tj }j=1 .

f [u + 1] ≤ i2 < f [u] and 0 ≤ i1 < g [u]}
It is proved in [3, Theorem 9] that Γ(C) is a set of check
positions for C.
Example 2. Let q = 2, n = 2, r1 = 3, r2 = 17, and consider
the abelian code F with the following deﬁning set with respect
to certain roots of unity:

III. I NFORMATION SETS IN ABELIAN CODES

D(F) = Q(0, 1) ∪ Q(1, 0) ∪ Q(1, 1) ∪ Q(1, 2) ∪ Q(1, 3)

In this section we consider some sets of check positions that
may be constructed for a given abelian code. All throughout,
we denote by C a semisimple abelian code in A(r1 , . . . , rn ).
In [3, Section III] it is constructed a set of check positions, called Γ(C). The construction is based on the recursive

We choose D1 (F) = {0, 1}, and D(F) = {(0, 1), (1, 0),
(1, 1), (1, 2), (1, 3)}. Now we compute
m(0) = 1, m(1) = 2, m(0, 1) = 8, m(1, 0) = 1
m(1, 1) = 4, m(1, 2) = 4, m(1, 3) = 4.

2

and

R(0) = {(0, 1)}

and

aκ−1 (j) X j . We also denote by κ this extension. It is clear
r
r
that κ is exactly the composition T1 1 −1 ◦ · · · ◦ Tnn −1 (see
Section II for notation) and so it belongs to the permutation
automorphism group of every abelian code. Then, Theorem 4
implies that Γ(C)c and Γ(C ) may be identiﬁed in order to
apply the algorithm of permutation decoding in the sense that
P ⊆ Ti | i = 1, . . . , n is a partial PD-set for C and the
information set Γ(C)c if and only if κ ◦ P ◦ κ−1 is a partial
PD-set for C and the information set Γ(C ) = Γ(C ⊥ ).

R(1) = {(1, 0), (1, 1), (1, 2)}.

So M (0) = 8 and M (1) = 13. Then we get the sequences
f [1] = 13 > f [2] = 8 > f [3] = 0

and

g [1] = 2 < g [2] = 3 = r1 .
So, a set of check positions for F is Γ(F)
{(0, 0), . . . , (0, 12), (1, 0), . . . , (1, 12), (2, 0), . . . , (2, 7)}

=

Remark 3. In the general case [3, pp. 7991-7992], for
j ∈ {2, . . . , n}, sequences of lists of numbers (un , . . . , uj )
are constructed; as well as numbers s (un , . . . , uj ) (except the
ﬁrst one, sn ). They verify 1 ≤ uk ≤ s(un , . . . , uk+1 ), where
1 ≤ k ≤ j. For each list, there is a value f [un , . . . , uj ], and for
any list (un , . . . , u2 ) there is also a parameter g [un , . . . , u2 ].
Then

IV. PARTIAL PD- SETS FOR ABELIAN CODES
In this section we apply the permutation decoding algorithm
to abelian codes by using the information sets given in the
previous section. Moreover, these information sets only depend
on their deﬁning sets, so we may design deﬁning sets in order
to get codes having information sets with good properties
related to permutation decoding algorithm (see Section V).
We shall show sufﬁcient conditions to ﬁnd (partial) PD-sets
contained in the subgroup of the permutation automorphism
of a code in A(r1 , . . . , rn ) generated by the translations
Tj (i1 , . . . , in ) = (i1 , . . . , ij + 1, . . . , in ), for j = 1, . . . , n,
which were introduced in Section II. As we have said, for
a given code C in A(r1 , . . . , rn ) we take as reference the
information set Γ (C ).
Let C in A(r1 , . . . , rn ) be a t-error-correcting abelian code
with deﬁning set D(C) and information set Γ(C ). Let b ≤ t
a natural number and let e ∈ A(r1 , . . . , rn ) an error vector
with supp(e) = {p1 , . . . , pb } ⊆ Zr1 × · · · × Zrn . We set
pj = (p1 , . . . , pn ) for j = 1, . . . , b. We want to use the subj
j
group {Tj }n
j=1 to move supp(e) outside Γ(C ). Following
the notation in Remark 3, we denote by f [·], g [·], s and s (·)
the parameters used in the construction of Γ(C ). If pj ∈ Γ(C ),
for some 1 ≤ j ≤ b, then there exist (un , . . . , u2 ) ∈ Υn (C )
satisfying f [un , . . . , ui + 1] ≤ pi < f [un , . . . , ui ], for every
j
i = 2, . . . , n, and g [un , . . . , u2 ] > p1 ≥ 0. Therefore in order to
j
move pj outside Γ(C ) we look for a suitable T ∈ {Tj }n
j=1
such that T (pj ) ∈ Γ(C ), that is, such that for T (pj ) there
/
no exist (un , . . . , u2 ) satisfying the required conditions. For
instance, if there exist i ∈ {1, . . . , n} and α ∈ N such that
f [un , . . . , ui ] ≤ pi + α mod ri then Tiα (pj ) ∈ Γ(C ).
/
j
First, we need some deﬁnitions and some additional notation. Let v = (vn , . . . , vj ) ∈ Υn−j+2 (C ), with j ∈
{2, . . . , n}. Then we deﬁne
0
• S (v) = v,
• S (v) = (v, s (v)) (if n ≥ 3),
and for S i (v) deﬁned, where 0 ≤ i < j − 2, we set
i+1
(v) = S i (v), s S i (v) .
• S
Finally we deﬁne S −1 (v) = (vn , . . . , vj+1 ), in case j < n,
and S −1 (vn ) = ∅.

n

Γ(C)

=

(i1 , . . . , in ) ∈

Zri | ∃ (un , . . . , u2 ), where
i=1

1 ≤ un ≤ sn , and 1 ≤ ul ≤ s(un , . . . , ul+1 ),
for l = 2, . . . , n − 1, such that
f [un + 1] ≤ in < f [un ], . . .
f [un , . . . , u2 + 1] ≤ i2 < f [un , . . . , u2 ],
0 ≤ i1 < g [un , . . . , u2 ]} .
We deﬁne
Υi (C)

= {(un , . . . , un−i+2 ) | 1 ≤ un ≤ sn and
1 ≤ uδ ≤ s(un , . . . , uδ+1 )
for δ = n − i + 2, . . . , n − 1}.

Now we deal with other codes associated to a given code
C. All of them will be useful for our purposes. Let C be an
abelian code in A(r1 , . . . , rn ) with deﬁning set D(C) with
respect to certain choice of roots of unity. We know that
n
the complementary set Γ(C)c ⊆ i=1 Zri and Γ C ⊥ are
information sets for C. The following theorem (see [2, p. 130])
gives us the relationship between Γ(C) and Γ(C ⊥ ).
Theorem 4. Let C be an abelian code in A(r1 , . . . , rn ).
n
n
Let κ :
i=1 Zri →
i=1 Zri be the bijection given by
κ(i1 , . . . , in ) = (r1 − i1 − 1, . . . , rn − in − 1). Then
κ (Γ(C)) = (Zr1 × · · · × Zrn ) \ Γ(C ⊥ ).
Now we denote by C the abelian code with deﬁning set
D(C ) = (Zr1 × · · · × Zrn ) \ D(C) with respect to the same
choice of roots of unity. It is easy to see that Γ(C ⊥ ) = Γ(C ).
In our results on permutation decoding we will use Γ(C )
as information set for C. The advantage of using the code C
instead of C ⊥ relies on the fact that we can transform the
deﬁning set of C into the deﬁning set of C directly and this
allows us to easily relate the respective sets of check positions.
In addition, we think that by using Γ(C ) examples may be
constructed in an easier way, as the reader may check in
Section V.
Note that the bijection κ may be extended to a bijection from A(r1 , . . . , rn ) into itself via κ(P (X1 , . . . , Xn )) =

Deﬁnition 5. Given v ∈ {1, . . . , s } we deﬁne
Λ(v) = {i ∈ {2, . . . , n} | f [S n−i−1 (v), 1] < ri },
where, if i = n then f [S −1 (v), 1] = f [1]. From Λ(v) we deﬁne
Λ(v) =

3

Λ(v)
Λ(v) ∪ {1}

if g [S n−2 (v)] = r1 ,
otherwise.

Now, for every i ∈ Λ(v), we deﬁne

If there exists a subset I of Λ(u − 1) \ {τ, . . . , n} verifying
that

λi (v) = max {λ ∈ N | f [S n−i−1 (v), 1] < ri /λ } ,

i∈I

λ1 (v) = max {λ ∈ N | g [S n−2 (v)] < r1 /λ } .

then the group generated by {Tτ , . . . , Tn } and {Ti }i∈I is a
b-PD-set for C with respect to Γ(C ).

One may prove that
If v ≥ v then Λ(v) ⊆ Λ(v ).

To ﬁnish this section, we are going to study the case of
correcting errors with weight less or equal than 3. In this
situation, we will present a result for the existence of (partial)
PD-sets which improves the condition given by Theorem 7.

(1)

Now, we present our ﬁrst sufﬁcient condition to have a (partial)
PD-set contained in the group Ti | i = 1, . . . , n .
Theorem 6. Let C be a t-error-correcting abelian code in
A(r1 , . . . , rn ). Let b a positive integer such that b ≤ t. If
there exists a subset I ⊆ Λ(s ) verifying

Theorem 9. Let C be a t-error-correcting abelian code in
n
A(r1 , . . . , rn ), with t ≥ 3. Let χ1 = r3 − 1 and χ2 =
n
n
rn − − r3 , where = 1 if r3 ∈ N and = 0 otherwise.
We deﬁne

 0 if f [1] = rn ,


1 if χ2 < f [1] < rn ,
λ0 =
 2 if χ1 < f [1] ≤ χ2 ,


3 if f [1] ≤ χ1 .

λi (s ) ≥ b
i∈I

then the group Ti | i ∈ I is a b-PD-set for C with respect to
the information set Γ(C ).
The previous theorem is based on the existence of certain
subsets of Λ(s ). The following result talks about subsets of
Λ(u), for some u ∈ {1, . . . , s }. So, in that sense it improves
Theorem 6 (see (1)). Although, the following theorem needs
that the group generated by Tn is contained inside the obtained
PD-set. This means that in some cases we can obtain PD-sets
bigger (and so, worse) than that given by the Theorem 6.

Let ui = min{x ∈ {2, . . . , s + 1} | f [x] ≤ χi }, for i = 1, 2.
If λ0 = 3 or there exist subsets I ⊆ Λ(u2 − 1) \ {n} and
∅ = J ⊆ I ∩ Λ(u1 − 1) such that
λi (u2 − 1) +

λ0 +
i∈I\J

Theorem 7. Let C be
A(r1 , . . . , rn ). Let b be
deﬁne

 0
1
λ0 =

b

a t-error-correcting abelian code in
a positive integer such that b ≤ t. We
if
if
if

λi (u − 1) ≥ b

λ0 +

rn
b

λi (u1 − 1) ≥ 3,
i∈J

then the group generated by Tn and {Ti }i∈I is a 3-PD-set for
C with respect to the information set Γ(C ).

f [1] = rn ,
rn /b ≤ f [1] < rn ,
f [1] < rn /b .

Let u = min x ∈ {2, . . . , s + 1} | f [x] <
exists a subset I ⊆ Λ(u − 1) \ {n} such that

λi (u − 1) ≥ b,

1+

in case i > 1, and in case i = 1 we set

V. A PPLICATIONS
In this section, we shall show some applications of the
results exposed in the previous section, used as criteria to
design abelian codes having determined properties in order
to apply the permutation decoding algorithm. Moreover, we
may determine upper bounds on the dimension of codes of
certain lengths satisfying such properties.
We present two examples of codes that we have chosen
having in mind the tables in [11] and [12], together with the
updates in [3]. In the ﬁrst two papers, the authors obtained upper bounds on the dimension of 2 and 3 error correcting cyclic
codes on certain lengths which are permutation decodable with
respect to the usual information set (consecutive positions).
We begin by updating 2-error correcting cyclic codes of
length 51. In [11, p. 642] Shiva et al., assert that, for dimension
k > 33 permutation decoding is not possible with respect to
the usual information set.

. If there
(2)

i∈I

then the group generated by Tn and {Ti }i∈I is a b-PD-set for
C with respect to the information set Γ(C ).
The next result gives us a sufﬁcient condition under the
assumptions n ≥ 3 and f [1] = rn . This new condition can
hold even when Theorem 7 does not do.
Theorem 8. Let C be a t-error-correcting abelian code in
A(r1 , . . . , rn ). Let b a positive integer such that b ≤ t. Suppose
that n ≥ 3, f [1] = rn and assume that there exists v =
(vn , . . . , vτ +1 , 1) ∈ Υn−τ +2 (C ) (with 1 < τ < n) such that
f [vn , . . . , vτ +1 , 1] < rτ . Then, we deﬁne
•
•

Example 10. We shall study the construction of binary codes
C of length 51, with PD-set T1 , T2 , with respect to the information set Γ(C ), as sums of minimal codes. The following
table describe all minimal abelian codes in A(3, 17) and their
corresponding (in C ) 2-orbits. We denote by M (−), f [−], s

u = vn + 1 in case f [vn + 1] < rn /b ,
u = min {{1 ≤ x ≤ s | f [vn ] − f [x] > rn − rn /b }
∪{s + 1}} otherwise.

4

and g [−] the parameters that deﬁne Γ(C ).
Cdigo
C1
C2
C3
C4
C5
C6
C7
C8

D(C )
(0, 0)
(0, 1)
(0, 3)
(1, 0)
(1, 1)
(1, 2)
(1, 3)
(1, 6)

M (0)
1
8
8
0
0
0
0
0

M (1)
0
0
0
1
4
4
4
4

Code
C1
C2
C3
C4
C5
C6
C7
C8

dim
1
8
8
2
8
8
8
8

0 < f [2] < 9 and g [1] < 3.

dim.
1
3
3
2
6
6
2
2

Code
C9
C10
C11
C12
C13
C14
C15

D(C )
Q(1, 2, 0)
Q(1, 0, 1)
Q(1, 0, 3)
Q(1, 1, 1)
Q(1, 1, 3)
Q(1, 2, 1)
Q(1, 2, 3)

dim.
2
6
6
6
6
6
6

The application of Theorem 6 and 7 is completely analogous
to Example 3 above, giving bounds of dimension 24 and
31, respectively. In this case, we may also apply Theorem 8,
obtaining a bound of dimension 15, which is not so interesting.
By applying Proposition 9 we obtain codes of dimension
35; however all these codes are not 3-error correcting. The
greatest dimension for a 3-error correcting code is 33; for
example, C = C1 + C4 + C10 + C11 + C12 + C13 + C14 which has
minimum distance 8. The bound given in [12, Table IX] for
the dimension of 3-error correcting cyclic codes of length 63,
with a PD set contained in {Ti }n with respect to the usual
i=1
information set is 21.

First we look for codes satisfying the condition given in
Theorem 6. So it must exist a subset I ⊆ Λ(s ) ⊆ {1, 2}
such that
i∈I λi (s ) ≥ 2. One choice is |I| = 1. In this
case, it must happen that f [1] < 9 or g [s ] < 2. By [3,
Section III] one may check that any sum of minimal codes
having f [1] < 9 has dimension at most 24 (for example,
C = C2 + C5 + C6 ), while any sum of minimal codes giving
g [1] < 2 must have dimension at most 17 (the only one is
C1 + C2 + C3 ). The other choice is |I| = 2. Then we must have
that f [1] < 17 and g [s ] < 3. Again [3, Section III] shows us
that any sum of minimal codes satisfying the values above has
dimension at most 32. This values and dimension is reached
only by C = C5 +C6 +C7 +C8 ; however its minimum distance is
4, so it is not a 2-error correcting. There are 2-error correcting
codes satisfying the values above, as C = C4 + C5 + C6 + C7 ,
which has dimension 26.
Now we are looking for codes satisfying the conditions in
Theorem 7. To do this, we separate in two cases, depending
on the values of λ0 . If λ0 = 2 one has that f [1] < 9, which
refers us to the prior paragraph. The case λ0 = 0 drives us
to g [u − 1] = g [1] < 2, which, again, refers us to the prior
paragraph. Now, the case λ0 = 1 gives us 9 ≤ f [1] < 17 and it
must happen that g [u − 1] < 3 (this is because Λ(u−1)\{2} ⊆
{1}). Once again, [3, Section III] gives us two posibilities. the
ﬁrst one is u = 3. then s = 2 and g [2] = 3, which is a non
desired value. So, to get g [u − 1] < 3 we must take u = 2.
If s = 1 we get the f [1] < 17 and g [s ] < 3, the values
in paragraph above. So we need that s = 2. This yields the
sequences
9 ≤ f [1] < 17,

D(C )
Q(0, 0, 0)
Q(0, 0, 1)
Q(0, 0, 3)
Q(0, 1, 0)
Q(0, 1, 1)
Q(0, 1, 3)
Q(1, 0, 0)
Q(1, 1, 0)

VI. C ONCLUSION
Permutation decoding depends heavily on the information
set taken as reference. By using the properties of the information set given in [3] we have showed sufﬁcient conditions for
a semisimple abelian code to have a partial PD-set contained
in the group geneated by {Ti }n These conditions are stated
i=1
only in terms of the deﬁning set of the code. This allows us to
design codes satisfying them. Concretely, we have exhibit two
codes, of length 51 and 63 respectively, improving the bounds
on the dimension given in [11], [12].
R EFERENCES
[1] S. D. Berman, Semisimple cyclic and Abelian codes, Cybernetics, vol.
3, no. 3 (1967), 21-30.
[2] J. J. Bernal, C´ digos de grupo. Conjuntos de informaci´ n. Decodiﬁo
o
caci´ n por permutaci´ n, PhD Thesis, University of Murcia, 2011.
o
o
[3] J.J. Bernal and J.J. Sim´ n, Information sets from deﬁning sets in abelian
o
codes, IEEE Trans. Inform. Theory, vol. 57, no. 12 (2011), 7990-7999.
[4] W. C. Huffman, Codes and groups, in V. S. Pless, W. C. Huffman and R.
A. Brualdi (editors), Handbook of Coding Theory vol. II. North-Holland,
Amsterdam (1998), 1345-1440.
[5] J.D.Key, T.P. McDonough, and V.C.Mavron, Partial permutation decoding for codes from ﬁnite planes, European Journal of Combinatorics,
vol. 26 (2005), 665-682.
[6] J. D. Key, T. P. McDonough, and V. C. Mavron, Reed Muller codes and
permutation decoding, Discrete Mathematics, vol. 310, (2010) 31143119.
[7] H. J. Kroll, and R. Vincenti, PD-sets for the codes realted to some
classical varieties, Discrete Mathematics, vol. 301 (2005) 89-105.
[8] V. S. Pless, W. C. Huffman and R. A. Brualdi (editors), Handbook of
Coding Theory, vol. I, North-Holland, Amsterdam, 1998.
[9] H. Imai,A theory of two-dimesional cyclic codes, Information and
Control, no. 34 (1977), 1-21, .
[10] F. J. MacWilliams Permutation decoding of systematic codes, Bell
System Tech. J., vol. 43 (1964), 485-505.
[11] S. G. S. Shiva, K. C. Fung and H. S. Y. Tan, On permutation decoding of
binary cyclic double-error-correcting codes of certain lengths (Corresp.),
IEEE Trans. Inform. Theory, vol. 16, no. 5 (1970), 641-643.
[12] S. G. S. Shiva and K. C. Fung, Permutation decoding on certain tripleerror-correcting binary codes, IEEE Trans. Inform. Theory, vol. 16, no.
5 (1970), 641-643.

(3)

By the table above, one may see that any sum of minimal
codes satisfying (3) has dimension at most 40. We computed
the minimum distance of each of these codes obtaining all of
them less or equal to 4. The greatest dimension of codes satisfying (3) with minimum distance greater than 4 is dimension
34; for example C = C2 + C4 + C5 + C6 + C7 . One may see
that C = F, the code in Example 2
Example 11. Now we present a sketch of the study of codes
with length 63. The ﬁrst thing is to determine the ambient
algebra. It can be A(63) for cyclic codes, A(9, 7) for TDC
codes (see [9]) or A(3, 3, 7). We consider this last case to
illustrate that it is possible to obtain very good codes in the
multidimensional case (n ≥ 3). The minimal codes associated
with the 2-orbits are in the following table.

5

