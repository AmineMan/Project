Creator:         TeX output 2012.05.13:1048
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Sun May 13 10:48:30 2012
ModDate:        Tue Jun 19 12:56:13 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      304524 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569564387

Coded Cooperative Data Exchange Problem for
General Topologies
Mira Gonen

Michael Langberg

Department of Mathematics
Bar-Ilan University
gonenm1@math.biu.ac.il

Department of Mathematics and Computer Science
The Open University of Israel
mikel@open.ac.il

The coded cooperative data exchange problem has seen
signiﬁcant research over the last few years. The problem was
introduced by El Rouayheb et al. in [16], where data exchange
over a complete graph G was considered (in which each
client can broadcast its messages to all other clients in G). In
[16] certain upper and lower bounds on the optimal number
of transmissions needed was established. In a subsequent
work, Sprinston et al. [18] continue the study of complete
graphs G and present a (randomized) algorithm that with high
probability achieves the minimum number of transmissions,
given that the packets are elements in a ﬁeld Fq with q large
enough. Ozgul et al. [14] study a variant of the data exchange
problem in which each client has a distinct broadcast cost and
one wishes to minimize the cost of the transmission scheme
after which all clients have obtained all information packets. In
[14], optimal randomized linear encoding schemes are given
for the problem at hand.
Communication in which fractional packets can be transmitted is addressed in the works of Courtade et al. in [3]
(for general topologies G) and Tajbakhsh et al. [19], [20]
(for the complete topology). In the fractional setting, packets
are assumed to be divisible into chunks so that a fraction
of a packet may be transmitted at any (fractional) round of
communication; as opposed to the integral setting in which
information packets are indivisible. In [3], [19], [20] it is
shown that the fractional setting of the data exchange problem
reduces to that of multicast network coding and can be
efﬁciently solved in an optimal manner via linear programming
and the concept of linear network coding, see e.g. [1], [7], [8],
[10], [11].
Most related to our work is the work of Courtade et al. in [4]
which focus on general topologies G in the setting of indivisible packets (the integral setting). [4] continue the paradigm
of [3] which characterizes the data exchange problem as a
family of cut inequalities, and present certain communication
schemes that yield approximate solutions for an asymptotic
number of packets k. Roughly speaking, [4] analyze a certain
communication scheme in which each client transmits at a
certain ﬁxed rate over time, and obtain nearly optimal rate
allocations (within an additive approximation of εk for general
graphs, and |V | for regular graphs). An important aspect in the
analysis in [4] is the assumption that the number of packets
k tends to inﬁnity. A detailed comparison of the results of [4]
with ours appears below at the end of Section I-A.

Abstract—We consider the coded cooperative data exchange
problem for general graphs. In this problem, given a graph
G = (V, E) representing clients in a broadcast network, each of
which initially hold a (not necessarily disjoint) set of information
packets; one wishes to design a communication scheme in which
eventually all clients will hold all the packets of the network.
Communication is performed in rounds, where in each round a
single client broadcasts a single (possibly encoded) information
packet to its neighbors in G. The objective is to design a broadcast
scheme that satisﬁes all clients with the minimum number of
broadcast rounds.
The coded cooperative data exchange problem has seen significant research over the last few years; mostly when the graph G
is the complete broadcast graph in which each client is adjacent
to all other clients in the network, but also on general topologies,
both in the fractional and integral setting. In this work we focus
on the integral setting in general undirected topologies G. We
tie the data exchange problem on G to certain well studied
combinatorial properties of G and in such show that solving the
problem exactly or even approximately within a multiplicative
factor of log |V | is intractable (i.e., NP-Hard). We then turn
to study efﬁcient data exchange schemes yielding a number of
communication rounds comparable to our intractability result.
Our communication schemes do not involve encoding, and in such
yield bounds on the coding advantage in the setting at hand.

I. I NTRODUCTION
In this work we study the coded cooperative data exchange
problem for general graphs. An instance to the problem
consists of an undirected graph G = (V, E) representing a
communication network (in which each node of G represents
a client, and edges in G represent client pairs that can
communicate with each other), a parameter k representing
the number of information packets X = { x1 , . . . , xk } to be
transmitted over the network, and a set { Xi }i∈V of subsets of
X representing the set of packets available at each client node
vi ∈ V in the initial stage of the transition. The objective
is to design a communication scheme in which, eventually,
all nodes of the network will obtain all k packets. Loosely
speaking, in each round of the communication scheme, a single
node broadcasts a single (possibly encoded) packet to all its
neighbors in G. The goal is to ﬁnd a communication scheme
in which the number of communication rounds is minimum.
This work was supported in part by the Levi Eshkol Fellowship of the
Ministry of Science and Technology of Israel.
This work was supported in part by ISF grant 480/08 and the Open
University of Israel’s research fund (grant no. 46114). Work done in part
while Mira Gonen was at the Open University of Israel.

1

Most recently, Milosavljevic et al. [13] present a comprehensive study of data exchange over the complete topology in
which one wishes to broadcast the components of a (jointly
distributed) discrete memoryless multiple source. Efﬁcient
optimal rate schemes are presented for a number of side
information models.

in our analysis. In Section III, we prove that it is NPHard to approximate the data exchange problem on general
topologies within a multiplicative factor of Ω(log n) (for any
k polynomial in n). Here, n = |V |.
In Section IV, we present our algorithm for data exchange
based on the Dominating Set problem and its variants. The
algorithm we present is conceptually very simple and does
not involve coding. As mentioned above, a naive analysis of
our algorithm yields an approximation ratio of O(k · log n),
and the majority of this section is devoted to proving that the
algorithm actually performs better.
In Section IV-B, we show that our algorithm is the best
possible (assuming standard tractability) and has an approximation ratio of O(log n) (matching the lower bound of
Section III) on instances in which each packet is initially
present at a single client in G. This implies a coding advantage
of O(log n) in such cases.1
In Section IV-C, we study data exchange instances in which
the underlying graph is regular (each client has the same
number of neighbors). We show that the approximation ratio in
this case is again better than O(k · log |V |) and depends on the
¯
average number d of packets available at client nodes. Specifically we show that in this case the approximation ratio of
(
)
(
)
¯
k
d
our algorithm is O k−d¯ log n = O 1 + k−d¯ log n (thus

A. Our contribution
In this work we study the coded cooperative data exchange
problem on general topologies. We focus on the combinatorial integral setting in which one assumes that packets
are indivisible. Namely, we assume that each packet is a
value from a given alphabet Σ, and in each communication
round a single element of Σ is broadcasted by a client to its
neighbors in G. The study of the indivisible integral setting,
rises naturally in communication schemes in which dividing
information packets to several chunks leads to undesirable
overhead in communication (via scheduling issues or rate loss
due to header information). Our work addresses the design and
analysis of efﬁcient algorithms that (approximately) solve the
problem at hand. Throughout our work, we assume that the
number of packets k is polynomial in the size of the network
|V |. In this context, an efﬁcient algorithm is one which is
polynomial in the network size.
We start by tying the data exchange problem in general
topologies G to certain well studied combinatorial properties
of G. Speciﬁcally, we consider the Dominating Set problem
(e.g., [9]) and its variants (to be deﬁned in Section II), and
show that they are closely related to the data exchange problem. Namely, we show that (i) a solution to the Dominating
Set problem (or its variants) yields a (not necessarily optimal)
solution to the data exchange problem, and (ii) an optimal
solution to the data exchange problem yields a nearly optimal
solution to the Dominating Set problem(s). Roughly speaking,
these connections (together with others) imply two initial
results. Primarily, that it is NP-Hard to ﬁnd a solution to the
data exchange problem in which the number of communication
rounds is within a multiplicative factor of Ω(log |V |) from the
optimal. Secondly, that a conceptually simple data exchange
algorithm, that does not involve encoding, based on the
Dominating Set problem yields a number of communication
rounds which is within a multiplicative factor of O(k · log |V |)
from the optimal.
The gap between the upper and lower bounds above is k
(the number of distinct packets in the network) which may
be of signiﬁcant size. Reducing this gap is the main focus
of our work. Roughly speaking, in this work we reduce the
gap of k by analyzing our algorithm based on the Dominating
Set problem(s). Our algorithm does not involve coding and
in such yields bounds on the coding advantage in the setting
of data exchange. Our detailed results are given below, which
at times are the best possible (assuming standard tractability
assumptions).
The paper is structured as follows. In Section II, we present
the model and notation used throughout this work, including
the several variants of the Dominating Set problem used

¯

d
improving the factor of k in the naive analysis to 1 + k−d¯ ).
¯
Notice, that for d = Θ(k) (the case in which on average each
client initially has a constant fraction of the packets) we obtain
an approximation ratio that matches the bound of Section III.
(
)
¯
d
Our results imply a coding advantage of O 1 + k−d¯ log n
in the cases at hand. Finally, in Section IV-D we study
general graphs G with no restrictions and present an improved
approximation ratio to that naively mentioned above.
We conclude our work by studying a reﬁned version of
our algorithm (still without encoding) in Section IV-E and
by discussing future research directions in Section V. Due to
space limitations, our claims appear without complete proofs
(which can be found in the full version of this work [5]).
Comparing our results with those in [4] is not straightforward. Courtade et al. [4] focus on the setting in which the
number of packets k tends to inﬁnity and may be signiﬁcantly
greater than the network size n. The setting of asymptotic k
allows the design of algorithms which are efﬁcient with respect
to k but may be exponential in n. In our work we focus on the
setting in which k is polynomially bounded by n, and obtain
communication schemes that can be designed efﬁciently in
time polynomial in the network size n. In addition, [4] focus
on the case in which every client initially holds a constant
fraction of the k information packets;2 and in this setting study
additive approximations. In this work, we study multiplicative
1 We note that even for the simple case of only two messages and a single
source that holds all the information, while all other nodes do not hold any
information, the coding advantage is larger than 0. Details omitted.
2 The precise formulation in [4] is phrased in terms of “well behaved” packet
distributions; i.e., the asymptotic (in k) empirical probability that a client (or
set of clients) holds a certain number of packets.

2

dominating set (respectively, self dominating set) in G. We
will show below that computing (or approximating) any of
the values mentioned above (i.e., DS, CDS, DS+ , CDS+ ) is
NP-Hard.
In this work we will also be interested in a fractional version
of the dominating and self dominating set problems expressed
by the following linear programs. We present the linear
program corresponding to the self dominating set problem. An
analogous program can be designed for (standard) dominating
sets. Given a graph G = (V, E), ﬁnd a set of capacities
C = {cv , |v ∈ V, 0 ≤ cv ≤ 1} (where for each v ∈ V,
cv is the capacity of vertex v) such that ∑v∈V cv is minimum,
and ∀v ∈ V it holds that ∑u∈ N (v) cu ≥ 1.
Let DS+ denote the minimum value of the linear program
f
above (respectively DS f for standard dominating sets). By
considering integral values of cv , it is straightforward to
establish that DS+ ≤ DS+ and DS f ≤ DS.
f
As we will see, there are times in which we would like to
“cover” each vertex in G more than once by our dominating
sets S. We thus consider the integer and fractional k (Self)
Dominating Set problems as well. Below we phrase the
fractional version, for k self dominating set with optimum
denoted by (k-DS+ ) f , the integer variant is obtained by setting
cv ∈ {0, 1} and its optimum will be denoted by k-DS+ :
ﬁnd a set of capacities C = {cv |v ∈ V, 0 ≤ cv ≤ 1}
such that ∑v∈V cv is minimum, and ∀v ∈ V it holds that
∑u∈ N (v) cu ≥ k. One can analogously deﬁne (k-DS) f corresponding to the standard dominating set problem.
The lemma below now follows by the above deﬁnitions
(detailed proof appears in full version of this work [5]).

approximations, and our assumptions (if any) on the packet
distribution are of different nature.
II. M ODEL D EFINITION AND P RELIMINARIES
A. Coded Cooperative Data Exchange Problem
We start by deﬁning the Coded Cooperative Data Exchange
Problem for General Graphs. Let G = (V, E) be a given
undirected graph with V = {v1 , ..., vn }. Let X = { x1 , ..., xk }
be a set of packets to be delivered to the n clients belonging to
the set V. The packets are elements of a ﬁnite alphabet which
will be assumed to be a ﬁnite ﬁeld Fq . At the beginning, each
client vi knows a subset of packets denoted by Xi ⊆ X, while
the clients collectively know all packets in X. We denote by
¯
Xi = X \ Xi the set of packets required by client vi . For
each client (vertex in G) vi let dvi = | Xi | be the number of
¯
packets it holds, let d = ∑v∈V dv /n be the average number
of packets present at vertices of G, and let d = maxv∈V dv
be the maximum number if packets that any client holds. We
will use these parameters in our analysis.
Each client may transmit packets to its neighbors in G
via a lossless broadcast channel capable of transmitting a
single element in Fq . The data is transmitted in communication
rounds, such that at round i one of the clients, say v, broadcasts
an element x ∈ Fq to all its neighbors in G. The transmitted
information x may be one of the original packets in X j , or
some encoding of packets in X j and the information previously
transmitted to v j .
Our goal is to devise a scheme that enables each client
¯
vi ∈ V to obtain all packets in Xi (and thus in X) while
minimizing the total number of broadcasts. This work focuses
on the integral (i.e., scalar) setting in which each broadcast
consists of a single element of Fq . We denote by NC the
minimum number of (integral) broadcasts needed to satisfy the
given instance to the coded cooperative data exchange problem
at hand. In this work we connect the value of NC with other
well studies combinatorial operators on G deﬁed below.
Throughout our work, we assume that the number of packets
k is polynomial in the size of the network |V | (i.e., k ≤ |V |c
for some constant c). In this context, we say an algorithm is
efﬁcient if its running time is polynomial in the network size.

Lemma 1 Let dv be the number of packets v holds, and let
d = maxv∈V dv . Then it holds that (k − d) · DS+ ≤ NC.
f
The following lemma that constructively connects between
dominating sets and their connected variant was proven in [6].
Lemma 2 ([6]) Given any dominating set D, one can efﬁciently construct a connected dominating set D ′ with | D ′ | ≤
4
3 · | D |. Speciﬁcally, for every connected graph G = (V, E ) it
holds that CDS ≤ 4 · DS.
3
It is NP-Hard to estimate the size of the minimum dominating set of a given graph G up to a multiplicative factor
of Ω(log |V |) [15]. Notice that if CDS > 1, then CDS+ =
CDS, (and in general CDS+ ≤ CDS + 1) so ﬁnding CDS,
and CDS+ (and also approximating them beyond a ratio of
Ω(log |V |)) is also NP-hard. Lemma 2 and the deﬁnition of
the self dominating set problem imply the following lemma
which connects DS, DS+ , CDS, and CDS+ :

B. The Dominating Set problem and variants
Given an undirected graph G = (V, E), a dominating set,
e.g. [9], of G is a subset of vertices S such that every v ∈ V
is either in S or connected to some vertex s ∈ S by an edge
(s, v) ∈ E. In such a case we say that v ∈ N (s) where
N (s) = {v | (s, v) ∈ E}. In this work we also study the self
dominating set problem which is closely related to the standard
dominating set problem. In a self dominating set S, we require
that every v ∈ V is connected to some vertex s ∈ S by an
edge (s, v) ∈ E. The minimum size dominating set in G is
denoted by DS and the minimum sized self dominating set by
DS+ . Clearly we have that DS ≤ DS+ . A (self) dominating
set S with a corresponding induced subgraph that is connected
is referred to as a connected (self) dominating set. Denote by
CDS (respectively CDS+ ) the size of a minimum connected

Lemma 3

4
3 DS + 1

≥ CDS + 1 ≥ CDS+ ≥ DS+ ≥ DS.

III. I NTRACTABILITY R ESULTS
In this section we show that the coded cooperative data exchange problem is hard to approximate within a multiplicative
factor of c log |V |, for some c > 0, for every value of k (which
is polynomial in n). Our proof is based on a reduction from
the dominating set problem (which, as mentioned, is NP-hard

3

in k · (| D | + 1) communication rounds. Speciﬁcally, NC ≤
k · (CDS + 1).

Figure 1.

The idea behind the proof of Lemma 5 is conceptually
simple. Roughly speaking, given a connected dominating set
D, one can propagate each and every packet in D to all
clients of G via a Breadth First Search (BSF) from the client
holding the packet. Since the problem of ﬁnding a minimum
connected dominating set is NP-hard, we need to show how to
approximately ﬁnd such a set. Loosely speaking, we will ﬁnd
a connected dominating set in our network G by ﬁrst solving
the fractional dominating set problem, by then rounding the
fractional solution to an integral one to obtain a standard
dominating set of G, and by ﬁnally modifying the dominating
set to a connected one via Lemma 2. All in all, this (well
studied) scheme will efﬁciently yield a connected dominating
set D of size at most c log n · DS f for some universal constant
c > 0 (see e.g., [2], [9], [12], [17]).
Repeating the above more formally, given an instance G to
the cooperative data exchange problem on general topologies,
one can efﬁciently perform the following algorithm:
1) Solve the fractional dominating set problem on G to
f
obtain a fractional solution {cv }.
2) Change the fractional solution to an integral one {cv }
corresponding to a dominating set D (via, e.g., [2], [9],
[12], [17]).
3) Using D, construct a connected dominating set D ′
(Lemma 2) with | D ′ | = O(| D |).
4) Broadcast the k messages according to the procedure
implied by Lemma 5 in O(k| D ′ |) ≤ O(k log n · DS f )
communication rounds.
The procedure above will yield a communication scheme
with at most O(k log n · DS f ) communication rounds. To
understand the quality of the algorithm, one must express
the size NC (or at least bound it from below) by an
expression which can be easily compared with the bound
O(k log n · DS f ). For example, consider an instance to the
data exchange problem in which d = maxv∈V dv < k (here,
for all vi ∈ V dvi = | Xi |). We have seen via Lemma 1 that
NC ≥ (k − d) · DS+ ≥ (k − d) · DS f ≥ DS f . Thus, on these
f
instances we obtain a solution to the data exchange problem
that is within a multiplicative factor of O(k log n) from the
optimal solution. It is also not hard to see (we do this implicitly
in Section IV-E) that even if d = maxv∈V dv = k a slight
variant to our algorithm yields a solution which is within a
multiplicative factor of O(k log n) from the optimal solution.
The next sections attempt to improve this ratio to better match
the hardness results presented in Section III. Speciﬁcally, we
show that the factor of k in the ratio O(k log n) can be reduced
or in cases removed.

Illustration of the graph G ′ of Lemma 4.

to estimate within a multiplicative factor of c log |V |, for some
c > 0 [15]). Proof of our claims appear in [5].
We ﬁrst show our hardness for k = 1 even in the case
that only one vertex holds all the information packets. (See
Lemma 7 in the full version of the paper [5] for the proof).
This implies that our upper bound for the case of disjoint sets
of messages discussed in Section IV-B is tight. We then turn
to the case of general k using an enhanced gap preserving
reduction depicted in Figure 1. Namely, given an instance
G = (V, E) to the dominating set problem, we construct the
following graph G ′ = (V ′ , E′ ) for the coded cooperative data
exchange problem. G ′ has k copies of G, and a new vertex v,
such that v is connected to a vertex ui in each copy Gi of G.
All vertices ui know all messages, v knows no message, and
for each Gi all vertices in Gi besides ui know all messages
besides the i’th one. We show the following lemma:
Lemma 4 If DS( G ) ≤ α then NC ( G ′ ) ≤ k ·
if DS( G ) > β then NC ( G ′ ) > k · β.

4
3

· (α + 1), and

Which implies:
Theorem 1 The coded cooperative data exchange problem is
NP-hard to approximate within c log |V |, for some c > 0, for
every value of k polynomial in |V |.
IV. A PPROXIMATION A LGORITHM
In this section we give an approximation algorithm for the
coded data exchange problem and analyze its approximation
ratio. In the ﬁrst subsection we present the approximation
algorithm. In the second subsection we analyze the quality
of the algorithm on a number of graph families or initial
packet allocations, and show that for these instances the
approximation ratio of the given algorithm matches (or comes
close to matching) the results given in the previous section.
In the third subsection we extend our analysis to the general
case.
A. The Algorithm

B. Disjoint Sets of Messages

The following lemma introduces an approximation algorithm for the cooperative data exchange problem.

In this subsection we analyze our approximation algorithm
for the case that for each two nodes v, u it holds that Xv ∩
Xu = ∅. Note that this includes the case where only one
node holds all the information, and all other nodes have no

Lemma 5 Given a connected dominating set D of G one
can efﬁciently solve the cooperative data exchange problem

4

information. For this case we are able to improve over the
lower bound presented in Lemma 1 and show (proof appears
in full version [5]) that:

V. C ONCLUDING REMARKS
In this paper, we consider the cooperative data exchange
problem for general topologies G in the combinatorial integral setting. We establish both upper and lower bounds
on the multiplicative approximation ratio that one may obtain efﬁciently by tying our problem to certain well studied
combinatorial properties of G. Our achievability results are
based on communication schemes that do not involve coding
and in such imply bounds on the coding advantage of the
problem at hand. Our results address the setting of undirected
networks. Extending our results to the case of directed graphs
(by studying directed analogs to dominating sets) involves
modiﬁcations in our analysis and is subject to future research.

Lemma 6 NC ≥ k · DS f .
Which implies that:
Theorem 2 If for every two nodes v, u it holds that Xv ∩ Xu =
∅, the cooperative data exchange problem on general topologies can be efﬁciently solved within an approximation ratio
of O(log n). Moreover, in such cases it holds that k · DS f ≤
(
)

NC ≤ k · 4 · DS + 1 ≤ O(k log n) DS f . As our algorithm
3
does not involve coding, this implies that the coding advantage
is O(log n).

R EFERENCES

C. Regular Graphs
In this subsection we show that if the given graph is regular
¯
¯
our approximation algorithm has a (1 + d/(k − d)) · O(log n)
approximation ratio. As before, we start by giving a lower
bound for NC in this case. Namely, let G be a ∆ regular
¯ 1
graph, and let d = n ∑ dv , then (proofs appear in full version
[5]) we have that:
¯
Lemma 7 (k − d) DS f ≤ NC.

[1] R. Ahlswede, N. Cai, S.-Y. R. Li, and R. W. Yeung. Network Information
Flow. IEEE Transactions on Information Theory, 46(4):1204–1216,
2000.
[2] V. Chvatal. A greedy heuristic for the set-covering problem. Mathematics of Operations Research, 4:233–235, 1979.
[3] T. Courtade, B. Xie, and R. Wesel. Optimal exchange of packets for
universal recovery in broadcast networks. In Proceedings of Military
Communications Conference.
[4] T. A. Courtade and R. D. Wesel. On the minimum number of
transmissions required for universal recovery in broadcast networks. In
Proceedings of Forty-Eighth Annual Allerton Conference on Communication, Control, and Computing.
[5] M. Gonen and M. Langberg. Coded cooperative data exchange problem
for general topologies. Manuscript; availiable on arxiv.org.
[6] S. Guha and S. Khuller. Approximation algorithms for connected
dominating sets. Algorithmica, 20:374–387, 1998.
[7] T. Ho, M. M´ dard, R. Koetter, D. R. Karger, M. Effros, J. Shi, and
e
B. Leong. A Random Linear Network Coding Approach to Multicast.
IEEE Transactions on Information Theory, 52(10):4413–4430, 2006.
[8] S. Jaggi, P. Sanders, P. A. Chou, M. Effros, S. Egner, K. Jain, and
L. Tolhuizen. Polynomial Time Algorithms for Multicast Network Code
Construction. IEEE Transactions on Information Theory, 51(6):1973–
1982, June 2005.
[9] D. S. Johnson. Approximation algorithms for combinatorial problems.
J. Comput. System Sci., 9:256–278, 1974.
[10] R. Koetter and M. Medard. An Algebraic Approach to Network Coding.
IEEE/ACM Transactions on Networking, 11(5):782 – 795, 2003.
[11] S.-Y. R. Li, R. W. Yeung, and N. Cai. Linear Network Coding. IEEE
Transactions on Information Theory, 49(2):371 – 381, 2003.
[12] L. Lovasz. On the ratio of optimal integral and fractional covers. SIAM
Journal on Discrete Math, 13:383–390, 1975.
[13] N. Milosavljevic, S. Pawar, S. E. Rouayheb, M. Gastpar, and K. Ramchandran. Optimal deterministic polynomial-time data exchange for
omniscience. Manuscript; availiable on arxiv.org.
[14] D. Ozgul and A. Sprintson. An algorithm for cooperative data exchange
with cost criterion. In Proceedings of Information Theory and Applications Workshop (ITA).
[15] R. Raz and S. Safra. A sub-constant error-probability low-degree
test, and sub-constant error-probability PCP characterization of NP. In
Proceedings of the Twenty-Ninth Annual ACM Symposium on the Theory
of Computing (STOC), pages 475–484, 1997.
[16] S. El Rouayheb, A. Sprintson, and P. Sadeghi. On coding for cooperative
data exchange. In Proceedings of ITW.
[17] P. Slavyk. A tight analysis of the greedy algorithm for set cover.
In Proceedings of the Twenty-Eighth Annual ACM Symposium on the
Theory of Computing (STOC), pages 435–441, 1996.
[18] A. Sprintson, P. Sadeghi, G. Booker, and S. El Rouayheb. A randomized
algorithm and performance bounds for coded cooperative data exchange.
In Proceedings of ISIT, page 18881892.
[19] S. Tajbakhsh, P. Sadeghi, and R. Shams. A generalized model for cost
and fairness analysis in coded cooperative data exchange. In Proceedings
of International Symposium on Network Coding (NetCod).
[20] S. Tajbakhsh, P. Sadeghi, and R. Shams. A model for packet splitting
and fairness analysis in network coded cooperative data exchange.

Theorem 3 The cooperative data exchange problem on regular
¯
¯
topologies has a (1 + d/(k − d)) · O(log n( approximation
)
)
¯
ratio. Speciﬁcally, (k − d) · DS f ≤ NC ≤ k · 4 · DS + 1 ≤
3
O(k log n) DS f . As our algorithm does(( involve)coding, this
not
)

implies that the coding advantage is O

1+

¯
d
¯
k−d

log n .

D. General Case
In this subsection we analyze the quality of our approximation algorithm for any instance G. The full version of this
work [5] presents an example that shows that our lower bound
¯
for regular graphs stated in Lemma 7 of (k − d) · DS f does
not hold for general graphs. We use ∆ to denote the maximum
degree of G and δ to denote the minimum degree of G. We
generalize Lemma 7 to the case of general graphs:
¯
Lemma 8 δ (k − d) DS f ≤ NC.
∆

We then conclude (recall that d = maxv∈V dv ):
Theorem 4 The cooperative data exchange problem on general topologies has an approximation ratio and coding advan{(
)
(
)}
¯
d
d
tage of O(log n) · min 1 + k−d , ∆ 1 + k−d¯
.
δ
E. A Tighter Upper Bound
In the full version of this work [5], we present a reﬁned
version of our algorithm from Section IV-A. The algorithm
we present will not yield improved asymptotic approximation
ratios, however it yields improved communication schemes
that at times may match those returned by the algorithm
of Section IV-A and at times may be signiﬁcantly better
(depending on the instance at hand). Roughly speaking, we
improve the previous algorithm by taking into account the
simple fact that it sufﬁces to send each packet xi ∈ X only
to those clients that do not hold it. Some modiﬁcations are
needed in our algorithm to utilize this trivial observation.

5

