Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Fri May 18 23:37:58 2012
ModDate:        Tue Jun 19 12:56:15 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      426416 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569565607

Real-Time Status Updating: Multiple Sources
Roy D. Yates

Sanjit Kaul

WINLAB, ECE Dept.
Rutgers University
email: ryates@winlab.rutgers.edu

IIIT-Delhi
email: skkaul@iiitd.ac.in

monitor’s requirement of timely updating corresponds to small
average ∆(t). While status age is an application-independent
metric, it can be useful in speciﬁc applications by designing
the communication network to meet statistical requirements,
such as expected value and variance, of the age process. For
example, if a status updating system is forwarding sample
values of a Wiener process X(t) with variance αt [7], then
the monitor’s MMSE estimate of X(t) given the status age
ˆ
∆(t) is X(t) = X(t − ∆(t)). The variance of this estimate is
α∆(t).
We will see that the goal of timely updating is neither
the same as maximizing the utilization of the communication
system, nor of ensuring that generated status updates are
received with minimum delay. Utilization may be maximized
by making the sensor send updates as fast as possible.
However, this may lead to the monitor receiving delayed
statuses because the status messages become backlogged in
the communication system. In this case, delay suffered by the
stream of status updates can be reduced by reducing the rate of
updates. Alternatively, reducing the update rate can also lead to
the monitor having unnecessarily outdated status information
because of a lack of updates.
In this work, we start in Section II with a formulation of
the time-averaged status-age ∆(t) that applies to a broad class
of systems. This is used in Section III to analyze an FCFS
M/M/1 queuing system that delivers the status updates of
multiple independent sources to one or more monitors. For
the FCFS multiuser system, we derive the region of feasible
status-ages. In addition, in the presence of “interfering” trafﬁc
with a given offered load, we show the existence of an optimal
rate at which a source should generate its updates to keep its
status as timely as possible at the monitor. The key novelty
found in this analysis is that it is in the self-interest of a source
to limit its load on the service system. We conclude the paper
with possible extensions and a summary of our contributions
in Section IV.

Abstract—We examine multiple independent sources providing
status updates to a monitor through a ﬁrst-come-ﬁrst-served
M/M/1 queue. We formulate a status-age timeliness metric and
ﬁnd the region of feasible average status ages for a pair of
updating sources. In the presence of interfering trafﬁc with a
given offered load, we show the existence of an optimal rate at
which a source should generate its updates.

I. I NTRODUCTION
Increasingly ubiquitous connectivity to communication networks and availability of portable devices have engendered
a host of applications in which sources – people and environmental sensors – send updates of their status to interested
recipients. These include news and weather reports and updates by individuals on Twitter about what is keeping them
busy, updates by environmental sensors [1], and vehicular
status (position, velocity, acceleration) updates that can assist
drivers of nearby vehicles in an intelligent transportation
system [2]. These applications need status updates at one or
more monitors to be as timely as possible; however, this is
typically constrained by limited network resources.
For example, consider status updates generated by sensors in
a vehicle. The update packets are queued while they wait to be
serviced by the car radio. The packet currently being serviced
by the radio waits for medium access and transmission before
it is received by other cars. Note that each sensor in the car
may be a source or that the car may aggregate a collection
of sensor measurements into a status update message that is
transmitted as a single packet. The packet service time will depend on the wireless channel and may or may not incorporate
retransmissions due to channel errors and backoff due to the
activity of other wireless transmitters. While system models
that incorporate these effects can be arbitrarily complex, we
observe even in the simple setting of an M/M/1 queue that
optimal updating policies are not well understood.
Maintaining the timeliness of data and state information in
a network is a problem that has appeared in many forms,
including, for example, data freshness in warehouses [3] and
web caches [4], periodic updating of real time databases
[5], and route caches in ad hoc networks [6]. However, no
consistent analytic methodology has emerged. In this paper,
we explore a new status-age timeliness metric as a basis for
the evaluation and design of status update systems. When a
monitor’s most recently received update at time t is timestamped u(t), the status update age, which we will refer to as
simply the age, is the random process ∆(t) = t − u(t). The

II. FCFS S TATUS U PDATE AGE
Figure 1 shows a sample variation of age ∆1 (t), for source
1 as a function of time t, at the monitor. Without loss of
generality, assume that we begin observing at t = 0 when the
queue is empty and the age is ∆1 (0) = ∆0 . The ﬁrst status
update of source 1 is generated at t1 , followed by updates
at t2 , t3 , . . . , tn . The status age of source 1 at the monitor
increases linearly in time in the absence of any updates and

1

∆1(t)
Age

Q2

Source
1

Qn

λ1
µ

˜
Q1

∆0
t1

t2

t3 t4
t2 t3 t4

t1
X2

tn−1

t5

T2

t

tn

t5

Source
2

Tn

the time-average age

Fig. 1: Example change in status update age at a monitor for a
system with a FCFS queue.

∆1

T

1
T

∆1 = lim ∆1
T →∞

(1)

0

2
Xi Ti + Xi /2
N1 (T ) − 1

(5)

T

= λ1 E [XT ] + E X 2 /2 ,

(7)

where E [·] is the expectation operator, and X and T are the
random variables that correspond to the interarrival time and
system time of a source 1 update packet, respectively.
We note that the average update age in (7) holds under
weak assumptions on the ergodicity of the service system.
Furthermore, (7) is a general result for a broad class of service
systems in which the update packets are processed FCFS. In
particular, the analysis leading to (7) made no assumptions
regarding other trafﬁc that shares the queue with the update
packets of source 1. That is, (7) holds for a queue in which
the status update stream shares the service facility with other
packet streams. However, evaluation of the age ∆1 can be
challenging. In particular, X is the random variable that
describes the time between generation of an update packet
and the one that preceded it while T is the system time of
that same packet. The variables X and T are dependent. In
a queue serving a single source, a large interarrival time X
allows the queue to empty, yielding a small waiting time and
typically a small system time T . In this case, X and T are
negatively correlated. This correlation may be reduced when
the queue serves packets from other sources; nevertheless, the
evaluation of E [T X] tends to be nontrivial.

For simplicity of exposition, the length of the observation
interval is chosen to be T = tn , as depicted in Figure 1.
We decompose the area deﬁned by the integral in (1) into
a sum of disjoint geometric parts. Starting from t = 0, the
˜
area can be seen as the concatenation of the polygon area Q1 ,
the trapezoids Qi for i ≥ 2 (Q2 and Qn are highlighted in
the ﬁgure), and the triangular area of width Tn over the time
interval (tn , tn ). With N1 (T ) = max{n|tn ≤ T } denoting
the number of source 1 arrivals by time T , this decomposition
yields
N1 (T )
2
˜
Q1 + Tn /2 + i=2 Qi
.
(2)
T
T
From Figure 1, we see that the area Qi can be calculated
as the difference between the area of the isosceles triangle
whose base connects the points ti−1 and ti and the area of
the isosceles triangle with base connecting the points ti and
ti . Deﬁning
Xi = ti − ti−1
(3)

∆1

N1 (T )
i=2

N1 (T )
(6)
T →∞
T
be the ergodic rate at which status update packets are generated. Furthermore, as N1 (T ) → ∞, the remaining summation
term in (5) is a sample average that will converge to its
corresponding stochastic average. The average status update
age can be obtained as

T

∆1 (t)dt.

˜
Q (N1 (T ) − 1)
+
T
T

λ1 = lim

The time average age of the status updates is the area under
the age graph in Figure 1 normalized by the time interval of
observation. Over an interval (0, T ), the average age is
=

T

=

2
˜
˜
where, Q = Q1 + Tn /2. We observe that the age contribution
˜
Q represents a boundary effect that is ﬁnite with probability
1, so the ﬁrst term in (5) will vanish as T grows. Let

is reset to a smaller value when an update is received. Update
i of source 1, generated at time ti , ﬁnishes service and is
received by the monitor at time ti . At ti , the age ∆1 (ti ) at the
monitor is reset to the age Ti = ti − ti of the received status
update. The age Ti is also the system time of update packet
i. Thus the age function ∆1 (t) exhibits the sawtooth pattern
shown in Figure 1.

∆1

λ2

Fig. 2: Independent sources send through a queue to a monitor.

tn
Xn

Monitor

=

to be the elapsed time between the generation of updates i − 1
and i, it follows that
1
1
2
Qi = (Ti + Xi )2 − Ti2 = Xi Ti + Xi /2.
(4)
2
2
When the generation of updates can be represented as the
arrivals of a stochastic process, Xi is the interarrival time of
update i. Substituting (4) in (2), some rearrangement yields

III. M/M/1 FCFS – T WO S OURCES
In [8], we analyzed E [T X] for a variety of FCFS queues
serving the status updates of only a single source. In that work,
it was shown that the average status age for an M/M/1 queue
with arrival rate λ1 , service rate µ and offered load ρ1 = λ1 /µ

2

is given by
∆1 =

1
µ

1+

1
ρ2
1
+
ρ1
1 − ρ1

.

(8)

The average age ∆1 is minimized at ρ∗ ≈ 0.53.
1

∆2

Here we generalize this prior work to the FCFS M/M/1
system depicted in Figure 2 with independent sources i = 1, 2.
Note that it is sufﬁcient to consider the two source system as
source 2 is equivalent to an aggregate of multiple Poisson
streams. The service rate is µ for packets from either source.
Source i has Poisson arrival rate λi , generating offered load
ρi = λi /µ. Update packets are generated as a rate λ = λ1 +λ2
Poisson process and the overall load is
ρ = λ/µ = ρ1 + ρ2 .

∆1

(9)

Fig. 3: The age region for two sources sharing a rate µ = 1
M/M/1 queue. The the minimum sum age point in the lower
left is achieved by ρ1 = ρ2 = 0.306.

To analyze the average update age for each source, we refer
to packet k, i for the ith packet from source k, k = 1, 2. We
use Xki to denote the interarrival time of packet k, i, relative
to the prior packet k, i − 1 also from source k.

by the geometric stationary distribution for source 2 packets.
As shown in the Appendix, these facts yield the next lemma.
Lemma 1:
1
ρ1 (1 − ρρ2 )
ρ2
+
.
E [W1i X1i ] = 2
µ (1 − ρ)(1 − ρ2 )3
ρ1 (1 − ρ2 )

In this notation, the average status age (7) for source k is
2
∆k = λk E [Xki Tki ] + E Xki /2 .

(10)

In steady state, the system time Tki of each packet k, i is
stochastically identical to T , with the exponential PDF
fT (t) = µ(1 − ρ)e−µ(1−ρ)t ,

(t ≥ 0.)

Applying Lemma 1 to (14) yields

(11)
∆1 =

For the average age ∆1 in (10), we now derive an expression
for E [T1i X1i ] that accounts for the trafﬁc offered by the other
source. The system time of update 1, i is
T1i = W1i + S1i ,

(12)

With some additional algebra, this permits us to write
β1 (ˆ1 , ρ2 )
ρ
,
(1 − ρ2 )µ
1
ρ2
ˆ1
β1 (ˆ1 , ρ2 ) = 1 +
ρ
+
+ ρ2 ρ2 .
ˆ1
ρ1
ˆ
1 − ρ1
ˆ
∆1 =

(13)

We note that E [S1i ] = 1/µ and that the rate λ1 Poisson
2
arrival process implies E [X1i ] = 1/λ1 and E X1i = 2/λ2 .
1
It follows from (10) and (13) that
1
1
(14)
∆1 = λ1 E [X1i W1i ] + + .
µ λ1

Li = {T1,i−1 < X1i } .

(18a)
(18b)

From the perspective of source 1, (1 − ρ2 )µ is the average
service rate provided to its packets. Comparing (8) with load
ρ1 against (18) with normalized load ρ1 , we see that the source
ˆ
2 trafﬁc effectively reduces the service rate of source 1 updates
from µ to µ(1 − ρ2 ) as well as adding the penalty term ρ2 ρ2 .
ˆ1
By reversing labels 1 and 2, (18) also enables us to characterize the average age for source 2 updates. With normalized
service rate µ = 1, the region of achievable average update
ages is shown in Figure 3. The lower left “corner” point where
the sum ∆1 +∆2 is minimized is obtained at ρ1 = ρ2 = 0.306,
yielding ∆1 = ∆2 = 5.30. By comparison, serving a single
source with optimal load ρ1 = 0.531, Equation (8) will
yield ∆1 = 3.48. This implies that if we were to partition
the resources to create two systems, each with service rate
µ = 1/2, to serve the sources independently, then each source
would obtain age ∆i = 6.96. Thus we observe a trunking
efﬁciency in having two status-updating sources share the

The key to the evaluation of E [X1i W1i ] is to characterize the
waiting time W1i via the partition
Bi = {X1i < T1,i−1 } ,

(16)

Given a ﬁxed alternate trafﬁc load ρ2 , it is instructive to deﬁne
the normalized load
ρ1
.
(17)
ρ1 =
ˆ
1 − ρ2

where W1i and S1i are the respective waiting time and service
time of source 1 packet i. Since S1i is independent of X1i , it
follows from (12) that
E [X1i T1i ] = E [X1i W1i ] + E [X1i ] E [S1i ].

1
ρ2 (1 − ρρ2 )
1
1
1
+
+
.
µ (1 − ρ)(1 − ρ2 )3
1 − ρ2
ρ1

(15)

That is, Bi denotes the event that the ith interarrival time for
source 1 is brief, speciﬁcally, less than the system time of
the preceding packet from source 1. By the same standard,
Li is the complementary event that X1i is long. When the
X1i is brief, W1i is the sum of the residual system time
of packet 1, i − 1 plus the service times of those source 2
packets that arrived during the interarrival time. When X1i is
long, we verify that the number of source 2 packets in the
system following the departure of packet 1, i − 1 is described

3

service facility.
A second situation of interest occurs when source 1 is a
status updater in the presence of “interfering” trafﬁc from
source 2. In this case, source 1 can choose its updating rate
in order to minimize ∆1 . Given the interfering load ρ2 , we
see from (18) that an optimal policy selects ρ1 to minimize
ˆ
β1 (ˆ1 , ρ2 ). While the exact minimum is the root of a ﬁfth order
ρ
polynomial, one can show that a second order approximation
yields the approximately optimal linear solution
ρ∗ (ρ2 ) = 1/2 + (1 − ρ2 )/32.
ˆ1

∆1

(19)

We further note that this linear approximation is exactly
optimal at ρ2 = 1 and very close to the numerically calculated
optimum ρ1 = 0.531 at ρ2 = 0, which corresponds to the sinˆ
gle source case. In fact, performance differences between the
linear approximation and the exact optimum are insigniﬁcant
for all ρ2 . In particular, Figure 4 shows ∆1 as function of
ρ2 for the optimal updating load ρ∗ (ρ2 ) (marked “opt” in the
ˆ1
legend) as well as for heuristic choices of the form ρ1 = ω.
ˆ
Note that ρ1 = ω implies ρ1 = ω(1 − ρ2 ). That is, source 1
ˆ
uses a ﬁxed fraction of the residual system capacity. In fact,
we observe that the age with ω = 0.5 is indistinguishable from
that with the optimal updating rate and, further, that the age
∆1 is relatively insensitive to the choice of ω in the vicinity
of ω = 1/2.
Now suppose that source 2 were also a status updater, and
that both the sources selected an update rate that minimized
their age given the other source’s update rate. Note that the
minimum age for source 1 can be obtained by selecting ρ1
ˆ
that minimizes ∆1 in (18), for a known ρ2 . The same can be
achieved for source 2 by reversing labels 1 and 2 in (18). Using
such an algorithm we conﬁrm experimentally, for a range of
initial server utilizations, that the ages of the sources converge
to the pair (5.4390, 5.4390). This age pair is a ﬁxed point of
unilateral optimization and is in the interior of the feasible age
region in Figure 3 and leads to suboptimal sharing. The update
rate pair at this ﬁxed point is a Nash equilibrium and achieves
(∆1 , ∆2 ) = (5.4390, 5.4390) at (ρ1 , ρ2 ) = (0.342, 0.342).

ρ2
Fig. 4: Source 1 age ∆1 as a function of interfering trafﬁc
with load ρ2 for various normalized loads ρ1 ; “opt” marks the
ˆ
age-minimizing source 1 normalized load ρ∗ .
ˆ1
(b) Given X1 < X2 , X1 and Y are conditionally independent and have conditional exponential probability density
functions (PDFs)
fX1 |X1 <X2 (x) = (α1 + α2 )e−(α1 +α2 )x ,
fY |X1 <X2 (y) = α2 e

−α2 y

(x ≥ 0, )
(y ≥ 0.)

,

Lemma 3: Given a rate λ Poisson process N (t) and an
independent exponential (α) random variable X, the number
of arrivals N (X) in the interval [0, X] has the geometric PDF
PN (X) (n) = (1 − γ)γ n ,

(n ≥ 0),

with γ = λ/(α + λ).
Proof: Lemma 1 The partition {Bi , Li } permits us to write
E [X1i W1i ] = E [X1i W1i |Li ] P [Li ]

+ E [X1i W1i |Bi ] P [Bi ].

(20)

In steady state, the system time T1,i−1 has the exponential
PDF (11). Furthermore, T1,i−1 depends on packets and their
service times that arrived prior to packet 1, i − 1. Thus T1,i−1
is independent of X1i .
Given Bi , packet 1, i − 1 is still in the system when packet
1, i is generated. The waiting time W1i depends on both the
residual system time T1,i−1 − X1i and also on the workloads
of source 2 packets that arrive during the source 1 interarrival
period of length X1i . Speciﬁcally, let M2 = N2 (X1i ) denote
the number of source 2 packets that arrive during the source 1
interarrival period and let S21 , S22 , . . . S2M2 denote the service
requirements of these source 2 packets. As these packets are
all queued between packets 1, i − 1 and 1, i, we observe that

IV. C ONCLUSION
We have looked at the problem of multiple sources generating timely status updates at interested recipients. We have
employed a simple approach in which the communication
network is modeled by an FCFS M/M/1 queue. We derived
the region of feasible status ages. We also resolved the
optimal updating rate in the presence of interfering trafﬁc. The
preliminary insights lead us to believe that status updating is a
potential way to address more complex problems in real-time
process estimation through networks.
A PPENDIX

M2

W1i = (T1,i−1 − X1i ) +

The proof of Lemma 1 relies on the following basic properties of Poisson processes and exponential random variables.
Lemma 2: Let X1 and X2 be independent exponential
random variables with E [Xi ] = 1/αi . Let Y = X2 − X1 .
(a) P [X1 < X2 ] = α1 /(α1 + α2 ).

S2j .

(21)

j=1

This implies
E [X1i W1i |Bi ] = E1 + E2

4

(22)

source 2, Lemma 3 implies that M2 has the geometric PMF

where
E1 = E [X1i (T1,i−1 − X1i )|Bi ],



PM2 (m) = (1 − γ)γ m ,

(23)

M2

E2 = E X1i
j=1

S2j |Bi .

(25)
(26)
(27)

For the second term, iterated expectation yields


M2

∞

E2 =

E X1i

0

j=1



∞

=
0

S2j |Bi , X1i = xfX1i |Bi (x) dx


M2

E x
j=1

S2j |X1i = xfX1i |Bi (x) dx.

(28)

M2

E [X1i W1i |Li ] = E X1i

Given that X1i = x, M2 = N2 (X1i ) = N2 (x) is the number
of source 2 arrivals in a period of length x and is Poisson with
conditional expectation E [M2 |X1i = x] = λ2 x. In addition,
each S2j is an exponential (µ) random variable, independent
of X1i , implying E [S2j |X1i = x] = 1/µ. This implies


j=1

S2j |X1i

∞

x2 αe−αx dx =
0

2ρ2
2ρ2
= 2
.
α2
µ (1 − ρ2 )2

=

(29)

j=1

S2j |Li 

1
1
+
µ − λ2
λ1

ρ2
.
µ(1 − ρ2 )

E [M2 |Li ]
µ
(33)

Next we recall from Lemma 2 that independence of T1,i−1
and X1i implies P [Bi ] = ρ1 /(1 − ρ2 ). Combining this fact
with (20), (31), and (33), some algebra yields the claim. 2
R EFERENCES

(30)

[1] A. Mainwaring, D. Culler, and et al., “Wireless sensor networks for habitat
monitoring,” in Proceedings of the 1st ACM international workshop on
Wireless sensor networks and applications, ser. WSNA ’02. Atlanta,
Georgia, USA: ACM, 2002, pp. 88–97, ACM ID: 570751.
[2] P. Papadimitratos, A. La Fortelle, K. Evenssen, R. Brignolo, and
S. Cosenza, “Vehicular communication systems: Enabling technologies,
applications, and future outlook on intelligent transportation,” IEEE
Communications Magazine, vol. 47, no. 11, pp. 84–95, Nov. 2009.
[3] A. Karakasidis, P. Vassiliadis, and E. Pitoura, “ETL queues for active
data warehousing,” in Proceedings of the 2nd international workshop on
Information quality in information systems, ser. IQIS ’05. Baltimore,
Maryland: ACM, 2005, pp. 28–39, ACM ID: 1077509.
[4] H. Yu, L. Breslau, and S. Shenker, “A scalable web cache consistency
architecture,” SIGCOMM Comput. Commun. Rev., vol. 29, no. 4, pp. 163–
174, Aug. 1999, ACM ID: 316219.
[5] M. Xiong and K. Ramamritham, “Deriving deadlines and periods for
real-time update transactions,” in The 20th IEEE Real-Time Systems
Symposium, 1999. Proceedings. IEEE, 1999, pp. 32–43.
[6] Y. C. Hu and D. B. Johnson, “Ensuring cache freshness in on-demand
ad hoc network routing protocols,” in Proceedings of the second ACM
international workshop on Principles of mobile computing, 2002, pp. 25–
30.
[7] A. Papoulis, Probability, Random Variables, and Stochastic Processes,
3rd ed. New York: McGraw-Hill, 1991.
[8] S. Kaul, R. Yates, and M. Gruteser, “Real-time status: How often should
one update?” in Proc. IEEE INFOCOM Mini Conference, 2012.

It follows from (22), (27) and (30) that
E [W1i X1i |Bi ] =



M2

= E [T1,i−1 + (X1i − T1,i−1 )|Li ]

By Lemma 2, X1i given Bi is an exponential (α) random
variable with α = λ1 + (µ − λ1 − λ2 ) = µ − λ2 . These facts
imply
E2 = ρ2

S2j |Li 

= E [X1i |Li ] E 

= x = x E [M2 |X1i = x] E [S2j |X1i = x]
= x(λ2 x)(1/µ) = ρ2 x2 .

j=1



M2

E x

(32)

where γ = λ2 /(α + λ2 ) = ρ2 .
Thus at the departure instant of packet 1, i − 1, the number
of source 2 packets in the system, M2 , is described by the
stationary distribution for an M/M/1 queue serving only source
2 packets at rate λ2 . Going forward from this instant, we
wait an additional time of length X1i − T1,i−1 for the arrival
1, i from source i. In this time period, there may be either
arrivals or departures of source 2 packets. Nevertheless, as
the queue holds zero source 1 packets, the operation of the
queue is identical to an M/M/1 queue for just source 2 packets.
At all times up to the arrival of packet 1, i, the number of
source 2 packets in the queue remains stochastically identical
to M2 . It follows that when packet 1, i does arrive, the number
of queued packets is described by M2 , independent of the
additional delay X1i − T1,i−1 until the arrival of packet 1, i. If
the jth queued source 2 packet has service requirement S2j ,
M2
then W1i = j=1 S2j and



(24)

By Lemma 2(b),
E1 = E [(T1,i−1 − X1i )|Bi ] E [X1i |Bi ]
1
1
=
µ − λ1 − λ2
λ1 + (µ − λ1 − λ2 )
1
.
= 2
µ (1 − ρ)(1 − ρ2 )

(m ≥ 0),

1
2ρ2
1
+
. (31)
µ2 (1 − ρ2 )2
(1 − ρ2 )(1 − ρ)

Given event Li , packet 1, i−1 has departed the system prior
to the arrival of packet 1, i. In this case, the waiting time for
packet 1, i depends on the number of source 2 packets in the
system when packet 1, i arrives. To characterize this, we now
let M2 denote the number of source 2 packets in the system
at the departure instant of packet 1, i − 1. Since the queue is
FCFS, M2 is the number of source 2 packets that arrived and
queued during the system time T1,i−1 of packet 1, i−1. Given
T1,i−1 is exponential and independent of X1i , Lemma 2(b)
tells us that T1,i−1 given Li is conditionally an exponential
(α) random variable with α = (µ − λ1 − λ2 ) + λ1 = µ − λ2 .
As T1,i−1 is independent of the subsequent Poisson arrivals of

5

