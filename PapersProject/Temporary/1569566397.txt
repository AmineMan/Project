Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Fri May 18 22:47:00 2012
ModDate:        Tue Jun 19 12:56:16 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      459885 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569566397

Approaching Capacity at High Rates
with Iterative Hard-Decision Decoding
Yung-Yih Jian, Henry D. Pﬁster, and Krishna R. Narayanan
Department of Electrical and Computer Engineering, Texas A&M University
Email: {yungyih.jian,krn,hpﬁster}@tamu.edu
correcting component codes. This is similar to other recent
work on coding system for optical communication systems
[13], [14], [15]. The main difference is that HDD of our
spatially-coupled GLDPC ensemble can be rigorously analyzed via density evolution (DE) even when miscorrection
occurs. The DE analysis also allow us to show that iterative
HDD can approach capacity in the high-rate regime.

Abstract—A variety of low-density parity-check (LDPC) ensembles have now been observed to approach capacity with
message-passing decoding. However, all of them use soft (i.e., nonbinary) messages and a posteriori probability (APP) decoding
of their component codes. In this paper, we analyze a class of
spatially-coupled generalized LDPC codes and observe that, in
the high-rate regime, they can approach capacity under iterative
hard-decision decoding. These codes can be seen as generalized
product codes and are closely related to braided block codes.
Index Terms—GLDPC codes, density evolution, product codes,
braided codes, syndrome decoding

II. BASIC E NSEMBLE
Let C be an (n, k, d) binary linear code that can correct
all error patterns of weight at most t (i.e., d ≥ 2t + 1). For
example, one might choose C to be a primitive BCH code with
parameters (2ν − 1, 2ν − νt − 1, 2t + 1). Now, we consider
a GLDPC ensemble where every bit node satisﬁes two code
constraints deﬁned by C.

I. I NTRODUCTION
In his groundbreaking 1948 paper, Shannon deﬁned the
capacity of a noisy channel as the largest information rate
for which reliable communication is possible [1]. Since then,
researchers have spent countless hours looking for ways to
achieve this rate in practical systems. In the 1990s, the
problem was essentially solved by the introduction of iterative
soft decoding for turbo and low-density parity-check (LDPC)
codes [2], [3], [4]. Although their decoding complexity is
signiﬁcant, these new codes were adopted quickly in wireless
communication systems where the data rates were not too
large [5], [6]. In contrast, complexity issues have slowed their
adoption in very high-speed systems, such as those used in
optical and wireline communication.
In this paper, we consider an ensemble of spatially-coupled
generalized LDPC (GLDPC) codes based on t-error correcting
block codes. For the binary symmetric channel (BSC), we
show that the redundancy-threshold tradeoff of this ensemble,
under iterative hard-decision decoding, scales optimally in the
high-rate regime. To the best of our knowledge, this is the
ﬁrst example of an iterative hard-decision decoding (HDD)
system that can approach capacity. It is interesting to note that
iterative HDD of product codes was ﬁrst proposed well before
the recent revolution in iterative decoding but the performance
gains were limited [7]. Iterative decoding of product codes
became competitive only after the advent of iterative soft
decoding based on the turbo principle [8], [9].
Our choice of ensemble is motivated by the generalized
product codes now used in optical communications [10] and
their similarity to braided block codes [11], [12]. In particular,
we consider HDD of generalized product codes with t-error

Deﬁnition 1. Each element of the (C, m) GLDPC ensemble
is deﬁned by a Tanner graph, denoted by G = (I ∪ J , E),
with a set I of N = mn degree-2 bit nodes and a set J
2
of m degree-n code-constraint nodes deﬁned by C. A random
element from the ensemble is constructed by using an uniform
random permutation for the mn edges from the bit nodes to
the constraint nodes.
A. Decoder
It is well-known that GLDPC codes perform well under
iterative soft decoding [8], [9]. The main drawback is that
a posteriori probability (APP) decoding of the component
codes can require signiﬁcant computation. For this reason,
we consider message-passing decoding based on boundeddistance decoding (BDD) of the component codes. Let the
bit-level mapping implied by BDD, Di : {0, 1}n → {0, 1},
map the received vector v ∈ {0, 1}n to the i-th decoded bit
according to the rule
Di (v) =

ci
vi

if c ∈ C satisﬁes dH (c, v) ≤ t
if dH (c, v) > t for all c ∈ C,

where dH (·, ·) be the Hamming distance. The same analysis
can be applied to symmetric decoders (e.g., all syndrome
decoders) where the mapping Di (·) satisﬁes Di (v ⊕ c) =
Di (v) ⊕ ci for all c ∈ C and i = 1, . . . , n.
Decoding proceeds by passing binary messages along the
edges connecting the variable and constraint nodes and is
best understood from the implied computation graph. Let
ri ∈ {0, 1} denote the received channel value for variable node

This material is based upon work supported in part by the National Science
Foundation under Grant No. 0747470. Any opinions, ﬁndings, conclusions,
and recommendations expressed in this material are those of the authors and
do not necessarily reﬂect the views of the sponsors.

1

( )

for t + 1 ≤ i ≤ n − t − 1, and Qn (i) = 0 for 0 ≤ i ≤ t. Note
that, when the code contains the all-one codeword, Pn (i) = 1
for n−t−1 ≤ i ≤ n−1, and Qn (i) = 1 for n−t ≤ i ≤ n−1.
Similar to DE for LDPC codes on the BEC [16, pp. 95–
96], there is a compact characterization of the hard-decision
decoding threshold p∗ . The successful decoding condition
fn (x; p) < x provides a natural lower bound on the noise
threshold and it can be rewritten as p [fn (x; 1) − fn (x; 0)] +
fn (x; 0) < x to show that

i and µi→j be the binary message from the i-th variable node
to the j-th constraint node in the -th iteration. For simplicity,
we assume no bit appears twice in a constraint and let σj (k)
be the index of the variable node connected to the k-th socket
of the j-th constraint. Let j be the other neighbor of the i-th
variable node and let σj (k) = i. Then, the iterative decoder is
deﬁned by the recursion
( +1)

µi→j

( )

Di vj→i ,

(1)

where, for the i-th variable node and the j-th con( )
straint node, the candidate decoding vector is vj→i =
( )
( )
( )
(µσj (1)→j , µσj (2)→j , . . . , µσj (n)→j ) except that the k-th entry
is replaced by ri . It is very important to note that the above
decoder passes extrinsic messages and is not the same as
simply iterating between row and column decoders. This
allows one to rigorously apply DE.

p∗ = inf
x∈(0,1)

It is also worth noting that essentially the same recursion can
be used for a BEC with erasure probability p. In this case,
Qn (i) = 0 and one redeﬁnes Pn (i) to be the probability that
a randomly chosen bit is not recovered when it is initially
erased and there are i random erasures in the other n − 1
positions.

B. Density Evolution
The iterative decoding performance of GLDPC codes can be
analyzed via density evolution (DE) because, for a randomly
chosen bit node, any ﬁxed-depth neighborhood in the Tanner
graph is a tree with high probability as m → ∞. For HDD
of the component codes, this DE can be written as a onedimensional recursion.
If we assume that the component decoders are symmetric, then it sufﬁces to consider the case where the all-zero
codeword is transmitted over a BSC with error probability p
[16, pp. 188–191]. Let x( ) be the error probability of the
hard-decision messages passed from the variable nodes to the
constraint nodes after iterations. For an arbitrary symmetric
decoder, let Pn (i) be the probability that a randomly chosen bit
is decoded incorrectly when it is initially incorrect and there
are i random errors in the other n − 1 positions. Likewise,
let Qn (i) be the probability that a randomly chosen bit is
decoded incorrectly when it is initially correct and there are i
random errors in the other n−1 positions. Then, for the (C, m)
GLDPC ensemble, the DE recursion implied by (1) is deﬁned
by x(0) = p, x( +1) = fn x( ) ; p , and (with p 1 − p)

III. S PATIALLY-C OUPLED E NSEMBLE
Now, we consider a spatially-coupled GLDPC ensemble
where every bit node satisﬁes two code constraints deﬁned by
C. Similar to the deﬁnition introduced in [18], the spatiallycoupled GLDPC ensemble (C, m, L, w) is deﬁned as follows.
Deﬁnition 2. The Tanner graph of an element of the
(C, m, L, w) spatially-coupled GLDPC contains L positions,
[1, L], of bit nodes and L + w − 1 positions, [1, L + w − 1],
of code-constraint nodes deﬁned by C. Let m be chosen such
that mn is divisible by both 2 and w. At each position, there
are mn degree-2 bit nodes and m degree-n code-constraint
2
nodes. A random element of the (C, m, L, w) spatially-coupled
GLDPC ensemble is constructed as follows. At each bit
position and code-constraint position, the mn sockets are
partitioned into w groups of mn sockets via a uniform random
w
(b)
(c)
permutation. Let Si,j and Si,j be, respectively, the j-th group
at the i-th bit position and the j-th group at i-th code-constraint
position, where j ∈ [0, w−1]. The Tanner graph is constructed
(b)
by using a uniform random permutation to connect Si,j to
(c)
Si+j,w−j−1 by mapping the mn edges between the two groups.
w

n−1
n−1
i

fn (x; p)

xi 1 − x

n−i−1

(pPn (i)+pQn (i)) . (2)
A. Density Evolution

i=0

To derive the DE update equation of the (C, m, L, w)
( )
spatially-coupled GLDPC ensemble, we let xi be the average
error probability of hard-decision messages emitted by bit
nodes at position i after the -th iteration. According to
Deﬁnition 2, the average error probability of all inputs to a
( )
w−1 ( )
1
code-constraint node at position i is xi = w j=0 xi−j .

For the iterative BDD described above, the quantities P (i)
and Q(i) can be written in terms of the number of codewords,
Al , of weight l in C [17]. Let us deﬁne l(i, δ, j) = i−δ+2j +1
−1
l(i,δ,j)
and V (n, i, δ, j) = l(i,δ,j)−j n−l(i,δ,j)−1 n−1
. Since all
δ−1−j
i
decoding regions are disjoint, one can compute
t

δ−1

Pn (i) = 1 −
δ=1 j=0

n − l(i, δ, j)
Al(i,δ,j) V (n, i, δ, j)
n

( )

Also, it follows that xi

(3)

t

δ−1

δ=1 j=0

l(i, δ, j) + 1
Al(i,δ,j)+1 V (n, i, δ, j)
n

1
w
( )
xi

=

w−1
k=0

( −1)

fn xi+k ; p , where

= 0 for i ∈ [1, L]. Therefore,
/
fn (x; p) is deﬁned in (2) and
the DE update for this ensemble is given by


w−1
w−1
1
1
( +1)
( )
xi
=
fn 
x
; p .
(5)
w
w j=0 i−j+k

for t ≤ i ≤ n−t−2 and Pn (i) = 0 for 0 ≤ i ≤ t−1. Similarly,
Qn (i) =

x − fn (x; 0)
.
fn (x; 1) − fn (x; 0)

(4)

k=0

2

for t + 2 ≤ i ≤ n − t − 2.

IV. BCH C OMPONENT C ODES
In the remainder of this paper, an (n, k, 2t + 1) binary
primitive BCH code (or its (n, k − 1, 2t + 2) even-weight
subcode) will be used as the component code for both the
(C, m) GLDPC and (C, m, L, w) spatially-coupled GLDPC
ensembles. When the exact weight spectrum is known, one
can compute Pn (i) and Qn (i) using (3) and (4), respectively.
Otherwise, one can use the asymptotically-tight binomial
approximation

2−νt n (1 + o(1)) if d ≤ l ≤ n − d,

l
Al = 1,
(6)
if l = 0, l = n,


0,
otherwise,

Consider the DE recursion (2) for the (C, m) GLDPC
ρ
ensemble. For ﬁxed ρ, let p = n−1 scale with n and
( )
( )
λn = (n − 1)x( ) . From (2), the recursion for λn equals
( )

n−1

=
i=t

( )

λn
1−
n−1

n−1−i

(7)

Lemma 5. Since the limit of the RHS of (7) exists for all
( )
λn ≥ 0, the recursion for λ( ) is given by λ(0) = ρ and
λ(

+1)

= f λ( ) ; ρ

ρφ λ( ) ; t−1 +

1
φ λ( ) ; t . (8)
(t − 1)!

n
Remark 6. For any n < ∞, n−1 ρ can be seen as the average
number of initial error bits attached to a code-constraint
( )
n
node, and n−1 λn can be viewed as the average number
of error messages passed to a code-constraint node after the
( )
n
-th iteration. Since n−1 λn → λ( ) , it follows that the
recursion (8) tracks the evolution of the average number of
error messages passed to a code-constraint node.

The DE recursion of the GLDPC ensemble with the evenweight BCH subcode can be obtained by modifying (8).
Lemma 7. For the GLDPC ensemble based on the evenweight BCH subcode, if t is even, the recursion for λ( ) is
˜
λ( +1) = fe λ( ) ; ρ with
˜
fe λ( ) ; ρ

ρφ λ( ) ; t − 1 +

If t is odd, the recursion is λ(
˜
fo λ ( ) ; ρ

+1)

1
ψ λ( ) ; t .
(t − 1)!

˜
= fo λ( ) ; ρ with

ρφ λ( ) ; t − 1 +

1
ϕ λ( ) ; t .
(t − 1)!
( )

For the spatially-coupled GLDPC ensemble, let λi with
i ∈ [1, L] be the average number of error messages passed to
code-constraint nodes averaged over all code-constraint nodes
at positions j ∈ [i, i + w − 1] after the -th iteration. We set
(0)
( )
λi = ρ for all i ∈ [1, L], and set λi = 0 for all i ∈ [1, L]
/
and ≥ 0. Similar to (5), the recursion for spatially-coupled
ensemble is


w−1
w−1
1
1
( +1)
( )
λi
=
f
λ
; ρ
(9)
w
w j=0 i−j+k

Lemma 3. For the codes described above and t ≤ i ≤ n − 1,
˜
lim Pn (i) = lim Pn (i) = 1.

n→∞

i

(0)

∞
λi −λ
= 1 − Γ(k+1,λ)
i=k+1 i! e
Γ(k+1)
k/2 λ2i −λ
1+e−2λ
− i=0 (2i)! e
2
k/2 λ(2i+1)
1−e−2λ
− i=0 (2i+1)! e−λ .
2

ϕ(λ; k)

( )

λn
n−1

with initial value λn = ρ for all n.
Using Lemma 3 and Lemma 4, we can ﬁnd a simpler
( )
recursion for λ( ) limn→∞ λn .

A. High-Rate Scaling
In [14], Justesen analyzes the asymptotic performance of
long product codes under the assumption that the component
decoders have no miscorrection. Using the random graph
argument, a recursion for the “Poisson parameter” is obtained.
That recursion leads to a threshold, for successful decoding,
on the average number of error bits attached to a codeconstraint node. In this section, we obtain a similar recursion
as the scaled limit, as n → ∞, of our DE analysis. The
main contribution is that our approach rigorously accounts for
miscorrection.
We ﬁrst introduce some notation and a few lemmas that
simplify the development. Consider the Poisson distribution
with mean λ. Let φ(λ; k), ψ(λ; k) and ϕ(λ; k) be, respectively,
the tail probability, the tail probability for the even terms, and
the tail probability for the odd terms. Then, we have

ψ(λ; k)

n−1
i

× (ρ (Pn (i) − Qn (i))+(n − 1) Qn (i)) ,

where d = 2t + 1 and n = 2ν − 1 [19][20].
For the (n, k − 1, 2t + 2) even-weight subcode of an
(n, k, 2t + 1) primitive BCH code, the approximate number
˜
˜
of codewords is denoted by Al where Al = Al when l is
˜l = 0 when l is odd. Let Pn (i) and Qn (i) be the
˜
˜
even and A
˜
miscorrection probabilities implied by Al for the even-weight
subcode. Similar to Pn (i) and Qn (i) in the (n, k, 2t + 1)
˜
primitive BCH code, it can be shown that Pn (i) = 0 for
˜
0 ≤ i ≤ t − 1 and Qn (i) = 0 for 0 ≤ i ≤ t + 1.
Then, the DE recursions for the (C, m) GLDPC ensemble and
the (C, m, L, w) spatially-coupled GLDPC ensemble can be
obtained from (2) and (5), respectively.

φ(λ; k)

ρ
λn
;
n−1 n−1

λ( +1) = (n − 1)fn
n

n→∞

Lemma 4. For the codes described above and t + 1 ≤ i ≤
1
n − t − 1, we have Qn (i) = (t−1)! n (1 + o(1)) . Similarly,

k=0

˜
Qn (i) =

1
(t−2)! n2 (1 + o(1))
1
(t−1)! n (1 + o(1))

if i + t is odd,

for i ∈ [1, L]. When the even-weight BCH subcode is used as
a component code in the spatially-coupled GLDPC ensemble,

if i + t is even,

3

the recursion becomes

˜
 1 w−1 fe
k=0
w
( +1)
λi
=
˜
 1 w−1 fo
k=0
w

w−1 ¯ ( )
j=0 λi−j+k ; ρ
w−1 ¯ ( )
j=0 λi−j+k ; ρ

1
w
1
w

For GLDPC ensembles based on primitive t-error correcting
BCH codes, the high-rate limit of the potential threshold, ρ∗∗ ,
ˆt
for iterative HDD without miscorrection is given by

if tis even,
if tis odd.

ρ∗∗ = sup {ρ ∈ [0, ∞) | minλ≥0 U (λ; ρ) ≥ 0} .
ˆt

Lemma 8. For the high-rate scaling limit without miscorrection, the noise threshold in terms of the average number of
errors in a code constraint satisﬁes ρ∗∗ ≥ 2t − 2 for all t ≥ 2.
ˆt

V. B OUNDS ON THE N OISE T HRESHOLD
Suppose that one ignores the effect of miscorrection and
considers the natural hard-decision peeling decoder for the
(C, m) ensemble based on BCH codes, then it is easy to see
that at most mt errors can be corrected using BDD. To achieve
this upper bound, it must happen that each code corrects
exactly t errors. If some codes decode with fewer than t errors,
then there is an irreversible loss of error-correcting potential.
Since there are nm code bits per code constraint, normalizing
2
this number shows that the noise threshold is upper bounded
by 2t . In terms of the average number of errors in each code
n
constraint, the threshold is upper bounded by 2t because each
code involves n bits.
Tighter bounds can also be derived using the theory of
extrinsic information transfer (EXIT) functions. The idea is
that the DE recursion, when miscorrection is ignored, is
equivalent to the DE recursion for the erasure channel with
component codes that correct t erasures. Using this setup, one
can derive rigorous upper bounds on the maximum a posteriori
(MAP) threshold for the erasure channel [16], [21]. This bound
will not be tight, however, because the component decoder is
suboptimal and fails to recover correctable erasure patterns
with more than t erasures. Surprisingly, the bound still has
important operational meaning as the noise threshold of the
spatially-coupled system [22].
Consider the iterative HDD without miscorrection and let
ˆ
fn (x; p) denote (2) with Qn (i) = 0 . One can apply the results
of [22] by observing that the DE update for the (C, m) GLDPC
ensemble deﬁnes an admissible scalar system where f, g in
ˆ
[22] are deﬁned by f (x; ) = fn (x; p) p= and g(x) = x. In
this case, the associated potential function is given by

From the threshold of iterative HDD without miscorrection,
ρ∗∗ , one can bound the threshold of the iterative HDD with
ˆt
miscorrection using the following lemma.
Lemma 9. In the high-rate scaling limit, the noise threshold of iterative HDD with miscorrection, ρ∗∗ , satisﬁes
t
1
ˆt
ρ∗∗ − (t−1)! ≤ ρ∗∗ ≤ ρ∗∗ for t ≥ 2.
ˆt
t
Now, we introduce the notion of -redundancy.
Deﬁnition 10. Let C(p) be the capacity of a BSC(p). For an
> 0, a code ensemble with rate R and threshold p∗ is called
-redundancy achieving if
1 − C (p∗ )
≥1− .
1−R
Let nν
2ν − 1. The following lemma shows that, for
any > 0, a sequence of ensembles with rate Rν = 1 − 2νt
nν
2t
and threshold p∗ = nν is -redundancy achieving over BSC
ν
channels when ν ∈ Z+ is large. That is, for any > 0, there
exists a V ∈ Z+ such that, for all ν ≥ V , one has
1 − C(2tn−1 )
ν
≥1− .
2tνn−1
ν
Lemma 11. Consider a sequence of BSCs with error probability 2tn−1 for ﬁxed t and increasing ν. Then, the ratio of
ν
1 − C 2tn−1 to 2tνn−1 goes to 1 as ν → ∞. That is
ν
ν
lim

= 1.
(11)
2tνn−1
ν
Proof: Recall that the capacity of the BSC(p) is 1−H (p),
where H(p) = −p log2 (p) − (1 − p) log2 (1 − p) is the binary
entropy function. The numerator of the LHS of (11) can be
written as

ˆ
z − fn (z; p) dz
0

and the potential threshold of iterative HDD without miscorrection is given by

H

2t log2 nν
nν

1−

log2 2t
e
− O n−1
ν
log2 nν

. (12)

2tn−1 log2 (nν )
ν
1 − O ν −1 .
2tνn−1
ν
Then, the equality (11) follows since log2 (nν ) = ν +o(1).
Thus, the following Theorem shows that iterative HDD of
the spatially-coupled GLDPC ensemble can approach capacity
in high-rate regime.
2tνn−1
ν

ρ
λ
;
n−1 n−1

=

Theorem 12. For any > 0, there exist a tuple (t, n, L, w, m)
such that iterative HDD of the (C, m, L, w) GLDPC spatiallycoupled ensemble is -redundancy achieving when C is a terror correcting BCH code of length n .

λ

(z − ρφ(λ; ρ)) dz.

=

=

1 − C 2tn−1
ν

This threshold for iterative HDD without miscorrection is
achieved by (C, m, L, w) spatially-coupled GLDPC ensembles
in the limit where m
L
w as w → ∞.
Using (8), the high-rate scaling limit of the potential function can be written as
n→∞

2t
nν

By substituting (12) into the LHS of (11), we have

p∗∗ = sup p ∈ [0, 1] | minx∈[0,1] Un (x; p) ≥ 0 .
ˆn

U (λ; ρ) = lim (n − 1)Un

1 − C 2tn−1
ν

ν→∞

x

Un (x; p) =

(10)

0

4

Sketch of proof : The proof follows from combining
Lemmas 8, 9, and 11 with standard construction arguments
for sparse graph codes.

ensemble matches the results of [13], [14]. It is also proven
that iterative HDD threshold of the spatially-coupled GLDPC
ensemble can approach capacity in high-rate regime. Finally,
numerical results are presented that both verify the theoretical
results and demonstrate the effectiveness of these codes for
high-speed communication systems.

VI. N UMERICAL R ESULTS AND C OMPARISON
In the following numerical results, the iterative HDD threshold of (C, m, L, w) spatially-coupled GLDPC ensemble with
L = 1025, and w = 16 are considered. In Table I, the
thresholds of the ensembles are shown in terms of the average
number of error bits attached to a code-constraint node. Let
p∗ be the iterative HDD threshold of the spatially-coupled
n,t
GLDPC ensemble based on a (n, k, 2t + 1) binary primitive
BCH component code, and p∗ be the iterative HDD threshold
˜n,t
of the spatially-coupled GLDPC ensemble based on the (n, k−
1, 2t + 2) even-weight subcode. Then, we deﬁne a∗
np∗
n,t
n,t
and a∗
˜n,t n˜∗ to be the thresholds in terms of the average
pn,t
number of error bits attached to a component code. In the
high-rate scaling limit, we let ρ∗ and ρ∗ denote the iterative
˜t
t
HDD thresholds of the ensembles based on primitive BCH
component codes and their even-weight subcodes, respectively.
Moreover, the threshold of HDD without miscorrection, ρ∗ , is
ˆt
shown in Table I along with the potential threshold, ρ∗∗ , of
ˆt
iterative HDD without miscorrection from (10).
From Table I, one can observe that the thresholds (ρ∗ , ρ∗
t ˜t
and ρ∗ ) of the spatially-coupled ensemble with primitive
ˆt
BCH component codes or the even-weight subcodes approach
to 2t as t increases. This veriﬁes the results predicted by
Lemma 8 and the vanishing impact of miscorrection predicted
by Lemma 10.

R EFERENCES
[1] C. E. Shannon, “A mathematical theory of communication,” The Bell
Syst. Techn. J., vol. 27, pp. 379–423, 623–656, July / Oct. 1948.
[2] C. Berrou, A. Glavieux, and P. Thitimajshima, “Near Shannon limit
error-correcting coding and decoding: Turbo-codes,” in Proc. IEEE Int.
Conf. Commun., vol. 2. Geneva, Switzerland: IEEE, May 1993, pp.
1064–1070.
[3] M. G. Luby, M. Mitzenmacher, M. A. Shokrollahi, and D. A. Spielman, “Efﬁcient erasure correcting codes,” IEEE Trans. Inform. Theory,
vol. 47, no. 2, pp. 569–584, Feb. 2001.
[4] T. J. Richardson, M. A. Shokrollahi, and R. L. Urbanke, “Design of
capacity-approaching irregular low-density parity-check codes,” IEEE
Trans. Inform. Theory, vol. 47, no. 2, pp. 619–637, Feb. 2001.
[5] P. Bender, P. Black, M. Grob, R. Padovani, N. Sindhushayana, and A. J.
Viterbi, “CDMA/HDR: A bandwidth-efﬁcient high-speed wireless data
service for nomadic users,” IEEE Commun. Magazine, vol. 38, no. 7,
pp. 70–77, July 2000.
[6] C. Douillard, M. Jezequel, C. Berrou, N. Brengarth, J. Tousch, and
N. Pham, “The turbo code standard for DVB-RCS,” in Proc. Int. Symp.
on Turbo Codes & Related Topics, 2000, pp. 535–538.
[7] N. Abramson, “Cascade decoding of cyclic product codes,” IEEE Trans.
Commun. Tech., vol. 16, no. 3, pp. 398–402, 1968.
[8] J. Lodge, R. Young, P. Hoeher, and J. Hagenauer, “Separable MAP
“ﬁlters” for the decoding of product and concatenated codes,” in Proc.
IEEE Int. Conf. Commun., vol. 3, 1993, pp. 1740–1745.
[9] R. M. Pyndiah, “Near-optimum decoding of product codes: Block turbo
codes,” IEEE Trans. Commun., vol. 46, no. 8, pp. 1003–1010, Aug.
1998.
[10] Forward Error Correction for High Bit-Rate DWDM Submarine Systems, ITU-T Recommedation G.975.1, 2004.
[11] D. Truhachev, M. Lentmaier, and K. Zigangirov, “On braided block
codes,” in Proc. IEEE Int. Symp. Inform. Theory. IEEE, 2003, p. 32.
[12] A. J. Feltstrom, D. Truhachev, M. Lentmaier, and K. S. Zigangirov,
“Braided block codes,” IEEE Trans. Inform. Theory, vol. 55, no. 6, pp.
2640–2658, 2009.
[13] J. Justesen, K. J. Larsen, and L. A. Pedersen, “Error correcting coding
for OTN,” IEEE Commun. Magazine, vol. 48, no. 9, pp. 70–75, 2010.
[14] J. Justesen, “Performance of product codes and related structures with
iterated decoding,” IEEE Trans. Commun., vol. 59, no. 2, pp. 407–415,
2011.
[15] B. Smith, A. Farhood, A. Hunt, F. Kschischang, and J. Lodge, “Staircase
Codes: FEC for 100 Gb/s OTN,” J. Lightwave Technol., vol. 30, no. 1,
pp. 110–117, 2012.
[16] T. J. Richardson and R. L. Urbanke, Modern Coding Theory. Cambridge
University Press, 2008.
[17] M. G. Kim and J. H. Lee, “Undetected error probabilities of binary
primitive BCH codes for both error correction and detection,” IEEE
Trans. Commun., vol. 44, no. 5, pp. 575–580, 1996.
[18] S. Kudekar, T. J. Richardson, and R. L. Urbanke, “Threshold saturation
via spatial coupling: Why convolutional LDPC ensembles perform so
well over the BEC,” IEEE Trans. Inform. Theory, vol. 57, no. 2, pp.
803–834, 2011.
[19] V. M. Sidel’nikov, “Weight spectrum of binary Bose-ChaudhuriHoquinghem codes,” Problems of Inform. Transm., vol. 7, no. 1, pp.
14–22, 1971.
[20] T. Kasami, T. Fujiwara, and S. Lin, “An approximation to the weight
distribution of binary linear codes,” IEEE Trans. Inform. Theory, vol. 31,
no. 6, pp. 769–780, 1985.
[21] C. Méasson, A. Montanari, and R. L. Urbanke, “Maxwell construction:
The hidden bridge between iterative and maximum a posteriori decoding,” IEEE Trans. Inform. Theory, vol. 54, no. 12, pp. 5277–5307, Dec.
2008.
[22] A. Yedla, Y. Y. Jian, P. S. Nguyen, and H. D. Pﬁster, “A simple proof of
threshold saturation for coupled scalar recursions,” 2012, arxiv preprint.

Table I
T HE ITERATIVE HDD THRESHOLDS OF (C, ∞, 1025, 16)
SPATIALLY- COUPLED GLDPC ENSEMBLE WITH BINARY PRIMITIVE BCH
CODES AND THEIR EVEN - WEIGHT SUBCODES
t
a∗
255,t
a∗
511,t
a∗
1023,t
ρ∗
t
a∗
˜255,t
a∗
˜511,t
a∗
˜1023,t
ρ∗
˜t
ρ∗
ˆt
ρ∗∗
ˆt

3
5.432
5.417
5.401
5.390
5.610
5.570
5.606
5.605
5.735
5.754

4
7.701
7.665
7.693
7.688
7.752
7.767
7.765
7.761
7.813
7.843

5
9.818
9.811
9.821
9.822
9.843
9.811
9.841
9.840
9.855
9.896

6
11.86
11.86
11.87
11.91
11.88
11.86
11.88
11.91
11.91
11.93

7
13.87
13.85
13.88
13.93
13.87
13.85
13.88
13.93
13.93
13.95

VII. C ONCLUSION
The iterative HDD of GLDPC ensembles, based on on terror correcting block codes, is analyzed with and without
spatial coupling. Using DE analysis, noise thresholds are
computed for a variety of component codes and decoding
assumptions. In particular, the case of binary primitive BCH
component-codes is considered along with their even-weight
subcodes. For these codes, the miscorrection probability is
characterized and included in the DE analysis. Scaled DE
recursions are also computed for the high-rate limit. When
miscorrection is neglected, the resulting recursion for the basic

5

