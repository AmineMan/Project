Title:          On Matching Short LDPC Codes with Spectrally-Efficient Modulation
Subject:        The combination of low-density parity-check (LDPC) codes and higher-order modulation does usually neither require an interleaver in between nor elaborated signal mapping design rules. However, as the constellation size increases, a matching interleaver can be employed to compensate performance losses, especially in case of structured codes. This interleaver can be generally described by mapping distributions. In this paper, we discuss optimized mapping distributions for short LDPC codes, i.e. in the order of 100-1000 bits. We point out that mapping distributions optimized by means of density evolution may not be suited for short codes. An alternative framework is introduced that utilizes an extended version of extrinsic information transfer functions. Their visualization feature helps to identify good mapping distributions for short codes.
Keywords:       LDPC codes; spectrally-efficient modulation; BICM; EXIT chart
Author:         Stefan Nowak and Ruediger Kays
Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Fri May 18 20:10:31 2012
ModDate:        Tue Jun 19 12:54:27 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      463033 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569565769

On Matching Short LDPC Codes
with Spectrally-Efﬁcient Modulation
Stefan Nowak and Ruediger Kays
Communication Technology Institute
TU Dortmund University, Germany
Email: {stefan.nowak | ruediger.kays}@tu-dortmund.de
Abstract—The combination of low-density parity-check
(LDPC) codes and higher-order modulation does usually neither
require an interleaver in between nor elaborated signal mapping
design rules. However, as the constellation size increases, a matching interleaver can be employed to compensate performance
losses, especially in case of structured codes. This interleaver can
be generally described by mapping distributions. In this paper, we
discuss optimized mapping distributions for short LDPC codes,
i.e. in the order of 102 -103 bits. We point out that mapping
distributions optimized by means of density evolution may not
be suited for short codes. An alternative framework is introduced
that utilizes an extended version of extrinsic information transfer
functions. Their visualization feature helps to identify good
mapping distributions for short codes.

interleaver allows for both breaking up structural dependencies
in the code and matching it with an arbitrary higher-order
signal constellation.
In [7][8][9], such a permutation device has been installed
between coding and modulation. Based on an optimized
mapping distribution, a performance improvement has been
reported for constellation sizes up to 64-QAM in [8]. In
DVB-T2, an interleaver has been included which is basically found by heuristics [10]. Furthermore, the employed
demultiplexer has been improved in [11] by applying the
theoretical concept of multi-edge type LDPC codes [12].
Structural properties have been reported in [13][14][15][16],
which can also be exploited to optimize the performance, e.g.
in the error ﬂoor region.
In many related publications, decoding thresholds are analyzed by a sort of density evolution (DE) [17]. Optimized
degree distribution pairs or mapping distributions can be found
in this way. However, these results always relate to very
large block lengths and large numbers of decoding iterations.
For example, in [8] a block length of 106 bits has been
used together with 1000 decoding iterations. Furthermore,
although efﬁcient approximations to DE exist, optimization
may become complex for large signal constellations. Above
that, when it comes to the use of short codes, the assumptions
made during optimization are not further valid.
Although extrinsic information transfer (EXIT) functions [18] also rely on ideal assumptions and are slightly less
accurate than DE, they offer some advantages. They allow for
evaluating mapping distributions very fast without performing
complex DE. Thus, even a large search space can be explored
very efﬁciently. Based on this, we propose an alternative
optimization method for ﬁnding good mapping distributions
in case of short LDPC codes.

I. I NTRODUCTION
The combination of low-density parity-check (LDPC)
codes [1] and bit-interleaved coded modulation (BICM) [2]
is among the most common capacity-approaching coding
schemes for bandwidth-limited channels [3]. Many wired and
wireless communication systems implement such a combination together with higher-order signal constellations to achieve
high spectral efﬁciency, e.g. using M -ary quadrature amplitude modulation (M -QAM). LDPC codes can approach the
capacity of single link channels if and only if the block length
tends to inﬁnity. However, many packet based communication
systems require rather short block lengths.
When combining LDPC codes with higher-order constellations, efﬁcient signal mapping design rules are usually neglected. So is the interleaver in the transmission chain, because
LDPC codes inherently feature a random-like interleaver due
to the code structure. The losses are in the range of a fraction
of a decibel for practical constellation sizes [3]. But there is an
inherent unequal error protection feature, when using irregular
(binary) LDPC codes. The reliability of a coded bit is roughly
proportional to the number of parity-checks it participates in.
At the same time, bits representing a higher-order modulation
symbol also exhibit different reliabilities due to their position
in the constellation labeling. This mismatch can be exploited
to improve the overall system performance.
For example, in [4][5] dedicated LDPC codes have been
designed for given signal constellations. The joint design of
coding and modulation may lead to the best results, however,
it is inﬂexible and does not correspond to the BICM principle
of choosing coding and modulation independently. For this, an
interleaver is of high practical relevance, as all LDPC codes
deployed in current communication systems are designed as
structured codes to facilitate hardware implementation with
lower complexity, e.g. quasi-cyclic (QC) LDPC codes [6]. The

II. M ATCHING LDPC C ODES AND M ODULATION
A. System Model
We consider a common BICM block-by-block transmission
over an additive white Gaussian noise (AWGN) channel with
2
noise variance σn =N0 as depicted in Fig. 1. N0 denotes the
one-sided noise power spectral density. At the transmitter
side a systematic binary (irregular) LDPC code with block
length N and code rate R is deployed, which is deﬁned
by its parity-check matrix H. To achieve the desired spectral efﬁciency M -QAM is used. The signal constellation X
holds |X |=M =22e complex-valued constellation points. We
focus on square QAM constellations with separable mappings,
i.e. both in-phase and quadrature components are formed

1

Interleaver

y

x
binary
input

LDPC
encoder

M-QAM
Gray mapping

Interleaver

Fig. 1.

AWGN
channel

dv,max

mj,i · xi
j

m(x) =

(1)

j=1 i=dv,min

The coefﬁcients mj,i represent the fraction of bits residing
at variable nodes with degree i that are mapped to reliability
level j in the labeling. A valid mapping distribution has to
fulﬁll the constraints
dv,max

i=dv,min

Sum-product
decoder

binary
output

block length of the code is large and the number of decoding
iterations is large, too. To elucidate this effect, we consider the
LDPC code used in [8] with R=1/2, N =99996, and degree
distribution pair λ(x)=0.2510x + 0.30938x2 + 0.00104x3 +
0.43853x9 and ρ(x)=0.63676x6 + 0.36324x7 . As in [8], the
code is constructed by means of the progressive edge growth
(PEG) algorithm [20]. For transmission with Gray-labeled
64-QAM, the optimization technique based on DE proposed
in [8] yields a mapping distribution m(x) as listed in Table I.
To evaluate the performance degradation when deviating from
almost ideal conditions, we constructed two further codes with
shorter block lengths, i.e. N =9996 and N =996, based on the
same degree distribution pair, while avoiding any cycles of
length four. The simulated codeword error rates (CWERs) for
optimized interleaving based on the mapping distribution given
in Table I and (continuously) random interleaving on a perblock-basis as benchmark are depicted in Fig. 2. The best
performance is naturally achieved for N =99996 and I=1000.
With the optimized mapping distribution a gain of 0.3 dB
is achieved compared to random mapping which is in good
agreement with the results provided in [8]. When reducing the
maximum number of decoding iterations to I=100, we already
observe a larger loss for the optimized mapping distribution
than observed for random mapping. The performance degrades
as the block length is further reduced. The sub-optimality is
most apparent for the shortest code. The CWER ﬂattens and
shows an obvious error ﬂoor behavior. For CWER<2 · 10−2 it
already performs worse than without any interleaving.
The explanation is basically hidden in the mapping distribution. When reducing the block length, the amount of short
cycles in the Tanner graph of the code increases signiﬁcantly.
In case these cycles have low extrinsic message degrees
(EMDs) [21], they lead to an overall performance loss of the
code. Trapping sets [22] existing in the code usually comprise
these cycles at low-degree variable nodes. Additionally, the
minimum distance scales with the block length of an LDPC
code. Due to this, we can observe a high number of codeword
errors which cannot be detected during decoding, because the
decoder has converged to another valid but wrong codeword.
As a consequence, we have to account for these ﬁnite-length
properties when dealing with short codes and also have to look
at the speciﬁc assignment of bits. To identify the overall performance range, we additionally investigate the two extreme

As indicated in Fig. 1, an interleaver can be introduced
between coding and modulation. For the general description
of the interleaver we use mapping distributions m(x) [8]. Let
dv,min and dv,max be the minimum and maximum variable node
degrees in the Tanner graph of H. Further, let Λi denote the
fraction of variable nodes in the graph with degree i. The
mapping distribution is then deﬁned as

e

mj,i · Λi = 1/e

Deinterleaver

System model for block-by-block BICM(-ID) transmission using LDPC codes.

independently. Each constellation point x ∈ X is uniquely
identiﬁed by a binary label (x)=[b1 . . . b2e ] with b ∈ {0, 1}.
k
The constellation subset Xb ⊂ X denotes those constellation
points x which have b at position k in its label (x). We use
Gray mapping, which is well combined with LDPC codes and
known to maximize the BICM capacity for moderate to high
signal-to-noise ratios (SNRs) [19]. In each signal dimension, e
bits are conveyed which in turn are characterized by e different
bit reliabilities due to the mapping. A bit bk , k ∈ {1, . . . , 2e}
corresponds to reliability level j=[(k − 1) mod e] + 1 using
the modulo operation. We denote bits at j=1 as most reliable
bits (MRBs) and bits at j=e as least reliable bits (LRBs). The
channel is deﬁned by its transition probability density function
2
p(y|x)=exp(− ||y − x|| /N0 )/(πN0 ).
At the receiver side, an ideal sum-product decoder is used.
Optionally, outer iterations between soft-demapper and sumproduct decoder can be performed, i.e. iterative demapping
(ID). However, due to Gray mapping, only small gains are
achieved originating from losses induced by independent bit
demapping. As the interleavers designed in this paper retain
their effect in both BICM systems, i.e. with and without ID, we
do not further consider ID. Anyway, interleaver design should
avoid four-cycles among modulation symbols [15] for ID.
B. Describing the Interleaver

e

Softdemapper

mj,i = 1

and

(2)

j=1

Note that a mapping distribution only describes the proportions
in the interleaving process and not the speciﬁc interleaving
itself, i.e. which code bit is assigned to which modulation bit.
For short codes this procedure plays an important role.

TABLE I
O PTIMIZED MAPPING DISTRIBUTION FOR G RAY- LABELED 64-QAM AND
PEG-LDPC CODE AS DEFINED IN S ECTION III [8]
i
m1,i
m2,i
m3,i
Eb /N0 |thresh

III. S HORT LDPC C ODES
The ideal assumptions, which are generally made during
analysis and optimization with DE or EXIT chart techniques,
lead to mapping distributions which are optimum as long as the

2

2
0.0000
0.3747
0.6253

3
4
0.5745
1.0000
0.4255
0.0000
0.0000
0.0000
5.2719 dB

10
0.7165
0.0000
0.2835

0

10

10

no int.
random
opt. m(x) [8]

-1

10
N=996, I=50

-2

10

CWER

CWER

10

N=9996, I=100
-3

N=99996
I=1000
I=100

10

10

10

0

-2

-4

-6

-4

10

5

5.5

6

6.5
E /N (dB)
b

7

7.5

8

5

MRB ® high degree
MRB ® low degree
no interleaving
random
opt. m(x) [8]
undetected CWER

5.5

6

6.5

7

7.5

8

8.5

E /N (dB)

0

Fig. 2. Codeword error rates for Gray-labeled 64-QAM transmission using
the LDPC codes deﬁned in Section III (I: number of decoding iterations).

Fig. 3. Codeword error rates for Gray-labeled 64-QAM transmission using
the LDPC codes deﬁned in Section III with N =996 and R=1/2 using different
interleaving approaches including the rate of undetected codeword errors.

cases: ﬁrst, the modulation bits for one codeword are sorted
according to their bit positions in the labeling starting with
MRBs and ending with LRBs. Now, (a) the coded bits are
sorted according to their variable node degrees starting with
the highest degree and mapped one-to-one to the modulation
bits (MRB→high degree) and (b) vice versa (MRB→low
degree). In Fig. 3, the CWERs for all interleaving options are
shown together with their respective rate of undetected errors.
We clearly see that for MRB→high degree and the optimized
mapping distribution the rate of undetected errors determines
the overall performance in the error ﬂoor region. In contrast
to this, MRB→low degree offers a very low rate of undetected
errors but a very bad waterfall performance. This fact already
indicates a fundamental performance tradeoff. When assigning
MRBs to low-degree variable nodes, we especially strengthen
these low-degree bits and it is these bits which are most
harmful when residing on short cycles [23]. When looking
carefully at the mapping distribution in Table I, we ﬁnd that
a large fraction of LRBs is assigned to low-degree variable
nodes and a large fraction of MRBs is assigned to high-degree
variable nodes, which explains the observed behavior.

B. Elementary EXIT Functions
In [18], it has been shown that the decoder of an LDPC
code can be thought of as that of a serially concatenated code.
The component codes correspond to mixtures of repetition
codes represented by the variable nodes and single paritycheck codes represented by the check nodes. During iterative
decoding, the output of the variable node decoder (VND)
serves as input for the check node decoder (CND) and vice
versa. For each of these decoders, overall EXIT functions can
be calculated as weighted mixtures of the component EXIT
functions according to
dv,max
2
IE,VND IA , σch =

log2

(5)

=dc,min

The weights are given by the degree distribution pair
λi and ρ of the considered LDPC code. The quantity
2
σch = 8 · R · Eb /N0 denotes the variance of the channel loglikelihood ratios (assuming BPSK). It is evident that we cannot
change the behavior of the CND as it is determined by the code
structure, i.e. (5) remains constant for a given code. However,
by different mappings we can obviously modify the behavior
of the VND by assigning different proportions of variable
nodes to different bit positions in the constellation labeling.
Note that this is exactly the meaning of the coefﬁcients mj,i in
the mapping distribution. The starting point of each elementary
VND EXIT function is given by the capacity of the respective
bit-level j according to (3). The equivalent noise variance for
2
use in (4) can be calculated by σch,j = J −1 (CBICM (j, Es /N0 ))
−1
with J (·) being the inverse J-function deﬁned in [18]. The
overall VND EXIT function is then given by the weighted
mixture of all elementary VND EXIT functions:

Within the information-theoretic framework of BICM, a
parallel channel model has been used to describe interleaving
and different levels in the bit labeling. The AWGN channel
is thus decomposed into a set of 2e parallel binary symmetric
memoryless component channels representing the individual
bit levels. Each of these component channels can be assigned
a dedicated bit-level capacity characterizing the conditional
mutual information of the input bit b and the continuous
channel output y given the reliability level j according to
CBICM (j, Es /N0 ) = 1 − Eb,y

ρ · IA,CND (IE , )

IA,CND (IE ) =

A. BICM Bit-level Capacity

p(y|x)
j p(y|x)
x∈X

(4)

i=dv,min
dc,max

IV. EXIT F UNCTIONS FOR BICM WITH LDPC C ODES

x∈X

2
λi · IE,VND IA , i, σch

2
IE,VND IA , σch,j , m(x) =
e

dv,max

(3)

2
mj,i · λi · IE,VND IA , i, σch,j .

j=1 i=dv,min

b

(6)

with Es /N0 = Eb /N0 · R · log2 (M ). As the conditions in both
signal dimensions are equivalent, in (3) only one dimension is
considered. The higher the capacity of a component channel
is, the more reliable is a bit when using this channel.

C. Example
An example for 16-QAM with Gray mapping and the degree
distribution pair speciﬁed in Section III is depicted in Fig. 4.

3

0.8
CBICM →

E,VND

I

1

0.8
→

1

0.6
0.4
i=2
0.2
0
0

i=3 i=4

i=10

and determine their smallest ACE value. The smaller the ACE
value of a cycle, the less it gains extrinsic information that does
not originate from the cycle itself. Those short cycles with low
ACE values residing on bit nodes of degree two have to be
specially treated when generating the mapping distribution.
We have to ensure that the proportion of bits from the set of
MRBs is large enough that a sufﬁcient number of reliable bits
can be assigned to the error-prone bits in the code. This can
either be done by appropriately constraining the optimization
of mapping distributions or by using the characteristics of the
VND EXIT function as identiﬁed in Section IV-C.

0.6
j=2

0.4
j=1
0.2

resultant
0.5
IA,VND →

0
−20

1

−10
0
10
E /N (dB) →
s

20

0

Fig. 4. Bit-level capacity of Gray-labeled 16-QAM (right) and corresponding
elementary VND EXIT functions for the LDPC code degree distribution pair
deﬁned in Section III; example for Es /N0 ≈7 dB.

B. Optimized Mapping Distributions for Short LDPC Codes

0.8

no interleaving
MRB®high degree
MRB®low degree
random
opt. m(x) [8]
CND

0.7

I

E,VND

Concluding from our ﬁndings obtained in Section IV, the
VND EXIT function for a good mapping distribution when
applied to short LDPC codes needs to be steep in the beginning. Certainly, the tunnel between VND and CND EXIT
functions may not be too small as this lowers the overall
decoding threshold. As a result, a higher relative increase of
VND extrinsic information is achieved. This effect appears to
be especially important for short codes, as after a small number
of iterations (3-4) the inherent ideal assumptions in the sumproduct algorithm are no longer valid. By this, an erroneous
bias in error-prone variable nodes can be avoided, and the
number of undetected codeword errors can signiﬁcantly be reduced. For a similar reason, the VND EXIT function should lie
below the VND EXIT curve for no interleaving (IE,VND, noint ).
A certain degree of freedom in shaping the VND EXIT curve
∗
is obtained by performing the optimization for some Eb /N0
which is off the capacity bound, i.e. the VND EXIT function
lies noticeably above the CND EXIT function. With this in
mind, we can formulate an optimization problem as follows:

0.9

,I

A,CND

®

1

0.6
0.5
0

0.2

0.4

I

A,VND

0.6

,I

E,CND

0.8

®

1

Fig. 5. VND EXIT functions for the conﬁguration in Fig. 3 with various
mapping distributions evaluated at Eb /N0 =7 dB.

On the right hand side, the capacity of both bit levels over
Es /N0 is shown. On the left hand side, the elementary VND
EXIT functions for the PEG-LDPC code deﬁned in Section III
are drawn including the resultant for no interleaving. The
starting point for each bunch of elementary EXIT functions is
implicitly given by CBICM (j, Es /N0 ). The weighted mixture
of these curves results in (6), which is obviously characteristic
for the chosen mapping distribution.
Let us now reconsider the different interleaving approaches
shown in Fig. 3 by drawing the EXIT chart for each approach
in Fig. 5. A mapping distribution which shows good ﬁnitelength properties, i.e. a low rate of undetected errors, has to
resemble MRB→low degree. However, this does not lead to a
better error rate performance due to a worse overall decoding
threshold. Therefore, an appropriate tradeoff has to be found.

maximize
m(x)

subject to

∗
dIE,VND (IA , Eb /N0 , R, m(x))
dIA
dv,max

(7)
IA =0

mj,i · Λi = 1/e,

i=dv,min
e
mj,i
j=1

= 1,

0 ≤ mj,i ≤ 1,
IE,VND (IA ) > IA,CND (IE ),
IE,VND (0) < (1 − γl ) · IE,VND, noint (0).

V. O PTIMIZED M ATCHING FOR S HORT LDPC C ODES
The optimization of mapping distributions for short LDPC
codes needs to be split up into two steps. First, the decoding
threshold of the overall system can be maximized by means
of DE or EXIT chart techniques, i.e. the required SNR for
successful decoding is minimized. Second, if a valid mapping
distribution is identiﬁed, ﬁnite-length issues need to be considered when assigning the speciﬁc code bits. However, both
steps depend on each other as already highlighted.

∗
By solving (7) for small ranges of Eb /N0 and γl ∈ R, we
ﬁnd valid candidates for good mapping distributions. These
candidates can then be further evaluated by simulations to
identify the one with the desired properties, e.g. a target
CWER. In Fig. 6, two exemplary results are shown. We
simulated the CWERs for the short PEG-LDPC code speciﬁed
in Section III and for a QC LDPC code with R=1/2 and
N =648 as speciﬁed in IEEE 802.11n [6]. In the ﬁrst case, we
continue to consider 64-QAM and in the latter case 256-QAM
has been applied. We ﬁnd good mapping distributions for
both conﬁgurations which are listed in Tables II and III.
The corresponding EXIT charts are shown in Fig. 7. As
can be seen, in both cases small gains of about 0.3 dB are
achieved. However, more important is the performance without
showing the onset of an error ﬂoor. When accounting for
ﬁnite-length issues as described in Section V-A, the mapping

A. Finite-Length Issues
To tackle the ﬁnite-length issues highlighted in Section III,
we have to analyze the given code according to short harmful
cycles residing at low-degree variable nodes. As a short cycle
is not necessarily bad, we make use of a well-established
metric, i.e. the approximate cycle EMD (ACE) [21]. As there
are usually no cycles of length four in properly designed LDPC
codes, we count the number of cycles of length six (and eight)

4

0

10

64−QAM
PEG−LDPC code
R = 1/2
N = 996

−1

CWER →

CWER →

−2

5.5

i
m1,i
m2,i
m3,i

10

10

−3

256−QAM
R = 1/2
N = 648
IEEE 802.11n [6]

−1

10

10

TABLE II
O PTIMIZED MAPPING DISTRIBUTIONS FOR G RAY- LABELED 64-QAM AND
PEG-LDPC CODE AS DEFINED IN S ECTION III

0

10

no interleaving
random
opt. m(x) [8]
m(x) Table II
6
6.5
7

−2

10

TABLE III
O PTIMIZED MAPPING DISTRIBUTIONS FOR G RAY- LABELED 256-QAM
AND QC LDPC CODE WITH R=1/2 AND N =648 (IEEE 802.11 N [6])

−3

10

Eb/N0 (dB) →

7.5

8.5

no interleaving
random
m(x) Table III
9
9.5
10

10.5

Eb/N0 (dB) →

m(x):
i
m1,i
m2,i
m3,i
m4,i

11

Fig. 6.
Simulation results showing CWERs for Gray-labeled 64-QAM
transmission using the PEG-LDPC code (cf. Section III) (left) and Graylabeled 256-QAM transmission using the QC LDPC code with R=1/2 and
N =648 (IEEE 802.11n [6]); different mapping distributions are applied.

0.9

[1] R.G. Gallager, Low-Density Parity-Check Codes. MIT Press, 1963.
[2] G. Caire, G. Taricco, and E. Biglieri, “Bit-interleaved coded modulation,” IEEE Trans. Inf. Theory, vol. 44, no. 3, pp. 927–946, May 1998.
[3] G. Forney and D. Costello, “Channel coding: The road to channel
capacity,” Proc. of the IEEE, vol. 95, no. 6, pp. 1150–1177, June 2007.
[4] J. Hou et al., “Capacity-approaching bandwidth-efﬁcient coded modulation schemes based on low-density parity-check codes,” IEEE Trans.
Inf. Theory, vol. 49, no. 9, pp. 2141–2155, Sept. 2003.
[5] H. Sankar, N. Sindhushayana, and K. Narayanan, “Design of lowdensity parity-check (LDPC) codes for high order constellations,” in
IEEE GLOBECOM, 2004, pp. 3113–3117.
[6] IEEE 802.11n-2009, Enhancements for Higher Throughput, Nov. 2009.
[7] H.-K. Yang and K. Yang, “Optimization of degree-proﬁle matching
interleavers for LDPC-coded modulation,” IEEE Comm. Letters, vol. 10,
no. 12, pp. 843–845, Dec. 2006.
[8] G. Richter, A. Hof, and M. Bossert, “On the mapping of low-density
parity-check codes for bit-interleaved coded modulation,” in IEEE ISIT,
2007, pp. 2146–2150.
[9] J. Lei and W. Gao, “Matching graph connectivity of LDPC codes to
high-order modulation by bit interleaving,” in 46th All. Conf., 2008.
[10] T. Yokogawa et al., “Parity and column twist bit interleaver for DVB-T2
LDPC codes,” in 5th Int. Symp. Turbo Codes and Rel. Topics, 2008.
[11] Jing Lei et al., “Demultiplexer design for multi-edge type LDPC coded
modulation,” in IEEE ISIT, 2009, pp. 933–937.
[12] T. Richardson and R. Urbanke, “Multi-edge type LDPC codes,” submitted to IEEE Trans. Inf. Theory, 2004.
[13] Y. Li and W. Ryan, “Bit-reliability mapping in LDPC-coded modulation
systems,” IEEE Comm. Letters, vol. 9, no. 1, pp. 1–3, Jan. 2005.
[14] R. Maddock and A. Banihashemi, “Reliability-based coded modulation
with low-density parity-check codes,” IEEE Trans. Comm., vol. 54,
no. 3, pp. 403–406, Mar. 2006.
[15] F. Kienle and N. Wehn, “Macro interleaver design for bit interleaved
coded modulation with low-density parity-check codes,” in IEEE VTC
Spring, 2008, pp. 763–766.
[16] S. Nowak and R. Kays, “An interleaving scheme for efﬁcient binary
LDPC coded higher-order modulation,” in 8th ITG Conf. on SCC, 2010.
[17] T. Richardson and R. Urbanke, “The capacity of low-density paritycheck codes under message-passing decoding,” IEEE Trans. Inf. Theory,
vol. 47, no. 2, pp. 599–618, Feb. 2001.
[18] S. ten Brink, G. Kramer, and A. Ashikhmin, “Design of low-density
parity-check codes for modulation and detection,” IEEE Trans. Communications, vol. 52, no. 4, pp. 670–678, Apr. 2004.
[19] C. Stierstorfer and R. Fischer, “(Gray) mappings for bit-interleaved
coded modulation,” in IEEE VTC Spring, 2007, pp. 1703–1707.
[20] X.-Y. Hu, E. Eleftheriou, and D.M. Arnold, “Regular and irregular progressive edge-growth tanner graphs,” IEEE Trans. Inf. Theory, vol. 51,
no. 1, pp. 386–398, Jan. 2005.
[21] T. Tian et al., “Selective avoidance of cycles in irregular LDPC code
construction,” IEEE Trans. Comm., vol. 52, no. 8, Aug. 2004.
[22] T. Richardson, “Error ﬂoors of LDPC codes,” 41th All. Conf., 2003.
[23] A. Ramamoorthy and N. Varnica, “Error ﬂoors of LDPC coded BICM,”
in IEEE ICC, 2007, pp. 839–844.
[24] S. Nowak, G. Smietanka, and R. Kays, “High efﬁciency broadband
transmission with LDPC codes over GF(2s ),” in IEEE BMSB, 2011.

0.9

0.7
0.6

0.62

0.615

0.5
0

no interleaving
MRB→high degree
MRB→low degree
opt. m(x) [8]
m(x) Table II
CND

0.005

I

A,VND

0.5
,I

E,CND

→

0.8
0.7
0.6

no interleaving
MRB→high degree
MRB→low degree
m(x) Table III
CND

0.65
0.6

1

0.5
0

0.03

I

A,VND

0.5
,I

E,CND

→

∗
Eb /N0 =9.8 dB; γl =0.07
2
3
12
0.3804
0.0763
0.3507
0.0000
0.6000
0.0000
0.2512
0.3237
0.0000
0.3684
0.0000
0.6493

R EFERENCES

1
IE,VND , IA,CND →

IE,VND , IA,CND →

1

0.8

∗
m(x): Eb /N0 =5 dB; γl =0.01
2
3
4
10
0.5193
0.0000
1.0000
0.5759
0.2579
0.5689
0.0000
0.0000
0.2228
0.4311
0.0000
0.4241

1

Fig. 7.
EXIT charts for the conﬁgurations shown in Fig. 6 for
Eb /N0 =7 dB (left) and Eb /N0 =10.5 dB (right).

distribution tends to contain more reliable bits at low-degree
variable nodes, e.g. compare Tables I and II. This is due
to the fact that these bits are needed for being assigned to
the error-prone bits in the code. As a result, the number of
undetected codeword errors can be reduced and approaches
the corresponding performance of no interleaving in Fig. 3.
VI. C ONCLUSION
When applying an interleaver to LDPC-coded BICM transmission, one has to put great attention on its mapping distribution. Threshold optimization with DE can only be considered
optimal as long as the inherent ideal assumptions are valid.
When using short LDPC codes, ﬁnite-length issues need to
be considered. We have characterized appropriate mapping
distributions by means of extended EXIT functions for the
VND. By their shape, we can identify good candidates for
mapping distributions for short LDPC codes. Special treatment
of the error-prone bits in the code helps reducing undetected
codeword errors. Although the achieved gain is not very large,
a wrongly-designed interleaver can signiﬁcantly degrade the
overall performance, especially in case of short LDPC codes.
Higher performance gains for short codes and higher-order
modulation are achieved when using non-binary LDPC codes
combined with a pure symbol-based mapping [24], i.e. taking
care for good bit mappings becomes irrelevant.

5

