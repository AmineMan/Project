Title:          Paper Title (use style: paper title)
Author:         F. Hemmati
Creator:        Microsoft® Word 2010
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Thu May 17 09:41:56 2012
ModDate:        Tue Jun 19 12:54:42 2012
Tagged:         yes
Pages:          4
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      536966 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569565459
Cross-Recurrence Property of m-Sequences
Farhad Hemmati
hemmatifarhad@yahoo.com
Abstract— A binary maximal length sequence (msequence) of period L = 2m - 1 can be generated by a
binary m-stage linear feedback shift-register (LFSR). Tap
connections of the LFSR corresponds to a binary primitive
polynomial of degree m. m-sequences enjoy several wellknown and unique properties. A new property for msequences, called cross-recurrence property, is presented
in this paper and its potential applications are briefly
outlined.

consecutive bits over an m-sequence of period L where d, 0 ≤
d < m, is an integer.
Unit vector: A k-dimensional binary vector consisting of k-1
zeros followed by a single 1, U = (0, 0, 0, …, 0, 0, 1).
Companion state: Term by term modulo-2 addition of Ei and
U; Ci = Ei + U = (si, si+1, …, si+k-2, 1+ si+k-1). In other words,
U = Ci + Ei

Keywords: m-sequence, linear feedback shift-register, finite fields,
polynomials over GF(2), cross-recurrence.

I.

i.e., term by term modulo-2 sum of a state and its companion
is the unit vector.

INTRODUCTION

Degree (delay) of a polynomial: The maximum (minimum)
exponent of terms in a polynomial. Only polynomials of zero
delay are considered in this paper.

Pseudo-Noise (PN) sequences, also known as maximal length
sequences (or m-sequences) have several applications in
communications, spread spectrum, radar, and cryptography; to
name a few. A binary m-sequence of period L = 2m - 1 can be
generated by a binary m-stage linear feedback shift-register
(LFSR). Tap connection (characteristic polynomial) of the
LFSR corresponds to a binary primitive polynomial of degree
m, [1]. m-sequences enjoy several well-known and unique
properties. A new property for m-sequences, called crossrecurrence property, is presented and proved in the following.
As potential applications of the new property, generation of
non-linear maximal length feedback shift-register sequences
and the discrete logarithm problem over finite fields are
briefly outlined. Detail formulation of the algorithms and their
complexity analysis is subject of forthcoming papers.

Characteristic state for a given binary polynomial f(x) of
degree d < m: An extended state of order d on an m-sequence
whose companion satisfies the recurrence relation of f(x).
Clearly, any block of m + i, 0 > i > d, consecutive bits on the
characteristic state not only satisfies the recurrence relation of
g(x) but also the recurrence relation of f(x) hence, the crossrecurrence property.
Example 1: It is well known that every m-sequence of period
L = 2m -1 includes a block of m consecutive ones followed by
a zero, E = (1, 1, …, 1, 1, 0). The companion of E; C = E + U
= (1, 1, …, 1, 1, 1) consists of m+1 consecutive ones and
satisfies the recurrence relation of f(x) = 1 + x. In other words,
E + U can be generated by a one-stage LFSR with
characteristic polynomial 1+x and initial state (1). Hence, E =
(1, 1, …, 1, 1, 0) is the characteristic state on any m-sequence
for the polynomial f(x) = 1+x.

Section II includes definitions and notations. Main theorems
are stated and proved in sections III and IV. Potential
applications of the cross-recurrence property are briefly
mentioned in section V. Polynomial addition and
multiplication are carried out over the finite field of two
elements, GF(2), [3].
II.

Theorem 1, presented in the following section, is a
generalization of example 1.

DEFINITIONS AND NOTATIONS

State: An m-dimensional binary vector, Si = (si, si+1, …, si+m-2,
si+m-1) 1 , si = 0 or 1 for all i, 0 ≤ i ≤ L-1, representing m
consecutive bits over an m-sequence of period L = 2m-1.

III.

THE CROSS-RECURRENCE PROPERTY OF M-SEQUENCES

Theorem 1: Let f(x) be a binary polynomial of degree d, 0 < d
< m and zero delay. Then, a unique characteristic state of
order d exists on an m-sequence generated by a primitive
polynomial g(x), deg[g(x)] = m, such that its companion
satisfies the recurrence relation of f(x).

Extended state of order d: An m + d = k-dimensional binary
vector, Ei = (si, si+1, …, si+k-2, si+k-1)1, 0 ≤ i ≤ L-1, representing k

1

(1)

When exceeding L, subscripts are reduced modulo L.

1

Proof: In polynomial form, powers of an element x in GF(2m),
generated by g(x), can be written as, [3]:

f ( x ) g ( x )h( x )  1  xQ ,

x j  f j (x ) mod[g(x)], deg[fj(x)] = d < m

where, in polynomial form, h(x) represents one period of the
sequence generated by f(x)g(x). Equation 5 implies that
deg[h(x)] = Q – (m + d). That is, the periodic sequence
generated by f(x)g(x) includes a block of m+d-1 consecutive
zeros followed by a single 1; the m + d = k-dimensional unit
vector U. A block of more than m+d-1 consecutive zeros does
not exist on the periodic sequence h(x)/(1+xQ).

or

x j  f j ( x )  a( x ) g ( x )

(2)

where, 0 ≤ j ≤ L -1 is an integer. Equation 2 implies that
gcd(fi(x), g(x)) = 1 and gcd(fi(x), a(x)) = 1 where gcd stands
for greatest common divisor. Integer j in equation 2 is known
as exponent of f(x). The set of 2m – 1 non-zero polynomials,
fj(x), includes all non-zero polynomials of degree d, 0 ≤ d < m,
[3]. However, only the subset of zero-delay elements in this
set is of our interest.

According to equations 1 and 4, the k-dimensional unit vector
U is modulo-2 sum of two companion extended states on the
considered m-sequence and the sequence generated by
a(x)/f(x). Therefore, for any polynomial f(x) of degree d < m,
a unique characteristic state of order d exists on an msequence generated by a primitive polynomial g(x), deg[g(x)]
= m, such that its companion satisfies the recurrence relation
of f(x).

For convenience and without loss of generality, in the
following we drop subscript j from fj(x) and rewrite equation 2
as,

f ( x )  a( x ) g ( x )  x j

(3)

Theorem 1 can be also proved by analyzing adjacencies of
cycles generated by an LFSR with characteristic polynomial
g(x)f(x)2. A special case of Theorem 1, where f(x) = (1 + x)i,
for all integers i > 0, was proved somewhere else, [4].

Next, divide both sided of (3) by g(x)f(x);

1
a ( x)
xj
.


g ( x) f ( x) f ( x) g ( x)

(5)

(4)

Example 2: Let g(x) = 1 + x + x4, m = 4, and f(x) = 1 + x + x2,
d = deg[f(x)] = 2. Then, an exhaustive search in the GF(24),
generated by g(x), and simple algebraic manipulations yields

Theorem 1 can now be proved by interpreting equation 4 in
terms of the periodic sequences generated by linear feedback
shift-registers having g(x), f(x), and f(x)g(x) as their
characteristic polynomials.

x10  1  x  x 2 ,

mod[ g ( x )] .

Specifically,

The first term in the left-hand side (LHS) of (4) represents an
m-sequence of period L generated by an LFSR having
characteristic polynomial g(x) and initially loaded by the unit
vector, U. Similarly, the second term in the LHS of (4) stands
for a sequence that, after some tail bits, converges to a
periodic sequence, F, (of period P) generated by f(x). The
number of tail bits is zero when deg[a(x)] < deg[f(x)] = d. In
this case, a(x) represents initial state of the shift-register that
generates F. a(x)/f(x) always converges to the periodic
sequence since according to equation 2, a(x) and f(x) are
relatively prime.

x10  1  x  x 2  (1  x 2  x 3  x 6 )(1  x  x 4 ) (6)
or

1
1  x2  x3  x6
x10


1 x  x4
1 x  x2
(1  x  x 4 )(1  x  x 2 )
In terms of (4), a(x) = 1+x2+x3+x6 and xj = x10. Illustrated in
Figure 1 is the sequence S1, one period of the m-sequence of
period L = 15 generated by 1/g(x). After a few tail bits,
a(x)/f(x) converges to a periodic sequence, S2, of period 3. The
leftmost terms in S1 and S2 are the first generated bits. Bit-bybit modulo 2 sum of S1 and S2 is a periodic sequence of period
15 = lcm(15, 3) and generated by x10/f(x)g(x).

The right-hand side (RHS) term in (4) is the modulo-2 sum of
the two sequences generated in the LHS of (4) and represents
a periodic sequence generated by an LFSR having
characteristic polynomial f(x)g(x) and initially loaded with a
unit vector, U. The numerator, xj, is merely a shift operator for
the generated periodic sequence. Period, Q, for the sequence
generated in the RHS of (4) is least common multiple (lcm) of
L and P, Q = lcm(L, P). Hence,

Clock Cycle:

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

S1 = 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0
S2 = 1 1 1 1 0 1 0 1 1 0 1 1 0 1 1
S1+S2 = 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1
Figure 1. One period of the m-sequence S1 generated by
1/(1+x+x4), the first 15 bits of sequence S2 generated by
(1+x2+x3+x6)/(1+x+x2), and S1 + S2.

1
h( x )

f ( x) g ( x) 1  xQ
or

2

2

Cycles of an LFSR and their adjacencies are defined in section V.

The underlined unit vector (0, 0, 0, 0, 0, 1) on S1 + S2
corresponds to the bit-by-bit modulo-2 sum of (1, 0, 1, 1, 0, 0)
and (1, 0, 1, 1, 0, 1); the extended state of order d = 2 on S1
and its companion on S2, respectively. Therefore, companion
of the extended state of order 2 on the m-sequence, (1, 0, 1, 1,
0, 1), satisfies the recurrence relation of f(x) = 1 + x + x2. The
block of 10 consecutive zeros appearing at the beginning of S1
+ S2 is due to the shift operator xj = x10 in equation 6. Also, the
characteristic state for f(x) appears exactly after the LFSR that
generates the m-sequence is clocked j+1 = 11 times.
IV.

the all one state (1, 1, 1, 1) and one more step to reach the
extended state of order one, (1, 1, 1, 1, 0).
Similarly, g(x) = 1 + x + x4 = 0 can be written as 1 =
x(1+x)(1+x+x2). Substituting x4 for 1+x yields 1 = x5(1+x+x2).
Using the fact that in GF(16), x15 = 1 we have, x10 = 1 + x + x2
mod[g(x)], which is the same exponent for the factor 1+x+x2
derived in Example 2 by inspection. Hence, characteristic state
for the factor 1 + x + x2 appears after 10 + 1 = 11 clock cycles
and characteristic state for f(x) = 1 + x3, appears on the msequence after the LFSR is clocked 4 + 10 + 1 = 15 times.

EXPONENTS OF A CHARACTERISTIC STATE

V.

As potential applications of the cross-recurrence property of
m-sequences, introduced in this paper, generation of nonlinear
maximal length sequences and a methodology to solve the
discrete logarithm problem in finite fields of characteristic two
are briefly outlined in the following.

Theorem 2. Let an LFSR with characteristic primitive
polynomial g(x), deg[g(x)] = m, be initially loaded with the
unit vector. Suppose that the characteristic states for
polynomials u(x), deg[u(x)] < m and v(x), deg[v(x)] < m,
appear on the generated m-sequence exactly after ju + 1 and jv
+ 1 clock periods, respectively. Then, the characteristic state
for a polynomial w(x) = u(x)v(x) appears exactly after j = ju +
jv + 1 modulo(L) clock cycles provided that gcd(g(x), w(x)) =
1.

A. Maximal Length Nonlinear Sequence Generation
A well-known procedure to generate maximal length nonlinear
sequences is to analyze cycle structure of an LFSR and join
the adjacent cycles in the state diagram of the LFSR, [1]. Two
cycles are disjoint if they don’t have a common state. Two
disjoint cycles C1 and C2 are adjacent if companion of one of
states on C1 belongs to C2. Cycles C1 and C2 can be joined to a
single cycle when predecessors of the companion states are
interchanged, [1]. For an example of such non-linear sequence
generation technique see [5] where adjacencies of cycles of an
LFSR with tap connection g(x)(1+x)2 were analyzed and used
to generate a large class of non-linear sequences. The
sequences constructed in [5] however, are partially linear;
consist of long strings of consecutive bits that can be
generated by short LFSRs. Using the cross recurrence property
of m-sequences, complex nonlinear sequences can be
generated by joining cycles of an LFSR with characteristic
polynomial

Proof: Trivially follows from equation 3.

u( x )  au ( x ) g ( x )  x ju
v( x )  av ( x ) g ( x )  x jv
Hence,

u( x)v( x )  w( x)  x ( ju  jv ) mod uloL, mod[g(x)]

POTENTIAL APPLICATIONS

(7)

which can be readily written in the form of equation 4. In
equation 7, f(x) is written as product of polynomials u(x) and
v(x) and not reduced modulo g(x). Therefore, the degree of
f(x) does not necessarily need to be less than the degree of
g(x), as assumed in theorem 1.

G( x )  g ( x )  bi ( x )

Theorem 2 illustrates multiplication to addition transformation
property of cross-recurrence property of m-sequences;
identical to the logarithm property. By induction, theorem 2
can be readily generalized for the case that f(x) is the product
of several polynomials provided that gcd(f(x), g(x)) = 1.

i

where, g(x) is a primitive polynomial and bi(x) are low degree
polynomials.
B. The Discrete Logarithm Problem in GF(2m)
In the context of cross-recurrence property of m-sequences,
presented in this paper, the discrete logarithm problem is to
find an answer to the following question. Beginning from the
unit vector, after how many shift-register clocks the extended
state of order d, satisfying recurrence relation of a given
polynomial f(x), deg[f(x)] = d, appears on an m-sequence
generated by a primitive polynomial, g(x), of degree m? In
terms of equations 3 and 4, the discrete logarithm problem is
to find exponent j when polynomials g(x) and f(x) are known.

Example 3: Consider a binary primitive polynomial of degree
m = 4, g(x) = 1 + x + x4 and let f(x) = 1 + x3 = (1 + x)(1 + x +
x2). In this example, exponents of factors of f(x) can be readily
determined algebraically without the need for actually
generating the m-sequence or searching in the extended finite
field generated by g(x).
First, g(x) = 0 implies that x4 = 1 + x which is in the form of
equation 3. Hence, when initially loading the m-sequence
generator with a unit vector, the characteristic state,
(1,1,1,1,0), for factor 1+ x appears on the m-sequence after 4 +
1 = 5 clock cycles. In other words, it takes four steps to reach

The above definition of discrete logarithm is given for
convenience and illustrative purposes. In practice however,

3

what is known is an extended state of order d on the msequence and not the polynomial f(x). Nonetheless, for a given
extended state, polynomial f(x) can be determined from the
Massey algorithm, [6].

generated by a six-stage LFSR with feedback polynomial f(x)
= 1+x6 = (1 + x)2(1+x+x2)2. That is, when appearing on an msequence, exponent of the extended state 13535 can be readily
found if exponents of its factors, 1 + x and 1 + x + x2, are
known.

The index calculus algorithm, extensively examined in [2], is a
well-known probabilistic approach to solve the discrete
logarithm problem. In principle, the algorithm consists of two
main stages. In the first stage, a look-up table is established to
list exponents, j, for as many low degree irreducible
polynomials as practical (in terms of required memory and
computational effort). This stage of the algorithm is the most
computationally intensive however, clever methods are known
to expedite the look-up table generation, [7]. In the next stage,
the polynomial f(x), derived by Massey algorithm for a given
extended state of order d, is examined for smoothness. A
polynomial is smooth if it can be written as the product of
several irreducible polynomials of low degree. Using the
results of Theorem 2, which transforms multiplication to
addition, exponent j for f(x) can be determined from exponents
of its factors available from the look-up table.

VI. REFERENCES
[1] S. W. Golomb, Shift-Register Sequences, Revised Edition,
Aegean Park Press, 1982.
[2] A. M. Odlyzko, “Discrete logarithm in finite fields and
their
cryptographic
significance”,
http://www.dtc.umn.edu/~odlyzko/doc/arch/discrete.logs.pdf.
[3] S. Lin and D, J, Costello, Jr., Error Control Coding:
Fundamentals and Applications. Prentice-Hall, New Jersey,
1983.
[4] F. Hemmati, ``A New Property for PN Sequences",

Proceedings of the Third SIAM Conference on Discrete
Mathematics, Clemson, SC, May 1986.
[5] F. Hemmati: “A large class of nonlinear shift-register
sequences”. IEEE Transactions on Information Theory 28(2):
355-359 (1982).
[6] J. L. Massey, “Shift-Register Synthesis and BCH
Decoding”, IEEE Transactions on Information Theory,
January 1969.
[7] D. Coppersmith. “Fast evaluation of discrete logarithms in
fields of characteristic two”, IEEE Transactions on
information Theory, 1984.
[8] W.W. Peterson and E.J. Weldon, Jr., Error-Correcting
Codes, 2nd edition, MIT Press: Cambridge, Mass., 1972,

It is well known that low degree polynomials are more likely
than high degree polynomials to be smooth, [2]. In many
instances however, a polynomial of degree k >> 1 might not
be smooth but the characteristic polynomial for the shortest
LFSR that generates it (obtained from Massey algorithm)
might be smooth.
Example 4. The polynomial 13535 of degree 12, represented
in octal, is irreducible, [8, Table C.2]. It can be however,

4

