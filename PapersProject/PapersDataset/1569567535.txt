Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Sat May 19 06:08:33 2012
ModDate:        Tue Jun 19 12:55:38 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      446499 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569567535

Efﬁcient code-based one-time signature from
automorphism groups with syndrome compatibility
Philippe Gaborit

Julien Schrek

XLIM, University of Limoges, France
gaborit@unilim.fr

XLIM, University of Limoges, France
julien.schrek@xlim.fr

properties of codes to construct decodable syndromes from one
given syndrome. We introduce the key notion of syndrome
compatible groups and we use the size of these groups to
decrease dramatically the size of the public key of our scheme.
Our protocol needs to use special codes with an automorphism
group as large as possible. The security of the KKS scheme
is not related to a general syndrome decoding problem but
rather to a special variation of the syndrome decosing problem.
One nice feature of our protocol is that, when no signature is
known, the security of our protocol can be related to the case
of decoding only one syndrome as in the usual case but for
a special type of code. We explain why decoding these codes
is very likely to be a hard problem. In the general case when
one signature is known the security of our scheme is based
on the fact that an attacker always lack sufﬁcently positions
of the secret vectors, so that he is not able to recover a secret
from the information given by only one signature.
Eventually the one-time signature we propose is a goodtrade off between the size of the signature and the size of the
key. Our system is a one-time signature with a not too large
public key (less than 20kb) which can be turned into multitime signature of 28kb through classical Merkle tree. Overall
the signature we obtain is very good trade-off besides existing
signature schemes like CFS or ZK-based signatures ([12]).
The paper is organized as follows, in section 2 we recall
basic fact about coding theory, in section 3 we sum-up codebased signatures. In Section 4 we give a high level overview of
our scheme, then in section 5 and 6 we describe our scheme.
We give example of syndrome compatible groups in section 7,
at last in section 8 and 9 we study the security of the scheme
and give parameters.

Abstract—In this paper we propose a new one-time signature
algorithm based on coding theory. The algorithm uses properties
of automorphism group of certain codes to dramatically decrease
the size of the public key of the scheme. By considering the action
of cyclic shifts or the action of the group P SL2 (p) we obtain
public keys of less than 18 kilobits for a signature of 7 kilobits.
Overall the scheme we propose is perfectly ﬁtted to be used
with Merkle tree and proposes a very good trade-off between
size of key and size of signatures compared to other code-based
signature schemes, with multi-time signatures of size 28kb.

I. I NTRODUCTION
The problem of ﬁnding efﬁcient signature algorithms is
a very difﬁcult problem in cryptography. In terms of codebased cryptography no ideal solution is known, in this paper
we propose a new approach to solve this problem, our new
protocol presents a good trade-off between existing solutions.
There exist three different type of methods to obtain a
signature scheme with code-based crypto-systems. The ﬁrst
method (similar to the RSA signature) consists in being
able to decode a random element of the syndrom space.
This point of view is developed by Courtois-Finiasz-Sendrier
[4] and necessitates to hide very large codes to obtain a
reasonable probability of decoding. The second method uses
zero-knowledge identiﬁcation algorithms together with the
Fiat-Shamir paradigm which permits to transform such an
algorithm into a signature algorithm. It generally leads to
very long signature. For coding theory the Stern identiﬁcation
protocol [12] is the most efﬁcient. The last method (similar to
the El Gamal signature scheme) consists in building a special
subset of the syndrome space that the signer is able to invert.
In coding theory this is done through the Kabatisansky-KroukSmeets signature scheme [7], meanwhile this scheme has two
important drawbacks, ﬁrst it is only a few-times signature
scheme (in the sense that only a few signatures are possible
for a given public key), secondly the size of key is rather
large: a few hundred thousand bits. Notice that one interest
of a one time signature algorithm is that it can be turned into
a signature algorithm with a predeﬁned maximum number of
possible signatures.
Our contribution We propose a new way to deal with onetime signature for coding theory. The idea of our scheme starts
from the Kabatiansky-Krouk-Smeets (KKS) signature scheme
and the remark that the public key of this scheme is too
large. The general idea of our scheme is to use combinatorial

II. BACKROUND
A. Code-based cryptography
Recall that the automorphism group of a code is the group
of permutation which leaves a code invariant.
The fundamental hard problem used in code-based cryptography is the following problem:
[Syndrome Decoding - SD]
Instance: A binary r × n matrix H, a word s of Fr and an
2
integer w > 0.
n
Question: Is there a word x in F2 of weight ≤ w such that
T
xH = s?

1

The problem SD is NP-complete. In practice, decoding
a general linear code has received a lot attention, both in
cryptology and in coding theory. All known algorithms have
an exponential complexity ([5], [8]).

III. H IGH - LEVEL OVERVIEW OF THE SCHEME
The protocol uses the idea of the KKS protocol to consider
as public key a parity check matrix H and a syndrome matrix
F . For the matrix H, one uses as it possible with the KKS
scheme a matrix with a compact representation as a quasicyclic matrix or a bordered double circulant matrix (we will
deﬁne it more precisely in Section 5). The main difference
comes from the syndrome matrix F . The core idea of our
protocol is to be able to ﬁnd a large set of syndrome (more
than 2150 say), such that this set can be described in a compact
way, typically with only 5 or 12 syndromes given rather than
160 in the KKS case.
The main idea works as follows: consider A a random k ×k
circulant square matrix where the ﬁrst row is chosen randomly
and where each row is deduced from the previous one by a
cyclic permutation. Consider now a double circulant matrix
H = (I|A) for I the k × k identity matrix. Let us deﬁne σ
the cyclic shift of one position among k position and let us
denote πσ the associated k × k matrix. For x = (x1 , x2 ) with
x1 and x2 in Fk , we can do the following observation:
2

B. One-time signatures and Merkle trees
The interest of one-time signatures in itself is not very important since very few applications needs only one signature.
The main interest of one-time signatures is the possibility to
use them in relation with a Merkle tree (also known as hash
trees). Merkle trees permit to obtain a signature which can be
used a predeﬁned number of time with a small public key,
and a signature composed of the public key of the one-time
signature gathered with its signature and some Merkle tree
information (see [2] for more details in a coding context).
C. The KKS few-times signature scheme and its security
1) The KKS scheme: The idea of the protocol [7] consists
in building a public linear syndrome matrix for which the
Signer is able to decode any syndrome obtained by column
combination of this matrix. More precisely consider H a
random (N − K) × N matrix and G a k × N with only
n non nul random columns. The public syndrome matrix F
is F = H.Gt . The matrix F corresponds to the syndromes
associated to H from the rows of G. The matrix G and the
position of the non null columns of G are secret. Since only
up to n columns of G are no null, any linear combination
of the columns of F is a syndrome associated to a linear
combination of rows of G, which on the average has weight
n/2. The number of possible syndromes that one can decode
this way is hence 2k (all the possible combinations of the
columns of F ). We refer the reader to the recent analysis of
[10] on the KKS protocol to see the protocol in more detail.
2) Security of the KKS scheme: Obviously the previous
KKS protocol cannot be repeated many times, since each
time a signature is given, some information on the non null
columns of G is given. There are two questions related to the
security of KKS. The ﬁrst question concerns semantic security,
the KKS problem can be seen as a multi-syndrome decoding
problem. It is not known whether this problem is hard or
not. In [1] Barreto et al. propose a variation on the KKS
scheme, for which they claim a semantic security (in Thm
5 of [1]) but the result seems hardly true. The second aspect
of security is the practical security of the scheme. Because of
the multiple syndromes known (k syndromes with k of order
150), the problem is very different from the usual syndrome
decoding. In particular the linearity of the syndromes with
the large number (k) of known syndromes permits to Otmani
and Tillich to develop specialized attacks, based precisely on
this large number of known syndromes. In practice they broke
all proposed set of parameters of [1]. It does not mean that
the scheme is completely broken, just that stronger parameters
have to be considered. Notice that in practice it leads to very
large parameters.

t
t
H.(x1 .πσ , x2 .πσ )t = πσ (x1 )t + A.πσ .xt
2

but using the fact that A is cyclic (and hence commutes
−1
t
with πσ ) together with the fact that πσ = πσ one gets:
t
t
−1
−1
−1
πσ (x1 )t + A.πσ .xt = πσ (x1 )t + πσ .A.xt = πσ .(H.xt ).
2
2

In other words from the syndrome value H.xt it is possible
to construct (in this case by cyclic shifts) new syndromes that
−1
we are able to decode. The action of πσ being translated
into the action of πσ on the two parts x1 and x2 of x. Hence
if one is given l different public syndromes si = H.xt by
i
considering the action of all cyclic shifts on the syndromes
and adding the shifted syndromes, one is able to decode
k l different syndromes. The idea of the algorithm works as
follows: give as public key a certain number of syndromes,
now if one considers a random addition of cyclic shifts of
these syndromes, it is possible to decode it.
At the difference of the KKS scheme the decoded codewords are not restricted to a part of the columns (the main
point which permits to add so much vectors in KKS), but can
reach all columns.
The fact that for our scheme the decoded words associated
to syndromes are not restricted to certain columns implies to
choose parameters so that it is hard to practically decode the
sum of the shifted syndromes.
Meanwhile if it implies to carefully choose parameters,
our scheme has two strong advantages compared to the KKS
scheme: ﬁrst the size of the public key is small and second the
set of decodable syndromes is not linear, which limits potential
attacks on the scheme.
In the next sections we will introduce special matrices and
codes for which the number of decodable syndromes deduced
from one syndrome is not k but rather k 3 .

2

denotes the concatenation of m and j. The parameters t and
t1 are security parameters.

IV. N OTATION AND DEFINITIONS
In all the following we denote by G a permutation group
acting on k positions, by g an element of G and by H a
k × n matrix with n = rk. We denote by πg the k × k matrix
representation of the permutation g and we denote by gr the
concatenation of the action of g on r blocks of k positions.
The permutation gr is hence a permutation on kr positions
such that the kr positions are considered as a sequence of r
blocks of k columns on which the restriction of gr is g. The
kr × kr matrix representation of gr is:


πg 0 · · · 0
 0 πg · · · 0 


Πg =  .
.
.
. ,
.
.
. 
 .
.
.
.
.
0

0

···

Key generation algorithm for the one-time signature algorithm
• Public data A permutation group G syndrome compatible
with a parity check matrix H.
• Key generation
Private key: x1 , x2 , ..., xl random words of weight t.
Public key: the associated syndromes si = H.xt .
i
One-time signature algorithm with syndrome compatibility
Entry: m a message to sign.
• Signature
1. Pick j a random element between 1 and 2s .
2. To any message m one associates through the hash function
h(m j), l elements a1 , a2 , ..., al with 1 ≤ ai ≤ |G|.
l
3. Compute the word sign = i=1 xi .Πφ(ai ) .
4. If weight(sign) > w or if the number of common
coordinates between any of the xi .Πφ(ai ) and sign is greater
than t1 , return to 1.
5. Output the signature (sign, j).

πg

Deﬁnition 1 (syndrome compatibility): Let G be a permutation group on k positions and H = (I|H1 |H2 | · · · |Hr−1 ) a
k × rk parity check matrix of a certain code, we say that the
permutation group G is syndrome compatible with H if for
any g in G there exists a k × k matrix Lg such that for any
1 ≤ i ≤ r − 1 we have Hi .πg = Lg .Hi . The matrix Lg is
called the compatible matrix of g for H.
Proposition 2: If a permutation group G is syndrome comn
patible with H then for any x in F2 and any g ∈ G:

• Veriﬁcation
1. Compute the ai from m and j
2. Verify that: H.signt =
weight(sign) ≤ w.

H.(x.Πg )t = Lg .(H.xt ).

l
i=1

Lφ(ai ) si and that

Proof: The veriﬁcation works since for any i,
H.(xi .Πφ(ai ) )t = Lφ(ai ) (H.xt ) = Lφ(ai ) .si .
i
In the algorithm parameter w permits to be sure that ﬁnding
a signature is hard (and so that its weight is not too high),
the parameter t permits to be sure that a part of the non nul
positions of the secrets xi is always missing in sign. Notice
that the actual value of these parameters are average values so
that the probability to do many trials is small.

Proof: The proposition is straightforward from the
pseudo-commutativity induced by the deﬁnition of the syndrome compatibility.
Remark 3: In other words the previous proposition gives
conditions which permit to translate the action on a syndrome
H.xt of a linear transformation Lg , associated to a given permutation g of G, into the action of a concatenated permutation
matrix Πg (obtained from g) directly on x for the syndrome
computation.
An example of a syndrome compatible group, is the group
G of circular permutations ( ie rotations or shifts in other
words) of length k. This group is syndrome compatible with
a k × 2k matrix H = (I|H1 ) where H1 is a random circular
matrix. Indeed, since circular permutations commute with
−1
cyclic matrices we get Lg = πg (the inverse comes from the
transposition). We will consider in the following an application
−1
to the group P SL2 (q) in which Lg = πg .

VI. E XAMPLES OF SYNDROME COMPATIBLE GROUPS
We now give two examples of compatible groups.
A. Quasi-cyclic construction
We consider a [k, rk] matrix H = (I|H1 |..|Hr−1 ) for Hi
random circulant matrices of size k. As we saw in previous
examples we can take for group G the group of cyclic shifts
of size k. The group G has size k. If one denotes by πa the
shift of a positions for 1 ≤ a ≤ k one gets:
−1
H.(x.Πa )t = πa .(H.xt ).

V. O NE - TIME SIGNATURE ALGORITHM WITH SYNDROME

B. Quadratic double circulant codes

COMPATIBILITY

This class of codes are [2(p+1), p+1] codes (for p a prime)
which has been introduced in the late 60’s by Karlin and have
since been the object of many papers. This class of codes has
the property to contain in general very good codes, in term
of miminum distance, moreover it has the property of having
a rather large automorphism group: the group P SL( 2, q) of
order (p−1)p(p+1) acting at the same time on both part of
2
the columns. We recall in the following the main property of

For running the algorithm we consider publicly known the
following: h a hash function, G a syndrome compatible group
with a k × rk parity check matrix H, and two integers w and
t. We consider a bijection φ : [1..|G|] → G which associates
to any number between 1 and order of G (denoted by |G|) an
element of G, we also consider an application L : G → GL(k)
which associates to any g ∈ G, the compatible matrix Lg for
H. Moreover l and s are integers. In the algorithm (m i)

3

Proof: We saw that the group P SL2 (p) was generated
by the three transformations S(b), T (s2 ) and N , the ﬁrst two
commute with Up and Vp , the action of N is translated into
a multiplication by a linear matrix L deﬁned in the previous
proposition. It proves the result. Moreover a description of the
group P SL2 (p) is easily derived from the three transformations.
Notice that by using a description of the elements of
P SL2 (p) as y → ay+b with ad − bc = 1 it is easy to describe
cy+d
P SL2 (p) from the transformations S(b), T (s2 ) and N (see
[9](p.492) for more details).

this group and refer to [9](p.492) for more details. We now
introduce some deﬁnitions. Let p be a prime. We deﬁne the
matrix of squares Qp in the following way: the ﬁrst row of Qp
has p positions numbered from 0 to p − 1. Now if the position
i for 1 ≤ i ≤ p − 1 is a square modulo p one puts a ’1’, and
if the position number is not one leaves a ’0’ as for the zero
position. Then the other p − 1 rows are obtained as successive
cyclic shifts of the ﬁrst row.
We also consider the matrix of non squares Np which has
’1’ in non square positions and ’0’ in square positions (with
always ’0’ in position zero).
We now deﬁne Bp the associated (p+1)×2(p+1) bordered
double circulant matrix as:


0 0···0 1 1···1

 1
0


Bp = (Up |Vp ) =  .

.
.
 .
I
Mp 
.
.
1
0

VII. S ECURITY OF THE ONE - TIME SIGNATURE SCHEME
A. General security assumptions on the decoding of quasicyclic codes and QDC codes
Assumption 1 The decoding of random quasi-cyclic codes
is a difﬁcult problem.
Comments on the assumption
The class of quasi-cyclic codes has been widely used in past
years since its introduction. Even though this class of codes
may seem weaker since there are more structured, in practice
no algorithm to solve this problem do signiﬁcantly better than
general algorithm. Recently this problem has been studied in
[3] and no real gain was observed, moreover the supposed
gain of the order of matrix (n) is far from being reached. A
recent paper by Sendrier [11], gives an upper bound in the
square root of the size of the group order in the case of the
’Decoding one out many’ attack, which can be applied in our
case.

with Mp = Ip +Np if p = 4l+3 and Mp = Qp if p = 4l+1
for l an integer.
We denote the columns of Up and Vp as
(e∞ , e0 , e1 , · · · , ep−1 ), and we consider the three following
permutations on positions ei :
1) Shift S(b): for 0 ≤ b ≤ p − 1, e∞ .S(b) = e∞ and
ei .S(b) = ei+b (where the sum i + b is considered
modulo p.
2) The square transformation T (s2 ), 0 ≤ s ≤ p − 1 deﬁned
as: e∞ .T (s2 ) = e∞ and ei .S(b) = es2 .i with the product
s2 .i considered modulo p.

Assumption 2 The decoding of Quadratic Double Circulant
with parameters [2p + 2, p + 1] for p a prime, is difﬁcult for
decoding more than 3log2 (p) errors.

3) The negative inverse transformation N : e∞ .N = e0 ,
e0 .N = e∞ .N and ei .N = e−1/i , where the inverse is
taken modulo p.
It is well known that these three transformations generate
the group P SL2 (p) of order (p−1)p(p+1) (see for instance
2
[9](p.491)).
Proposition 4 ([6], [9]): For any p an odd prime:
1) The permutations S(b) and T (s2 ) commute with Up and
Vp .
2) Moreover:
(Up |Vq )N = L(Up |Vp ),

Comments on the assumption
If one puts aside the two extension columns, these codes
can be seen as a particular case of quasi-cyclic codes. In fact
they are related to quadratic residue codes over GF(4) (see
[9](p.490)), as their binary images. Now, quadratic residue
codes have been studied for more than 50 years and no better
algorithm is known than decoding them as cyclic codes. Now
if one considers a random distribution of the zeros of the cyclic
code over GF (4) one easily obtains that the average maximum
size of a sequence of zeros of the cyclic code is of order
2log2 (p) since roughly any position has probability 1/2 to be
a zero (and since the rate of the code is 1/2). So that eventually
we do not know how to decode more than 3log2 (p) errors in
general for these codes. Beyond that number of errors (and
probably below this bound) we do not know how to decode
these codes in another way than for random codes.

with L the (p + 1) × (p + 1) square matrix depending
on p, with rows (L∞ , L0 , · · · , Lq−1 ) deﬁned as:
• if p = 4l − 1: L∞ = e∞ , L0 = e0 + e∞ and if i is
quadratic residue: Li = e∞ + e0 + e−1/i and if j is not
quadratic residue: Lj = e0 + e−1/j ,
• if p = 4l + 1: L∞ = e∞ , L0 = e0 and if i is quadratic
residue: Li = e0 +e−1/i and if j is not quadratic residue:
Lj = e∞ + e0 + e−1/j .
In the following proposition we consider that N is acting
simultaneously on both part of Bp .
Proposition 5: The group P SL2 (p) is syndrome compatible with the matrix Bp .

B. General security of the scheme
There are two main cases to consider, the ﬁrst case is
the case when an attacker does not know any signature and
only has the public key of the scheme, the second case more
difﬁcult to consider is the case when an attacker knows a
signature.

4

a kind of lower bound on the security of the signature (when
only one signature is known).

1) A reduction proof for signature forgery when no signature is known: We have the following theorem:
Theorem 6: Consider a family of codes QC or QDC from
which one code C is used in the protocol. Suppose we choose
for parameters in the protocol w lower than the GilbertVarshamov bound of the code C and t a given value associated
to w as in the protocol. Then if an attacker is able to forge
a signature only from the knowledge of the public key (the
l syndromes) then he is able to decode the code C up to t
errors.
proof Suppose one is given a code C as in the theorem and a
given syndrome associated to a codeword x1 of weight t, then
it is possible to take l − 1 other random codewords x2 , ..., xl
with weight t. We then obtain a family of l syndromes as in
the protocol. If an attacker is able to forge a signature he is
able to construct a sum of permuted xi , since w is below the
GV bound of the code we know that there is a unique solution
to a given syndrome. All the xi are known except x1 therefore
it is possible to recover x1 from the signature which is their
permuted sum.
Now since since we assumed than decoding these codes for
errors with weight higher than 4log2 (p) is hard, it is hard to
forge a signature when only the public key is known.

VIII. C OMPLEXITY AND PARAMETERS
The complexity of the scheme is quadratic in the size of
k, the public key and the signature are linear in the size of
k. Practical parameters are chosen so that the three levels of
security are met: (1) an attacker must not be able to recover the
xi from the si , (2) an attacker must not be able to construct a
signature of weight w and (3) the knowledge of one signature
must not be enough to build a new signature. In general (1)
is easy to fullﬁll when (2) and (3) need a balance between
them. In the following we give parameters for a security of
280 according to the security deﬁned in the previous section
(in particular the attack of [11] can be applied to (1) and (2)).
To evaluate the security of the cost of the attack we used recent
results by Finiasz and Sendrier ([5]), and the analysis of the
previous section.
• Quasi-cyclic scheme: G=cyclic shifts of length k. Take
k = 6299, r = 3,l = 12, weight of xi = 263, upper weight of
signature w=2714, number of common bits : less than t1 =
263 − 35 = 228. public key=75kb, signature:18900b.
• Quadratic double circulant codes: G = P SL2 (p). Take
p = 3499, l = 5, weight t of xi = 338, upper weight w
of the signature=1393, number of common bits : less than
t1 = 338 − 56 = 282. Public key:17kb,signature size:7000b,
(signature size with Merkle tree: ∼ 28kb.)

2) Forgery with a known signature: In this case there is
no nice reduction as in the previous case meanwhile this is
not surprising since a one time signature scheme cannot be
repeated without giving too much information.
In that case the idea is the following. First since an attacker
knows the permutations used we consider in the following that
up to l permutations trials, a known signature is of the form
x1 plus a sum of permuted xi . If an attacker knows a signature
then he knows a large part of ’1’ positions of x1 (say). On
the other side there is always a part of the ’1’ positions of x1
which always vanish.
Let us compute precisely this number: consider l − 1
Bernoulli variables each taking the value 1 with probability
t
n . What is the probability that the sum modulo 2 of these
variables is equal to 0 ? It is not hard to prove that this
t
1+(1−2 n )l−1
probability is equal to q =
. Hence starting it
2
means that if all the l xi have weight t then the number of
’1’ of x1 in the permuted sum is qt and hence the number of
vanishing ’1’ positions of x1 in the signature is (1 − q)t.
Now the attacker has the following information, he wants
to recover x1 knowing that: qt ’1’ positions of x1 belong to
the support of the obtained signature of weight w and (1 − q)t
’1’ positions are unknowns. Suppose one starts from a [n, k]
code, then the parity check matrix H is a (n − k) × n matrix.
Consider now the matrix formed from the w columns of H
associated to non nul positions of the signature, these columns
form a code C1 [n − k, w], now if one multiplies the matrix H
by a dual matrix of this code C1 , it permits to make vanish the
w columns of 1, and the problem is now to ﬁnd the (1 − q)t
missing positions of x1 in a [n − w, k] code. Notice that an
attacker will always be missing a part of ’1’ of any xi , this
part can be computed (as we did) and this permits to obtain

ACKNOWLEDGMENT
The ﬁrst author thanks JP Tillich for helpful comments.
R EFERENCES
[1] Paulo S. L. M. Barreto, Rafael Misoczki, Marcos A. Simplcio Jr.: Onetime signature scheme from syndrome decoding over generic errorcorrecting codes. J. Systems and Software 84(2): 198-204 (2011)
[2] Pierre-Louis Cayrel, Ayoub Otmani, Damien Vergnaud: On
Kabatianskii-Krouk-Smeets Signatures. WAIFI 2007: 237-251
[3] Christophe Chabot, Matthieu Legeay, Using automorphisms group for
decoding 12th internaional workshop on Algebraic and Combinatorial
Coding Theory (ACCT 2010).
[4] N. Courtois, M. Finiasz and N. Sendrier : How to achieve a Mc-Eliecebased digital signature scheme. Proceedings of ASIACRYPT’01, LNCS
vol 2248, pp. 157-174, 2001.
[5] M. Finiasz and N. Sendrier : Security Bounds for the Design of Codebased Cryptosystems. Proceedings of ASIACRYPT’09.
[6] P. Gaborit, Quadratic Double Circulant Codes over Fields. J. Comb.
Theory, Ser. A 97(1): 85-107 (2002)
[7] G. Kabatianskii, E. Krouk and , B. J. M. Smeets, A Digital Signature
Scheme Based on Random Error-Correcting Codes. IMA Int. Conf.
1997: 161-167
[8] A. May and A. Meurer and E. Thomae, Decoding Random Linear Codes
in O(20.054n ), ASIACRYPT 2011.
[9] F.J. Mc Williams and N.J.A. Sloane : The Theory of Error-correcting
Codes. North-Holland, 1977.
[10] Ayoub Otmani, Jean-Pierre Tillich: An Efﬁcient Attack on All Concrete
KKS Proposals. PQCrypto 2011: 98-116
[11] Nicolas Sendrier: Decoding One Out of Many. PQCrypto 2011: 51-67
[12] J. Stern : A new identiﬁcation scheme based on syndrome decoding.
Proceedings of CRYPTO’93, LNCS vol 773, pp. 13-21, 1994.

5

