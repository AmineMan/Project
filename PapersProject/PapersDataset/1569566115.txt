Title:          isit_v4
Subject:        
Keywords:       
Author:         Jing Yang
Creator:        Preview
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Fri May 18 19:38:33 2012
ModDate:        Tue Jun 19 12:56:21 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      404095 bytes
Optimized:      no
PDF version:    1.7
ISIT'2012 1569566115

Passive Learning of the Interference Graph of a
Wireless Network
Jing Yang, Stark C. Draper, and Robert Nowak
Department of Electrical and Computer Engineering
University of Wisconsin, Madison, WI 53706
Email: {yangjing, sdraper, nowak}@ece.wisc.edu
making active measurements across a large network could
limit their practicality. In addition, network topology can
change over time, meaning that using active probing methods
periodically to identify interference can place a signiﬁcant
burden on the network.

Abstract—A key challenge in wireless networking is the management of interference between transmissions. Identifying which
transmitters interfere with each other is crucial. Complicating
this task is the fact that the topology of wireless networks can
change from time to time, and so the identiﬁcation process may
need to be carried out on a regular basis. Injecting active probing
trafﬁc to assess interference can lead to unacceptable overhead,
and so this paper focuses on interference estimation based on
passive trafﬁc monitoring in networks that use the CSMA/CA
(Carrier Sense Multiple Access/Collision Avoidance) protocol. A
graph is used to represent the interference in the network, where
the nodes represent transmitters and edges represent interference
between pairs of transmitters. We investigate the problem of
learning the graph structure based on passive observations of
network trafﬁc transmission patterns and information about
successes or failures in transmissions. Previous work has focused
on algorithms and validations in small testbed networks. This
paper focuses on the scaling behavior of such methods which is
unaddressed in prior work. In particular we establish bounds
on the minimum observation period required to identify the
interference graph reliably. The main results are expressed in
terms of the total number of nodes n and the maximum number
of interfering transmitters per node (i.e., maximum node degree)
d. The effects of hidden terminal interference (i.e., interference
not detectable via carrier sensing) on the observation time
requirement are also quantiﬁed. We show that it is necessary and
sufﬁcient that the observation period grows like d2 log n, and we
propose a practical algorithm that reliably identiﬁes the graph
from this length of observation. We conclude that the observation
requirements scale quite mildly with network size, and that the
networks with sparse interference patterns can be more rapidly
identiﬁed than those with dense interference patterns.

Inspired by two passive WLAN (wireless local area network) monitoring approaches Jigsaw [3], [4] and WIT [5], in
[6], [7], a different approach to online interference estimation
is explored, termed Passive Interference Estimation (PIE) algorithm. Rather than introducing active probe trafﬁc, interference
estimates are completely based on passively collected data.
PIE estimates the actual interference in the network in realtime in an on-line fashion. All interference estimates are
obtained by simply observing ongoing trafﬁc and feedback
information at the different transmitters. Experimental studies
in small testbeds show that PIE is quite promising, but very
little is understood about how the method scales-up to large
complex networks, which is the focus of this paper.
The main contribution of this paper is to quantify the
required observation time as a function of network size
and topological connectivity. This provides insight into the
time-scales over which network interference patterns can be
identiﬁed, and potentially tracked, in a dynamically changing
wireless network.
We formulate passive interference estimation as a statistical
learning problem. Given an arbitrary WLAN that consists
of n access points (APs), our goal is to recover a conﬂict
graph among these APs with as few measurements as possible.
Denoting the network size (number of APs/nodes) by n, and
the maximum number of interfering APs per AP by d, we
show that to identify the network one must collect a number
of measurements proportional to d2 log n. This is quite mild
dependence on network size and indicates that interference
graph inference is scalable to large networks. The dependence
on d tells us that sparser patterns of interference are easier to
identify than denser patterns. We also quantify the effects of
hidden terminal interference (i.e., interference not detectable
via carrier sensing), which introduce an additional factor to the
observation time requirement. We give lower bounds showing
that this time-complexity cannot be improved by any possible
scheme, and we give simple and easy-to-implement algorithms
that achieve the bound (up to constants).

I. I NTRODUCTION
Due to the broadcast nature of wireless communications,
simultaneous transmissions in the same frequency band and
time slot may interfere with each other, thereby limiting
system throughput. Interference estimation is thus an essential
part of wireless network operation. Knowledge of interference
among nodes is an important input in many wireless network
conﬁguration tasks, such as channel assignments, transmit
power control, and scheduling. A number of recent efforts
have made signiﬁcant progress towards the goal of identifying
in real time the interference in the network. Some of the
recent approaches (e.g., Interference maps [1] and Microprobing [2]) inject active trafﬁc into the network to infer
occurrences of interference. While such approaches can be
quite accurate in determining interference, the overhead of

1

II. P ROBLEM F ORMULATION
A. Interference Graph
We use a graph G = (V, E) to represent the interference
among APs in the network, where the node set V represents
the APs, and edge set E represents the pairwise interference
level among APs. An example of such of graph is depicted in
Figure 1.
Because of the CSMA/CA protocol, we divide E into two
subsets: direct interference ED and hidden interference EH . Direct interference occurs when two APs are within each other’s
carrier sensing range. Since they can hear each other, under
the protocol they avoid simultaneous transmissions. Under
the assumption that the carrier sensing range is the same for
every AP, the directly interfering edges in ED are undirected.
However, CSMA/CA cannot resolve all of the collisions in
the network. If two APs cannot hear each other, and the
transmission from one AP is corrupted at certain clients by
the other AP, this type of interference is referred as hidden
interference. The edges in EH represent this type of hidden
interference. Such interferences may be asymmetric and so
the edges in EH are directed. Additionally, it is possible to
associate a probability or weight with each interference edge,
reﬂecting the level (severity or persistence) of the interference.
Our main interest is to identify the presence of interference,
since once this is accomplished it is straightforward to estimate
the level of the interference. The sparsity of the interference
graph is parameterized by d, the maximum node degree. This
parameter is a bound on the number of nodes that interfere
with any node.

Fig. 1. System model with n APs. The edges connecting transmitters represent the interference between them. Solid line represents direct interference,
and dotted lines represent hidden interference.

AP does not receive the ACK after a period of time, it assumes
that the packet is lost. Thus, the ACK/NACK mechanism
enables the APs to detect collisions whenever they occur.
C. Inference Problem and Algorithm
Our objective is to determine all of the edges in the interference graph G based on passive observations. We assume that
there exist a central controller that collects the transmission
status of all APs, and the transmission success information
(ACKs) fed back to them during a period of time. The
collected information during this observation period is the
dataset for us to infer the interference graph.
Based on the CSMA/CA protocol, if two APs are within
each other’s carrier sensing range, they don’t transmit simultaneously. Therefore, for any pair of APs that are transmitting
simultaneously at any time instance during the observation
period, the transmission status indicates that they cannot hear
each other, i.e., there is no direct interference between them.
In the interference graph, all of the corresponding edges in
ED can thus be removed. When the observation period is
sufﬁciently long, the correct direct interference edge set ED
can be successfully recovered.
The collected ACK information can be used to identify the
hidden interference edge set EH . Once a collision is detected
at an AP, it implies that one of the APs transmitting at the
same time should be the interferer causing the collision. The
subset of APs transmitting at that time instance becomes a
candidate set of hidden interferes for that AP. When multiple
collisions are detected for an AP, multiple candidate subsets
are formed, one for each collision. Then, the true set of hidden
interferers for that AP intersects with all of those candidate
subsets. When the observation period is sufﬁciently long, the
minimum hitting set which intersects with all of the candidate
subsets is the true hidden interferer set. Therefore, edge set
EH can be recovered.
Our algorithm adopts the idea of PIE proposed in [6],
[7]. For the direct interference, both approaches rely on
simultaneous transmissions to infer the interference. For the
hidden interference estimation, PIE uses a correlation based
approach. Our approach is different, and attains more accurate
results theoretically.

B. CSMA/CA protocol and ACK/NACK mechanism
The system is assumed to use the CSMA/CA protocol at the
medium control layer [8]. When the transmitter has a packet
to send, it listens to the desired channel. If the channel is
idle, it sends the packet. If the channel is busy, i.e., there
exists an active transmitter within the listener’s carrier sensing
range, the transmitter holds its transmission until the current
transmission ends. The following backoff mechanism is then
invoked. The transmitter randomly chooses an integer number,
τ , uniformly in the range [0, W − 1], and waits for τ unit
slots. W is a positive integer and represent the current backoff
window size. If the channel is idle at the end of the node’s
backoff period, the node transmits its packet; otherwise it
repeats the process until it gets a free channel. Statistically, the
random backoff mechanism allows every node equal access to
the medium.
In some communication situations, even though two APs
cannot hear each other, when they transmit simultaneously,
a collision happens. Such failures occur because one or both
clients communicating with them lie within the other AP’s
transmission range. This is the so-called “hidden terminal”
problem. We assume the ACK/NACK mechanism is adopted
in the system. Speciﬁcally, we assume that whenever an AP
successfully delivers a packet to its destination, an ACK will
be fed back to acknowledge the successful transmission. If the

D. Statistical Model
For the simplicity of analysis, we partition the time axis into
sessions. We assume that the APs are synchronized, so that

2

they share the same sessions. At the beginning of each session,
APs with trafﬁc contend for the channel. In the following
sections, we use a binary variable Qi (t) to indicate whether
AP i has any trafﬁc to send at a given session t. AP i contends
for the channel in session t if and only if Qi (t) = 1.
We let a graph GD = (V, ED ) represent the carrier sensing
relationships among the APs. Speciﬁcally, if AP i and AP j
are within each other’s carrier sensing range, there is an edge
between i, j, denoted as (i, j). We deﬁne Ni to be the set of
neighbors of AP i in GD = (V, ED ), and let di = |Ni |.
Deﬁne Ti (t) as the backoff time of AP i at the beginning
of session t. We denote Xi (t) as the activation state of node
i , where Xi (t) = 1 means that node i wins the channel in
session t, and transmits in that session. Xi (t) = 0 means that
node i is not active. Thus, Xi (t) = 1 if and only if Qi (t) = 1
and Xj (t) = 0 for all j ∈ Ni with Tj (t) < Ti (t).
Deﬁne Yi (t) ∈ {0, 1, ∅} to be the feedback information
information received at AP i at the end of session t. Yi (t) = 1
means that an ACK is received at AP i, indicating that the
transmission in session t is successful; Yi (t) = 0 means that
transmission failed, caused by some simultaneous transmissions; Yi (t) = ∅ means that node i does not transmit in that
session, i.e., Xi (t) = 0.
We let a graph GH = (V, EH ) represent the hidden
interference among the APs that cannot hear each other. Since
such interference usually depends on the locations of clients
when the transmission takes place, and thus is not symmetric.
Therefore, the edges are directed, e.g., i → j. We deﬁne pij as
the probability that, when Xi (t) = Xj (t) = 1, AP i interferes
with AP j, causing transmission failure of AP j. Deﬁne Sj
to be the hidden interferer set for AP j, the set of APs with
pij > 0. We let sj = |Sj |. We point out that in general

the same backoff time. This is a valid assumption when W
is a large integer. The ﬁrst two assumptions guarantee that
the joint distribution of Xi (t)s and Yi (t)s is independent and
identical across t. Therefore, in our analysis here afterwards,
we ignore the time index and focus on the distribution of Xi s
and Yi s in one observation.
III. M AIN R ESULTS
Under assumptions of the statistical model, we break the
overall problem into four subproblems. The ﬁrst problem is
to upper bound the number of observations required to infer
the directed interference edge set ED . Only the transmission
patterns of APs are necessary for this inference. The second
problem is to provide a lower bound on the number of
observations required to correctly infer ED . In contrast to
ED , inferring the hidden interference edge set EH requires
feedback information about transmission success as well as
the transmission patterns. The third and fourth subproblems
are to provide upper bound and lower bound on the number
of observations required to infer EH .
A. An Upper Bound for Inference of GD = (V, ED )

In this section, we aim to estimate GD = (V, ED ) based on a
sequence of transmission patterns, e.g., X(1), X(2), . . ., X(k).
Due to the use of the CSMA/CA protocol and the continuous
backoff time of Assumption 2), any pair of APs active in the
same slot must not be able to hear each other. Thus between
any two of APs active in the same slot, there is no edge in
GD = (V, ED ). In other words, given an observation X, for
any i, j with Xi = Xj = 1, we know that (i, j) ∈ ED .
/
Based on this observation, we propose the following algorithm. Start with a fully connected graph connecting the n
APs with n(n − 1)/2 edges. For each transmission pattern
X observed, remove all edges (i, j) s.t. Xi = Xj = 1.
Our main question is how many observations are required in
order to eliminate all edges not in ED , thereby recovering the
underlying interference graph GD . Furthermore, how close to
optimal is this algorithm. Let k be the number of transmission
patterns observed. The following theorem provides an upper
bound on the required k to recover GD with high probability.

pij = P(Yj (t) = 0|Xi (t) = 1, Xj (t) = 1),
i.e., pij is not equal to the probability that a collision occur
at AP j when both APs i and j are transmitting. This is
because the collision at AP j may be caused by an active
transmitter other than i, and transmitter i may just happen to
be transmitting at the same time.
Assumptions 1 We make the following assumptions:
1) Qi (t)s are i.i.d. Bernoulli random variables with common parameter p, 0 < p < 1, i.e., P(Qi (t) = 1) = p
for all i, t.
2) Ti (t)s are continuous i.i.d. random variables uniformly
distributed over [0, W ].
3) pij s are lower bounded by pmin .
4) di s are upper bounded by the integer d − 1.
5) sj s are upper bounded by the integer s.

Theorem 1 Let δ > 0, and let
k≥

1
− log (1 − p2 /d2 )

log

n
1
+ log
2
δ

(1)

then, with probability at least 1 − δ, the estimated interference
ˆ
ˆ
graph GD = (V, ED ) is equal to GD after k observations.
The proof of this theorem is provided in Appendix A. The
idea is ﬁrst to lower bound the probability that two nonadjacent
APs i, j never transmit simultaneously in k observations. Then,
by taking a union bound, an upper bound on the required k is
obtained.
Remark: We note that in the theorem above, the upper
bound k = O(d2 log n) when p2 /d2 → 0. Intuitively, this
order is the best we hope for in terms of p and d through
passive observations. This is because if two non-interfering

The ﬁrst assumption ignores the time dependency and
coupling effect of the trafﬁc queue status of APs. It is a good
approximation of trafﬁc for a system operating in light trafﬁc
regime. For the second assumption, we assume Ti (t)s are continuous instead of discrete quantities in CSMA/CA protocol to
ensure that two adjacent nodes in GD = (V, ED ) don’t have

3

APs never transmit simultaneously, their behavior is the same
as if they were within each other’s carrier sensing range. Thus,
we cannot determine whether there is an edge between them
or not. Since each transmitter competes with its neighbors, the
probability that it gets the channel is of the order of 1/d. So,
roughly speaking, it takes about d2 snapshots to observe two
non-interfering APs active at the same time. Since there are
about n2 such pairs in the network, a union bound gives us
the factor log n.

hidden interferers. Thus, although not the case, it transmits
with high probability when the collision caused by the true
hidden interferer occurs. This implies that correlation based
approach may not accurately distinguish true interferers from
such non-interferers. In the following, we propose a minimum
hitting-set-based approach to infer the hidden interference
graph GH = (V, EH ).
Deﬁne Kj as the time index set {t} of the observations with
t
Yj (t) = 0. Then, for every index t ∈ Kj , we deﬁne Sj as the
set of transmitters with Xi (t) = 1 in X(t).

B. A Minimax Lower Bound for Inference of GD = (V, ED )

We provide a minimax lower bound on the number of observations needed to recover the underlying direct interference
graph GD = (V, ED ). Denote the estimated direct interference
ˆ
ˆ
graph as GD = (V, ED ).
√

Theorem 2 If d − 1 ≤ 3n−
of observations satisﬁes k ≤

n2 +16n
, n ≥ 3, and
4
α(d−1)2
log n, then,
1
(2+ 1−p )

ˆ
min max P(GD = GD ; GD ) ≥
ˆ
GD

GD

√
n
√
1+ n

Deﬁnition 1 Given a collection of subsets of some alphabet,
a set which intersects all subsets in the collection in at least
one element is called a hitting set. A “minimum” hitting set
is a hitting set of the smallest size.

the number

1 − 2α −

Lemma 1 As k → ∞, the hidden interferer set Sj for
transmitter j is the unique minimum hitting set such that
t
Sj ∩ Sj = ∅ for every t ∈ Kj .

2α
log n

Therefore, given k observations, in order to recover GH =
(V, EH ), we look for the minimum hitting set Sj for every
j. The following theorem provides an upper bound on the
minimum number of observations required to correctly identify
the minimum hitting set Sj for every AP j ∈ V. Once the
ˆ
estimated minimum hitting set Sj is obtained, the estimated
ˆ
hidden interference graph GH can be constructed by adding a
ˆ
directed edge from any AP in Sj to AP j.

for 0 < α < 1/8.
The proof of this theorem, and the proofs of the following
theorems, can be found in [9]. The outline of our proof is as
follows: We construct a class of M graphs which is a subset
of maximum-degree d graphs. We construct the graphs in such
a way that they are very similar to each other. Thus it is hard
to distinguish between them. Next, we reduce the original
estimation problem to an M -ary hypothesis test. We lower
bound the probability of error for this hypothesis test based
on the Kullback-Leibler divergence between transmission pattern distributions under a pair of graphs. We prove that for
this special collection of graphs, the number of observations
required to detect the correct underlying conﬂict graph, is at
least of the order Ω(d2 log n). Since the M -ary hypothesis test
is easier than the original problem, this is also a lower bound
for the original estimation problem.
Remark: We note that the lower bound is of the order
Ω(d2 log n). It is in the same order of the upper bound
in Theorem 1. Therefore, the estimation method based on
pairwise comparison is optimal.

Theorem 3 Let δ > 0, and let
k≥

1
− log 1 −

p2 (1−p)s pmin
d2

log(ns) + log

1
δ

ˆ
Then, with probability at least 1 − δ, GH equals GH .
For every AP j, we ﬁrst upper bound the probability that the
minimum hitting set obtained after k observations is not equal
to the true minimum hitting set. This is equal to the probability
that there exists at least one AP i in Sj that is not included
ˆ
in Sj . By taking the union bound across all possible i and j
we obtain an upper bound on k.
In general, the minimum hitting set problem is NP-hard.
However, under the assumption that s
n, the problem can
be solved in polynomial time.
One straightforward approach is to test every subset of
nonadjacent APs in GD to determine whether it is a hitting set
t
of the sets {Sj }s. We start from the subset with one element,
and gradually increase the size of the testing subset by one,
until a hitting set is achieved. Since this is a smallest size we
t
can achieve, it is a minimum hitting set for the given {Sj }s.
For the worst case, the number of subsets we need to test
is upper bounded by O(ns ) [10].

C. An Upper Bound for Inference of GH = (V, EH )

In the previous subsection, we fully characterize the direct
interference in the interference graph. In this section, we aim
to infer the hidden interference graph GH = (V, EH ) through
observations of X and Y.
We assume that there exists sj hidden interferers for transmitter, 0 < sj ≤ s. Because of this, when a collision happens
to AP j, it may have been caused by any of the active APs in
Sj . In other words, there may not be a unique AP consistently
showing up when Yj = 0. We also note that an AP showing up
frequently when Yj = 1 may not be a hidden interferer. The
cause can be that the transmission status of an AP is highly
positively correlated (because of CSMA/CA) with one or more

D. A Minimax Lower Bound for Inference of GH = (V, EH )

In this subsection, we develop a lower bound on the number
of observations required to recover the underlying hidden

4

interference graph GH = (V, EH ) with high probability based
on passive observations.
Theorem 4 If d ≤ c1 n, s − 1 ≤ c2 n,
the number of observations satisﬁes
k≤−

and there are (|Nij | + 2)! orderings of their backoff times.
|+2
Among these ranks, |Nij|+1 · |Ni |! · |Nj\i |! ranks correspond
|Ni
to Ti < TNi , Tj < TNj\i . Such rank can be obtained in this
way: suppose these |Nij | + 2 nodes are ordered according to
their backoff times. Then, node i and its neighbors take |Ni |+1
|+2
positions of them. There are |Nij|+1 such combinations in
|Ni
total. Since Ti < TNi , node i takes the ﬁrst position out of the
chosen |Ni |+1 positions, and the rest |Ni | positions are for its
neighbors. This results in |Ni |! ranks for each ﬁxed position
list. Node j and nodes in Nj\i take the rest of the positions,
and node j takes the ﬁrst. This gives us the factor |Nj\i |!.
When Ti < TNi , and Qi = 1, based on the protocol, node i
gets the channel thus Xi = 1. At the same time, transmission
from all nodes in Ni are suppressed. Therefore, for node j,
if Tj < TNj\i and Qj = 1, node j also gets a channel. Thus,
we have Xi = Xj = 1. Since other scenarios result in Xi =
Xj = 1, we have the following

2c1 + c2 < 1, and

log(2c1 ( 2c11 2 − 1)n)
+c
1−(1−p)d
d

2

(1 − p)s−1 log(1 − pmin )

then
ˆ
min max P(GH = GH ; G)
ˆ
GH

≥

G

2c1 ( 2c11 2 − 1)n
+c
1+

2c1 ( 2c11 2
+c

− 1)n

1 −2α−

2α
log(2c1 ( 2c11 2 −1)n)
+c

for 0 < α < 1/8.
We follow the same approach in the proof of Theorem 2. We
reduce the original problem to an M -ary hypothesis test and
show that asymptotically the lower bound is of the same order
as the upper bound.
Remarks: Since the distribution of Y depends on the
underlying direct interference graph as well as on the hidden interference graph, the lower bound is over all possible
interference graphs G. As d increases, the lower bound in
d2
Theorem 4 is of order Ω − log(1−pmin )(1−p)s−1 log n . Since
log(1 − pmin ) can be approximated as pmin when pmin is
small, the lower bound is of the same order as the upper bound
provided in Theorem 3. Therefore, the bounds are tight and
our algorithm is optimal.

P(Xi = 1, Xj = 1)
p2
,
d2
P(edge (i, j) is not removed with one observation X)
p2
= 1 − P(Xi = 1, Xj = 1) ≤ 1 − 2 .
d
Deﬁne Aij as the event that edge (i, j) is not removed after k
observations. Then, the probability that, after k observations,
the graph cannot be identiﬁed successfully is
≥ P Ti < TNi , Tj < TNj\i , Qi > 0, Qj > 0 ≥

ˆ
P(GD = GD ) = P(∪(i,j)∈ED Aij ) ≤
/

Consider any two nonadjacent nodes i, j in GD = (V, ED ).
c
Let Nij = Ni ∪ Nj , and Ni\j = Ni ∩ Nj .
Under the CSMA/CA protocol, transmitter i only contends
for the channel when Qi = 1. For ease of analysis, in this
proof, we assume that every transmitter competes for the
channel at the beginning of each session no matter whether
or not Qi = 1. Then, if transmitter i gets the channel,
it starts transmit if Qi = 1; otherwise, even it gets the
opportunity to transmit, it keeps silent. The latter event leaves
the opportunity open for one of its neighbors with a longer
backoff time to transmit. Since this does not change the
outcome of transmission pattern given that the backoff times
of those transmitters with nonempty queues are ﬁxed, the
statistics of X := (X1 , X2 , . . . , Xn ) stay the same under this
interpretation.
Deﬁne TNi as the minimum backoff time of the nodes in
the set Ni . Then,
P Ti < TNi , Tj < TNj\i =

· |Ni |! · |Nj\i |!

(|Nij | + 2)!

≥

1−

p2
d2

k

.

The inequality follows from the fact that the number of
nonadjacent pairs in GD = (V, ED ) is upper bounded by n .
2
Under the assumption that d
n, this is a good approximation
for the nonadjacent pairs in GD .

A PPENDIX A
P ROOF OF T HEOREM 1

|Nij |+2
|Ni |+1

n
2

R EFERENCES
[1] D. Niculescu, “Interference map for 802.11 networks,” Proceedings of
the 7th ACM SIGCOMM conference on Internet measurement, 2007.
[2] N. Ahmed and S. K. Smarta, “A self-managing architecture for thin
access points,” ACM CoNEXT, 2006.
[3] Y.-C. Cheng, J. Bellardo, P. Benko, A. C. Snoeren, G. M. Voelker, and
S. Savage, “Jigsaw: solving the puzzle of enterprise 802.11 analysis,”
ACM SIGCOMM, 2006.
[4] Y.-C. Cheng, M. Afanasyev, P. Verkaik, P. Benko, J. Chiang, A. C. Snoeren, S. Savage, and G. M. Voelker, “Automating cross-layer diagnosis
of enterprise wireless networks,” ACM SIGCOMM, 2007.
[5] R. Mahajan, M. Rodrig, D. Wetherall, and J. Zahorjan, “Analyzing the
mac-level behavior of wireless networks in the wild,” ACM SIGCOMM,
2006.
[6] V. V. Shrivastava, “Optimizing enterprise wireless networks through
centralization,” Ph.D. dissertation, University of Wisconsin–Madison,
2010.
[7] V. Shrivastava, S. Rayanchu, S. Banerjee, and K. Pagaginnaki, “PIE in
the sky: Online passive interference estimation for enterprise wlans,”
NSDI, 2011.
[8] IEEE 802.11 standard, http://www.ieee802.org/11/.
[9] J. Yang, S. Draper, and R. Nowak, “Passive interference graph learning
in a wireless network,” to be submitted to IEEE Transactions on
Information Theory, 2012.
[10] M. Kalisch and P. B¨ uhlmann, “Estimating high-dimensional directed
u
acyclic graphs with the pc-algorithm,” Journal of Machine Learning
Research, March 2007.

1
d2

The probability is obtained in this way: Considering nodes
i, j and their neighbors, there are |Nij | + 2 nodes in total,

5

