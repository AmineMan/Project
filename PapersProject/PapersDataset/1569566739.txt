Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Fri May 18 14:31:52 2012
ModDate:        Tue Jun 19 12:54:33 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      426878 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569566739

A Graphical Revisit of the Krawtchouk Transform
Yongyi Mao

Terence H. Chan

School of Electrical Engineering and Computer Science
University of Ottawa, Canada
Email: yymao@site.uottawa.ca

Institute of Telecommunications Research
University of South Australia, Australia
Email: terence.chan@unisa.edu.au.

A. Normal Factor Graphs

Abstract—Exploiting the recent framework of normal factor
graphs, this paper presents a transparent exposition of the
Krawtchouk transform and its relationship to the Fourier transform and the MacWilliams identities. Such treatment of the
subject is believed to be more accessible to wider audience of
coding theory.

Following [6] and [7], a normal graph factor graph (NFG)
is denoted, by a graph (V, E), similar to a normal graph [10],
where V is the set of vertices and E is the set of edges. In fact,
(V, E) should be more rigorously understood as a hypergraph
since an edge in E may only be incident on one of the vertices
in V . In this case, the edge is called a “dangling” edge. We
denote by E int the set of all regular or “internal” edges and by
E ext the set of all dangling or “external” edges. Associated
with each edge e ∈ E, there is a variable xe taking values
from some alphabet set Ae . For notational simplicity, we may
suppress the name of the variable and simply label the edge
with the alphabet set Ae . For any subset E ⊆ E, we use
xE to denote the set of variables {xe : e ∈ E } and AE
to denote the cartesian product
Ae . Associated with each

I. I NTRODUCTION
The Krawtchouk transform [1]–[3] is a fundamental concept
in classical algebraic coding theory. Transforming the weight
distribution of a code to its dual domain, the Krawtchouk
transform is intimately related to the MacWilliams identity
and the Fourier transform.
The importance of the Krawtchouk transform is often
witnessed by the linear programming bounds of codes, ﬁrst
established by Delsarte in his famous work [4]. These bounds,
derived from the Krawtchouk transform, dictates that the
distance distribution a code must satisfy a set of linear
inequalities. One well-known example of linear programming
bounds is the MRRW bound [5], which is among the best
asymptotic upper bounds for binary codes.
Despite its importance, the Krawtchouk transform appears
not as widely accessible as it deserves to be. This is perhaps in
part due to the fact that the classical expositions of this subject
are often somewhat obscure, difﬁcult for general audience.
Recently, using the modern tool of normal factor graphs [6],
Forney [7] has revisited the classical concept of MacWillams
identities [3], [8], [9] and presented a transparent exposition.
In a spirit similar to that of [7], in this paper we present
a graphical approach, also based on the framework of normal
factor graphs, to the understanding of the Krawtchouk transform and its relationship to the MacWilliams identity and the
Fourier transform. We believe that our approach will make this
classical subject much more accessible to wider audience in
coding theory community.
Most identities in this paper can be better appreciated
graphically. Due to length constraints, we are however unable
to use excessive ﬁgures. Also for the same reason, we choose
to omit most proofs. This leaves us some space to entertain
some more interesting discussion, particularly the graphical
proof of the main theorem (Theorem 1).

e∈E

vertex v ∈ V , there is a function1 fv (referred to as a local
function) on AE(v) , where E(v) is the set of all edges incident
on v.
x1

x3

f1

x5

x4
x2

f2

x6

x7

f3
x8

f4
x9

f5
Fig. 1.

A normal factor graph (NFG) G.

Globally, an NFG G gives rise to a function involving
only the external variables xE ext . This function, denoted by
ZG (xE ext ), is called the exterior function or partition function
realized by G and is equal to the product of all the local
functions {fv : v ∈ V } with all the internal variables xE int
summed over. In other words,
ZG (xE ext ) :=

II. P RELIMINARIES

fv (xE(v) ).
xE int v∈V

We ﬁrst present a concise review of related concepts and
derive some preliminary results.

1 In

1

this paper, all functions are complex-valued.

(1)

An example of an NFG is given in Figure 1, realizing
exterior function
ZG (x1 , x2 ) =

x. This makes G = G. We will denote x(χ) and χ(x) both by
bi-variate function ϕ(x, χ) deﬁned on G × G. Not as general
as other results concerning character groups, the statement that
G is isomorphic to G holds true when G is ﬁnite.
Throughout the paper, index set I is the set {1, 2, . . . , n} for
some positive integer n, and each element i ∈ I is associated
with a ﬁnite abelian group Gi . Then the character group GI of
GI (deﬁned as the cartesian product
Gi ) is
Gi , where

f1 (x1 , x3 , x4 )f2 (x3 , x5 , x6 )
x3 ,...,x9

f3 (x2 , x4 , x5 , x7 , x8 )f4 (x6 , x7 , x9 )f5 (x8 , x9 )
:= f1 (x1 , x3 , x4 ), f2 (x3 , x5 , x6 ),
f3 (x2 , x4 , x5 , x7 , x8 ), f4 (x6 , x7 , x9 )

i∈I

:= f1 , f2 , f3 , f4 ,
ϕ(xI , χI ) =

where the latter two , . . . , notations are used as the short
hands for the “sum-of-products” form encoded by the NFG.
When two NFGs realize the same exterior function, we say
they are “equal” and may equate them by equality sign “=”. In
addition, we may replace an arbitrary component of an NFG
with another NFG that is equal to this component. This is
more formally stated in the following lemma.
Lemma 1: Let H be a portion of an NFG G. If there is
another NFG H that is equal to H, replacing H with H does
not change ZG .
For example, we may have

ˆ
f (χ) := f (x), ϕ(x, χ) .
1
ˇ
Let ϕ∗ (x, χ) := |G| ϕ(−x, χ). Then the function f on G
deﬁned by
ˇ
f (χ) := f (x), ϕ∗ (x, χ)

is in fact the inverse Fourier transform of f .
Equation (2) implies that the Fourier transform of a multivariate function over GI is separable.
For any code C ⊆ GI , function δC deﬁned on GI denotes
the indicator function of C, namely, δC (xI ) := [xI ∈ C].
If C is a group code, then its dual code C ⊥ , a subgroup
of GI , always exists. It is well known (see, e.g., [11]) that
the indicator function of C and that of C ⊥ form a Fourier
transform pair, up to scale.
For any two functions f and g over a ﬁnite abelian group
G, their convolution f ∗ g is deﬁned as

f, g

···

g

=

(2)

for any xI ∈ GI and χI ∈ GI ,
ˆ
For any function f on G, its Fourier transform f , a function
on G, is deﬁned via the following sum-of-products form:

···

···

ϕ(xi , χi ),
i∈I

···

···

f

i∈I

.
Some of our notational conventions are given as follows.
Ciliated Edge – To be precise on the correspondence between
variables in the argument list of a local function and edges
incident on the corresponding NFG vertex, we sometimes
put a small solid circle on the edge corresponding to the
ﬁrst variable, and arrange the edges counter-clockwise in the
appearance order of their variables in the argument list.
Iverson’s Convention and Indicator Function – We will
use the Iverson’s convention [P ] to denote the evaluation of
a boolean proposition P , namely, [P ] = 1 if P is true and
[P ] = 0 otherwise. A {0, 1}-valued function will be called an
indicator function, and will be denoted by the symbol δ with
an appropriate subscript.

(f ∗ g)(x) = f (x ), [x + x = x], g(x )
for every x ∈ G. It can be veriﬁed that our deﬁnition
of convolution is consistent with the classical deﬁnition of
convolution (as that in system theory). A well-known duality
theorem, often known as the “convolution theorem”, says that
ˆˆ
¯
¯
f ∗ g = f g . Deﬁne f such that f (x) := f (−x) for every
x ∈ G. Then as a corollary of the convolution theorem, the
following lemma can be proved.
¯
Lemma 2: f ∗ f is non-negative.
We note that analogous to this result, it is well known in
signal/system theory that the Fourier transform of an autocorrelation function is the energy spectrum density, necessarily
non-negative.

B. Character Groups and the Fourier Transform
In this paper, the unit circle T on the complex plane is
regarded as a multiplicative group. All other abelian groups
will be written additively with the identity element denoted
by “0”.
For any ﬁnite abelian group G, a character χ of G is the
set of all homomorphisms mapping G to T . It is well known
that the set of all characters of G form an abelian group G,
called the character group of G. In fact, each group element
x ∈ G also serves as a character of G: For any χ ∈ G, the
image χ(x) of x under χ is also the image x(χ) of χ under

C. Weight Enumerator
Throughout the paper, whenever we speak of weight (or
resp. distance), we refer to Hamming weight (or resp. Hamming distance).
From this point on, we restrict all Gi ’s to be identically
some ﬁnite abelian group G. Let H be a function on G deﬁned
by
a, if x = 0;
H(x) :=
b, otherwise

2

III. T HE K RAWTCHOUK T RANSFORM

f
G

G

δM

A. Basics

δM

N1

Suppose that G has γ + 1 elements. Deﬁne a bi-variate
function κn,γ on Nn × Nn as follows:

N1

k

δ

(−1)j γ k−j

κn,γ (k, m) :=
Nn

Fig. 2.

j=0

The NFG realizing the weight distribution Uf

In the literature (see, e.g., [2]), the function is often viewed as
a polynomial in m and is called the Krawtchouk polynomial.
However, we prefer calling it the Krawtchouk function and will
treat it as the transform kernel that deﬁnes the Krawtchouk
transform: For every function f on Nn , the γ−Krawtchouk
transform (or simply, the Krawtchouk transform) of f is the
˜
function f on Nn deﬁned by

where we have no interest in the exact values of a and b but
rather treat them as indeterminates.
For any function f on GI , deﬁne
Wf [H] := f (xI ),

H(xi ) .

n−m
.
k−j

m
j

(3)
˜
f (k) := f (m), κn,γ (k, m) .

i∈I

and we call Wf [H], or simply denoted by Wf , the weight
enumerator of function f . Note that Wf can be viewed as
a polynomial in indeterminates a and b, and when f is the
indicator function δC of a code C, we write Wf as a WC .
Note that WC is indeed the classical deﬁnition of the weight
enumerator of code C.
As in Forney [7], Equation (3) is readily realized by
an NFG, and one may start from this point to derive the
MacWilliams identity, relating the weight enumerator of f to
that of the Fourier transform of f . For example, we present a
version of the MacWilliams identity in terms Wf :
ˇ
Wf [H] = Wf [H]
ˇ ˆ

It is straightforward to verify that all Krawtchouk transforms are invertible. Moreover, it is worth mentioning that
κn,γ (k, m) may be obtained as the coefﬁcients of polynomial
(1 + γz)n−m (1 − z)m , namely,
n

(1 + γz)n−m (1 − z)m =

κn,γ (k, m)z k
k=0

We are particularly interested in κ1,γ , which we call an
elementary Krawtchouk function or elementary Krawtchouk
transform (kernel). It is easy to check: κ1,γ (0, 0) =
κ1,γ (0, 1) = 1, κ1,γ (1, 0) = γ, and κ1,γ (1, 1) = −1. In
the special case when γ = 1, the elementary Krawtchouk
transform reduces to the Hadamard transform, or the Fourier
transform over F2 .
The following two lemmas appear fundamental in this development, one relating the elementary Krawtchouk transform
with the Fourier transform and the other relating an arbitrary
Krawtchouk transform with the elementary Krawtchouk transform. We will directly state the two lemmas graphically.
Lemma 4: The following two NFGs are equal:

(4)

To relate to subsequent development, we take a closer look
at function H.
For any positive integer n, let Nn = {0, 1, . . . , n}. Then
N1 = {0, 1}.
Let MG be a N1 -valued function on G, mapping the identity
of G to 0 and all other elements to 1. We will write MG as
M for simplicity, whenever the dependence of M on G could
be inferred from the context. Let δMG or simply δM be the
indicator function on G × N1 deﬁned by δM (x, m) = [m =
M (x)].
Let w be a function on N1 deﬁned as w(m) = a1−m bm , for
every m ∈ N1 , where again a and b are the indeterminates.
The following lemma is easy to verify.
Lemma 3: δM (x, m), w(m) = H(x).
This allows the realization of Wf by the following sum-ofproducts form, or its corresponding NFG:

G

δM

N1

N1

κ1,γ

=
G

ϕ

ˆ
G

N1

δM

Lemma 5: For any k ∈ Nn and mi ∈ N1 , i = 1, 2, . . . , n,
let

Wf =

f (xI ),

δM (xi , mi ),
i∈I

w(mi )

n

(5)
δ (k, m1 , m2 , ...mn ) := [k =

i∈I

mi ].
i=1

The reader may wish to draw the NFG representing the above
sum-of-products form.

Then the following two NFGs are equal:

3

n
·

N1

Corollary 1: The weight distributions of a Fourier transˆ
form pair f and f are related by

N1

Uf = (1 + γ)−n Uf
ˆ

δ

ˆ
Referring to the weight distribution of f as the dual weight
distribution of f , we arrive at the conclusion that the dual
weight distribution is the Krawtchouk transform of the primal
weight distribution, up to a scaling factor. We now present a
graphical proof to Theorem 1.
Proof: The LHS of (7) is realized by the NFG in Figure
2. Insert a dual pair of Fourier transformers as in Figure 3
(a). This does not change the exterior function. Group graph
vertices of Figure 3 (a) as is shown. Replace the top group
ˇ
by f and replace each block representing ϕ, δM by a block
representing δM , κ1,γ . This results in the NFG in Figure
3 (b). By Lemma 4, the exterior function stays the same.
Similarly invoking Lemma 5 on Figure 3 (b) gives rise to
Figure 3 (c) without changing the exterior function. In Figure
3 (c), identifying the dashed box as Uf completes the proof.
ˇ

Nn

κn,γ
Nn

=
n
N1

N1

κ1,γ

κ1,γ

N1

N1

δ

Theorem 1 may be viewed as a different and more explicit
form of the MacWilliams identity. In fact, it is possible to
recover the MacWilliams identity from this theorem by manipulating the graphs using the various identities we provided.
Due to space limitation, we will not elaborate on this aspect.

Nn

B. Weight Distribution and Its Dual
For any function f on GI , let function Uf on Nn be deﬁned
by

C. Distance Distribution and Its Dual
Uf (m) :=

f (xI ),

δM (xi , mi ), δ (m, m1 , m2 , . . . , mn ) .
i∈I

We refer to Uf as the weight distribution of f . The NFG
representing the above sum-of-products form is shown in
Figure 2.
Deﬁne function W on Nn by W (m) = an−m bm , where a
and b again are indeterminates. Then it follows for any m ∈
Nn , and any mi ∈ N1 , i = 1, . . . , n,
δ (m, m1 , . . . , mn ), W (m) = w(m1 ), . . . , w(mn )

(6)

Gluing the NFG realizing Uf with the NFG realizing W
in the (6), we can identify the resulting graph with the NFG
realizing Wf . That is
Lemma 6: Wf = Uf (m), W (m) .
In other words, the weight distribution is simply the coefﬁcients of the weight enumerator. In fact, if f is an indicator
function, then Uf (m) is precisely the number of words in the
support of f that has Hamming weight m.
The main result relating the weight distribution of a function
with that of its Fourier transform is the following theorem.
Theorem 1: The weight distribution of f is the Krawtchouk
transform of the weight distribution of the inverse Fourier
ˇ
transform f of f . In other words,
Uf = Uf .
ˇ

For any function f on GI , let Df be the function Uf ∗f , i.e.,
¯
¯
the weight distribution of f ∗ f . We will refer to Df as the
distance distribution of f . In the special case when f is the
indicator function δC of a code C ⊆ GI , we will write DC in
place of DδC for simplicity. We note here that C can be an
arbitrary code, not necessarily a group code.
Lemma 7: Let dH (, ·, ) denote the Hamming distance. For
any m ∈ Nn , DC (m) = |{(c, c ) ∈ C × C : dH (c, c ) = m}|.
Hence, the distance distribution of a group code C is, up to a
scaling factor, the same as the weight distribution of C.
˜
Deﬁne the dual distance distribution Df of a function f as
the Krawtchouk transform of the distance distribution of f .
˜
Then Df is the coefﬁcients of the weight enumerator Wf ∗f .
¯
¯
By Lemma 2, f ∗ f is non-negative, so are the coefﬁcients
of Wf ∗f . We thus have recovered the following fundamental
¯
theorem.
˜
Theorem 2: Df (m) ≥ 0 for all m ∈ Nn .
In case when f is a code indicator function, this theorem
forms the basis of linear programming bounds.
Remark: It may seem that the development of this theorem
is based on a group-theoretic setup. This is in fact unnecessary.
To see this, suppose that each variable xi takes on values in a
ﬁnite alphabet A. It is always possible to pick a group G of
size |A| and establish an arbitrary one-to-one correspondence
between A and G. Since we only consider Hamming weight
and Hamming distance, any such correspondence satisﬁes the
property that for any x, x ∈ G, x − x = 0 if and only if
dH (y, y ) = 0, where x ↔ y and x ↔ y under the one-to-one

(7)
∗

Noting the difference between ϕ and ϕ and the fact
M (x) = M (−x), the theorem immediately implies the following.

4

f

f

Uf
G

Fourier Transform

Krawtchouk Transform

ˆ
f

Ufˆ

G

ϕ∗

ϕ∗

G

Wf

G

G

Wfˆ

Fig. 4.
The relationship between the Krawtchouk transform, Fourier
transform and MacWilliams identity.

ϕ

ϕ

MacWilliams Identity

G

δM

δM

N1

correspondence. In addition, such a correspondence naturally
extends to the character group of G by the chain of one-to-one
correspondences A ↔ G ∼ G.
=

N1

δ

IV. C ONCLUDING R EMARKS
This paper exploits the recent framework of normal factor graphs and presents a more transparent picture of the
Krawtchouk transform and its relationship to the Fourier
transform and the MacWilliam identity. This relationship may
be summarized in the diagram of Figure 4. In the roadmap
of Figure 4, Forney [7] recently has taken the paths along the
two arcs to establish the MacWilliams identity. This paper
complements Forney [7] by emphasizing the Krawtchouk
transform in the picture. We believe that this approach allows
for a cleaner understanding of the Krawtchouk transform.
We also rederived the non-negativity result of dual distance
distribution. The approach of this paper can readily extend
to cases where symbol alphabets are not identical. This may
lead to linear programming bounds for more general codes,
potentially useful beyond conventional applications.

Nn

(a)
ˇ
f
G

G

δM

δM
N1

N1

κ1,γ

κ1,γ

N1

N1

δ

R EFERENCES

Nn

[1] I. Krasikov and S. Litsyn, “On integral zeros of krawtchouk polynomials,” J. Combin. Theory Series A, vol. 74, no. 1, pp. 71–99, 1996.
[2] V. Levenshtein, “Krawtchouk polynomials and universal bounds for
codes and designs in hamming spaces,” IEEE Trans. Inform. Theory,
vol. 41, no. 5, pp. 1303 –1321, sep 1995.
[3] F. J. MacWilliams and N. J. A. Sloane, The Theory of Error-Correcting
Codes. New York: North-Holland, 1977.
[4] P. Delsarte, “An algebraic approach to the association schemes of coding
theory,” Philips Research Reports Supplement, 1973.
[5] R. J. McEliece, E. R. Rodemich, H. C. Rumsey, and L. R. Welch,
“New upper bounds on the rate of codes via the delsarte-macwilliams
inequalities,” IEEE Trans. Inform. Theory., pp. 157–166, 1977.
[6] A. Al-Bashabsheh and Y. Mao, “Normal factor graphs and holographic
transformations,” IEEE Trans. Inform. Theory, vol. 57, no. 2, pp. 752
–763, feb. 2011.
[7] G. D. Forney Jr., “Codes on graphs: Duality and MacWilliams identities,” IEEE Trans. Inform. Theory, vol. 57, no. 3, pp. 1382 –1397, march
2011.
[8] F. J. MacWilliams, “A theorem on the distribution of weights in a
systematic code,” Bell Sys.Techn. J., vol. 42, no. 1, pp. 79–94, 1963.
[9] F. J. MacWilliams, N. J. A. Sloane, and J. Goethals, “The MacWilliams
identities for nonlinear codess,” Bell Sys. Techn. J., vol. 51, no. 4, pp.
803–819, 1972.
[10] G. D. Forney, Jr., “Codes on graphs: Normal realizations,” IEEE Trans.
Inform. Theory, vol. 51, no. 2, pp. 520–548, 2001.
[11] Y. Mao and F. Kschischang, “On factor graphs and the Fourier transform,” IEEE Trans. Inform. Theory, vol. 51, no. 5, pp. 1635–1649, 2005.

(b)
ˇ
f
G

G

δM

δM

N1

N1

δ
Nn

κn,γ
Nn

(c)
Fig. 3.

Proof of Theorem 1

5

