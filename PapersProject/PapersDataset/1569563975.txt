Title:          C:/Users/HiddenDragon/Documents/Dropbox/My Research/Index Codes of Extreme Rates/Short Version/V14/V14-Index_Code_Extreme_Rates.dvi
Creator:        dvips(k) 5.98 Copyright 2009 Radical Eye Software
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Mon May  7 22:14:47 2012
ModDate:        Tue Jun 19 12:55:53 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      595 x 842 pts (A4)
File size:      323091 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569563975

Optimal Index Codes with Near-Extreme Rates
Son Hoang Dau

Vitaly Skachek1

Yeow Meng Chee

Division of Mathematical Sciences
School of Phys. and Math. Sciences
Nanyang Technological University
21 Nanyang Link, Singapore 637371
Email: shdau@ntu.edu.sg

Department of ECE
McGill University
3480 University Street
Montr´ al, QC H3A 2A7, Canada
e
Email: vitaly.skachek@gmail.com

Division of Mathematical Sciences
School of Phys. and Math. Sciences
Nanyang Technological University
21 Nanyang Link, Singapore 637371
Email: ymchee@ntu.edu.sg

Abstract—The min-rank of a digraph was shown by BarYossef et al. (2006) to represent the length of an optimal scalar
linear solution of the corresponding instance of the Index Coding
with Side Information (ICSI) problem. In this work, the graphs
and digraphs of near-extreme min-ranks are characterized. Those
graphs and digraphs correspond to the ICSI instances having
near-extreme transmission rates when using optimal scalar linear
index codes. It is also shown that the decision problem of whether
a digraph has min-rank two is NP-complete. By contrast, the same
question for graphs can be answered in polynomial time.

I. I NTRODUCTION
Index Coding with Side Information (ICSI) [1] is a communication scheme dealing with broadcast channels in which
receivers have prior side information about the messages to be
broadcast. By using coding and by exploiting the knowledge
about the side information, the sender may signiﬁcantly reduce
the number of required transmissions compared with the
straightforward approach. Apart from being a special case
of the well-known (non-multicast) Network Coding problem
([2], [3]), the ICSI problem has also found various potential
applications on its owns, such as audio- and video-on-demand,
daily newspaper delivery, data pushing, and oppoturnistic
wireless networks ([1], [4], [5], [6]).
In the work of Bar-Yossef et al. [4], the optimal transmission
rate of scalar linear index codes for an ICSI instance was
neatly characterized by the so-called min-rank of the side information digraph corresponding to that instance. The concept
of min-rank of a graph goes back to Haemers [7]. Min-rank
serves as an upper bound for the celebrated Shannon capacity
of a graph [8]. It was shown by Peeters [9] that computing the
min-rank of a general graph (that is, the Min-Rank problem)
is a hard task. More speciﬁcally, Peeters showed that deciding
whether the min-rank of a graph is smaller than or equal to
three is an NP-complete problem. The interest in the Min-Rank
problem has grown after the work of Bar-Yossef et al. [4].
Exact and heuristic algorithms for ﬁnding min-rank over the
binary ﬁeld of a digraph were developed in [10]. The minrank of a random digraph was investigated in [11]. A dynamic
programming approach was proposed in [12] to compute minranks of outerplanar graphs in polynomial time.
1 The work of this author was done in part while he was with the
Coordinated Science Laboratory, University of Illinois at Urbana-Champaign,
Urbana, IL 61801, USA.

1

In this paper, we study graphs and digraphs that have nearextreme min-ranks. In other words, we study ICSI instances
with n receivers for which optimal scalar linear index codes
have transmission rates 2, n − 2, n − 1, or n. Consequently,
we show that the problem of deciding whether a digraph
has min-rank two over F2 is NP-complete. By contrast, the
same decision problem for graphs can be solved in polynomial
time. The characterizations of graphs and digraphs with nearextreme min-ranks are summarized in the table below. The
star mark indicates that the result is established in this paper.
Min-Rank
1

Graph G
G is complete (trivial)

2

G is not complete and G is 2colorable ([9])
G (connected) has a maximum
matching of size two and does not
contain F (Fig. 4) as a subgraph∗
G (connected) is a star graph∗
G has no edges (trivial)

n−2
n−1
n

Digraph D
D is complete (trivial)
D is not complete
and D is fairly 3colorable∗
unknown
unknown
D has no circuits∗

The paper is organized as follows. Basic notations and definitions are presented in Section II. In Section III, we present
characterization of graphs and digraphs of near-extreme minranks. In Section IV, we prove the hardness of the decision
problem of whether a digraph has min-rank two. The full
version of this paper is available at web.spms.ntu.edu.sg/
∼daus0001/ExtremeIC.pdf.
II. N OTATIONS AND D EFINITIONS
△

Let [n] = {1, 2, . . . , n}. Let Fq denote the ﬁnite ﬁeld of q
elements. The support of a vector u ∈ Fn is deﬁned to be the
q
set supp(u) = {i ∈ [n] : ui = 0}. For an n × k matrix M ,
let M i denote the ith row of M . For a set E ⊆ [n], let M E
denote the |E| × k sub-matrix of M formed by rows of M
which are indexed by the elements of E. For any matrix M
over Fq , we denote by rankq (M ) the rank of M over Fq . We
use ei to denote the unit vector, which has a one at the ith
position, and zeros elsewhere.
A graph is a pair G = (V(G), E(G)) where V(G) is the set
of vertices of G, and E(G), the edge set, is a set of unordered
pairs of distinct vertices of G. A typical edge of G is of the
form {i, j} where i, j ∈ V(G), and i = j. For a graph with
n vertices, we often take [n] as the vertex set. A digraph

D = (V(D), E(D)) is deﬁned similarly, except that E(D) is
called the arc set, which is a set of ordered pairs of distinct
vertices of D. A typical arc of D is of the form e = (i, j)
where i, j ∈ V(D), and i = j. We note that any graph can be
viewed as a digraph with the same set of vertices, where each
edge in E(G) is replaced with two antiparallel arcs in E(D).
If (i, j) ∈ E(D) then j is called an out-neighbor of i. The set
of out-neighbors of a vertex i in the digraph D is denoted by
D
NO (i). We simply use NO (i) whenever there is no potential
confusion. For a graph G, we denote by N G (i) the set of
neighbors of i, namely, the set of vertices adjacent to i. The
order of a digraph is its number of vertices. The complement
of a digraph D, denoted D, is a digraph with vertex set V(D)
and arc set {(i, j) : i, j ∈ V(D), i = j, (i, j) ∈ E(D)}. The
/
complement of a graph is deﬁned analogously.
A circuit in a digraph D = (V(D), E(D)) is a sequence
of pairwise distinct vertices C = (i1 , i2 , . . . , ir ), where
(is , is+1 ) ∈ E(D) for all s ∈ [r − 1] and (ir , i1 ) ∈ E(D)
as well. A digraph is called acyclic if it contains no circuits.
The ICSI problem is formulated as follows. Suppose a
sender S wants to send a vector x = (x1 , x2 , . . . , xn ), where
xi ∈ Ft for all i ∈ [n], to n receivers R1 , R2 , . . . , Rn . Each Ri
q
possesses some prior side information, consisting of the blocks
xj , j ∈ Xi [n], and is interested in receiving a single block
xi . The sender S broadcasts a codeword E(x) ∈ Fκ , κ ∈ N,
q
that enables each receiver Ri to recover xi based on its side
information. Such a mapping E is called an index code. We
refer to t as the block length and κ as the length of the index
code. The ratio κ/t is called the transmission rate of the index
code. The objective of S is to ﬁnd an optimal index code, that
is, an index code which has the minimum transmission rate.
The index code is called linear if E is an Fq -linear mapping,
and nonlinear otherwise. The index code is called scalar if
t = 1 and vector if t > 1. The length and the transmission
rate of a scalar index code (t = 1) are identical.
Example II.1. Consider the following ICSI instance in which
n = 5 and X1 = {2}, X2 = {3}, X3 = {1, 4}, X4 = {5},
X5 = {2, 4}. Assume that xi ∈ F2 (i ∈ [5]).
S
R1

x1 + x2
x2 + x3
x4 + x5

This index code saves two transmissions compared with the
na¨ve approach when S broadcasts all ﬁve messages.
ı
Each instance of the ICSI problem can be described by
the so-called side information digraph [4]. Given n and Xi ,
i ∈ [n], the side information digraph D is deﬁned as follows.
The vertex set V(D) = [n]. The arc set E(D) = ∪i∈[n] {(i, j) :
j ∈ Xi }. The side information digraph corresponding to the
ICSI instance in Example II.1 is depicted in Fig. 2a.
Deﬁnition II.2 ([7], [4]). Let D = (V(D), E(D)) be a digraph
n×n
of order n. A matrix M = (mi,j ) ∈ Fq
is said to ﬁt D if
mi,i = 0 and mi,j = 0 whenever i = j and (i, j) ∈ E(D).
/
The min-rank of D over Fq , denoted minrkq (D), is deﬁned to
n×n
be the minimum rank of a matrix in Fq
that ﬁts D. Since a
graph can be viewed as a special case of a digraph, the above
deﬁnitions also apply to a graph.
1
5

2

4

3

(a) Side information digraph D

1
0

1
1

0
1

0
0

0
0

1
0
0

0
0
0

1
0
0

0
1
1

0
1
1

(b) A rank-three matrix that ﬁts D

Fig. 2: Corresponding side information digraph (Example II.1)
Bar-Yossef et al. [4] showed that the length (transmission
rate) of an optimal scalar linear index code for the ICSI
instance described by D is precisely the min-rank of D. Let
βq (t, D) denotes the length of an optimal vector index code of
block length t over Fq for an ICSI instance described by a digraph D. Lubetzky et al. [13] deﬁned the broadcast rate βq (D)
of the corresponding ICSI instance to be limt→∞ βq (t, D)/t
(see also [14]). Then minrkq (D) is an upper bound on βq (D).
Theorem II.3 ([7], [4], [14]). For any digraph D we have
α(D) ≤ βq (D) ≤ minrkq (D), where α(D) denotes the size
of a maximum acyclic induced subgraph of D. The same
inequalities hold for a graph G, where α(G) denotes the size
of a maximum independent set of G.
III. D IGRAPHS OF N EAR -E XTREME M IN -R ANKS
A. Digraphs of Min-Rank One

R5

Proposition III.1. A digraph has min-rank one over Fq if and
only if it is a complete digraph.
Due to Theorem II.3, it is also trivial to see that βq (D) = 1
if and only if D is a complete digraph.

requests x1 R
requests x5
R4
2
R3
owns x2
owns x2 , x4
requests x2 requests x3 requests x4
owns x5
owns x3
owns x1 , x4

B. Digraphs of Min-Rank Two

Fig. 1: Example of an ICSI instance and an index code
The sender broadcasts three packets x1 + x2 , x2 + x3 , and
x4 + x5 . This index code is of length three. The decoding
process goes as follows. As R1 knows x2 and receives x1 +x2 ,
it obtains x1 = x2 + (x1 + x2 ); Similarly, R2 obtains x2 =
x3 +(x2 +x3 ); R3 obtains x3 = x1 +(x1 +x2 )+(x2 +x3 ); R4
obtains x4 = x5 + (x4 + x5 ); R5 obtains x5 = x4 + (x4 + x5 ).

2

It was observed by Peeters [9] that a graph has min-rank two
if and only if it is not a complete graph and its complement is
a bipartite graph. We now focus only on digraphs of min-rank
two. In this section, only the binary alphabet is considered.
We ﬁrst introduce the following concept of a fair coloring
of a digraph. Recall that a k-coloring of a graph G =
(V(G), E(G)) is a mapping φ : V(G) → [k] which satisﬁes

the condition that φ(i) = φ(j) whenever {i, j} ∈ E(G). We
often refer to φ(i) as the color of i. If there exists a k-coloring
of G, then we say that G is k-colorable.
Deﬁnition III.2. Let D = (V(D), E(D)) be a digraph. A fair
k-coloring of D is a mapping φ : V(D) → [k] that satisﬁes
the following conditions
(C1) If (i, j) ∈ E(D) then φ(i) = φ(j);
(C2) For each vertex i of D, it holds that φ(j) = φ(h) for all
out-neighbors j and h of i.
If there exists a fair k-coloring of D, we say that we can color
D fairly by k colors, or, D is fairly k-colorable.
Lemma III.3. A digraph D = (V(D), E(D)) is fairly 3colorable if and only if there exists a partition of V(D) into
three subsets A, B, and C that satisfy the following conditions
1) For every i ∈ A: either NO (i) ⊆ B or NO (i) ⊆ C;
2) For every i ∈ B: either NO (i) ⊆ A or NO (i) ⊆ C;
3) For every i ∈ C: either NO (i) ⊆ A or NO (i) ⊆ B.
Theorem III.4. Let D = (V(D), E(D)) be a digraph. Then
minrk2 (D) ≤ 2 if and only if D, the complement of D, is
fairly 3-colorable.
Proof: Suppose V(D) = [n].
The ONLY IF direction:
By the deﬁnition of min-rank, minrk2 (D) ≤ 2 implies the
existence of an n × n binary matrix M of rank at most two
that ﬁts D. There must be some two rows of M that span its
entire row space. Without loss of generality, suppose that they
are the ﬁrst two rows of M , namely, M 1 and M 2 (these
two rows might be linearly dependent if minrk2 (D) < 2).
Let B = supp(M 1 ) ∩ supp(M 2 ), A = supp(M 1 ) \ B, and
C = supp(M 2 ) \ B. Since the binary alphabet is considered
and the matrix M has no zero rows, for every i ∈ [n], one of
the following must hold: (1) M i = M 1 ; (2) M i = M 2 ; (3)
M i = M 1 + M 2 . Hence i ∈ supp(M i ) ⊆ A ∪ B ∪ C for
every i ∈ [n]. This implies that A ∪ B ∪ C = [n].
Suppose that i ∈ A. Then either M i = M 1 or M i =
M 1 + M 2 . The former condition holds if and only if
supp(M i ) = A ∪ B, which in turns implies that (i, j) ∈ E(D)
for all j ∈ A ∪ B \ {i}. In other words, (i, j) ∈ E(D) for all
/
j ∈ A ∪ B. Here D = (V(D), E(D)) is the complement of D.
The latter condition holds if and only if supp(M i ) = A ∪ C,
which implies that (i, j) ∈ E(D) for all j ∈ A ∪ C. In
/
summary, for every i ∈ A we have
1) (i, j) ∈ E(D), for all j ∈ A;
/
2) Either (i, j) ∈ E(D), for all j ∈ B, or (i, j) ∈ E(D),
/
/
for all j ∈ C;
D
In other words, for every i ∈ A, either NO (i) ⊆ B or
D
NO (i) ⊆ C. Analogous conditions hold for every i ∈ B
and for every i ∈ C as well. Therefore, by Lemma III.3, D is
fairly 3-colorable.
The IF direction:
Suppose now that D is fairly 3-colorable. It sufﬁces to ﬁnd
an n × n binary matrix M of rank at most two which ﬁts D.
By Lemma III.3, there exists a partition of V(D) into three
subsets A, B, and C that satisfy the following three conditions

3

D
D
1) For every i ∈ A: either NO (i) ⊆ B or NO (i) ⊆ C;
D
D
2) For every i ∈ B: either NO (i) ⊆ A or NO (i) ⊆ C;
D
D
3) For every i ∈ C: either NO (i) ⊆ A or NO (i) ⊆ B.
We construct an n × n matrix M = (mi,j ) as follows. For
D
each i ∈ A, if NO (i) ⊆ B then let mi,j = 1 for j ∈ A ∪ C,
D
and mi,j = 0 for j ∈ B. Otherwise, if NO (i) ⊆ C then let
mi,j = 1 for j ∈ A ∪ B, and mi,j = 0 for j ∈ C. For i ∈ B
and i ∈ C, M i can be constructed analogously. It is obvious
that M ﬁts D. Moreover, each row of M can be written as a
linear combinations of the two binary vectors whose supports
are A ∪ B and B ∪ C, respectively. Therefore, rankq (M ) ≤ 2.
We complete the proof.

The following corollary characterizes the digraphs of minrank two.
Corollary III.5. A digraph D has min-rank two over F2 if
and only if D is fairly 3-colorable and D is not a complete
digraph.
For a graph G, it was proved by Blasiak et al. [15] that
β2 (G) = 2 if and only if G is bipartite and G is not a complete
graph. A characterization (by forbidden subgraphs) of digraphs
D with β2 (D) = 2 was also obtained therein.
C. Digraphs of Min-Ranks Equal to Their Orders
Proposition III.6. Let G be a graph of order n. Then
minrkq (G) = n if and only if G has no edges.
Proposition III.7. Let D be a digraph of order n. Then
minrkq (D) = n if and only if D is acyclic.
Proof: Equivalently, we show that minrkq (D) ≤ n − 1 if
and only if D has a circuit. Let V(D) = [n].
Suppose D has a circuit C = (i1 , i2 , . . . , ir ). We construct a
matrix M ﬁtting D as follows. Let V(C) = {i1 , . . . , ir }. For
j ∈ V(C), let M j = ej . For s ∈ [r−1], let M is = eis −eis+1 .
/
Finally, let M ir = ei1 − eir . Clearly, M ﬁts D. Moreover, as
r−1
M ir = s=1 M is , we have rankq (M V(C) ) ≤ r − 1. Hence
rankq (M ) = rankq M V(C) + rankq M [n]\V(C)
≤ (r − 1) + (n − r) = n − 1.
Therefore, minrkq (D) ≤ n − 1.
Conversely, suppose that minrkq (D) ≤ n − 1. By Theorem II.3, α(D) ≤ n − 1. Therefore, D contains a circuit.
By Theorem II.3, it is not hard to see that Proposition III.6
and III.7 also hold if we replace minrkq (·) by βq (·).
D. Graphs of Min-Ranks One Less Than Their Orders
Deﬁnition III.8. A graph G = (V(G), E(G)) is called a star
graph if |V(G)| ≥ 2 and there exists a vertex i ∈ V(G) such
that E(G) = {i, j} : j ∈ V(G) \ {i} .

Fig. 3: A star graph
Theorem III.9. Let G be a connected graph of order n ≥ 2.
Then minrkq (G) = n − 1 if and only if G is a star graph.

Proof: We ﬁrst suppose that minrkq (G) = n − 1. If n = 2
then G must be a complete graph, which is a star graph. We
assume that n ≥ 3. As G is connected, there exists a vertex i of
degree at least two. Let i1 and i2 be any two distinct vertices
adjacent to i. Our goal is to show that for every vertex j = i,
we have {i, j} ∈ E(G), and those are all possible edges.
Firstly, suppose for a contradiction that {i, j} ∈ E(G) for
/
some j = i. Since G is connected, there exists k such that
{j, k} ∈ E(G). Then either k = i1 or k = i2 . Suppose that
k = i2 . We create a matrix M as follows. Let M j = M k =
/
ej + ek , M i = M i2 = ei + ei2 , and M h = eh for h ∈
{i, j, i2 , k}. Then M ﬁts G and rankq (M ) ≤ n−2. Therefore,
minrkq (G) < n − 1. We obtain a contradiction. Thus, all other
vertices are adjacent to i.
Secondly, suppose for a contradiction that there exist two
adjacent vertices, namely j and k, both are different from i.
As we just proved, both j and k must be adjacent to i. We
create a matrix M as follows. We take M i = M j = M k =
ei + ej + ek , and M h = eh for h ∈ {i, j, k}. Clearly M
/
ﬁts G and moreover, rankq (M ) ≤ n − 2, which implies that
minrkq (G) < n − 1. We obtain a contradiction.
Conversely, assume that G is a star graph, where E(G) =
{i, js } : s ∈ [n − 1] , js ∈ V(G) \ {i} for all s ∈ [n − 1].
We create a matrix M ﬁtting G by taking M js = ei + ejs for
s ∈ [n−1], and M i = ei +ej1 . Since M i ≡ M j1 , we deduce
that rankq (M ) ≤ n − 1. Hence minrkq (G) ≤ n − 1. On the
other hand, since {js : s ∈ [n−1]} is a maximum independent
set in G, we obtain that α(G) = n − 1. By Theorem II.3,
minrkq (G) ≥ α(G) = n − 1. Thus, minrkq (G) = n − 1.
It is not hard to see that Theorem III.9 still holds with
minrkq (·) being replaced by βq (·).
E. Graphs of Min-Ranks Two Less Than Their Orders
A matching in a graph is a set of edges without common
vertices. A maximum matching is a matching that contains the
largest possible number of edges. The number of edges in a
maximum matching in G is denoted by mm(G).
Theorem III.10. Suppose G is a connected graph of order
n ≥ 6. Then minrkq (G) = n − 2 if and only if mm(G) = 2
and G does not contain a subgraph isomorphic to the graph
F depicted in Fig. 4.

minrkq (G) ≤ n − mm(G) = n − 2. As α(G) ≤ minrkq (G),
it sufﬁces to show that α(G) = n − 2. Let {a, b} and {c, d}
be the two edges in a maximum matching in G. Let U =
{a, b, c, d} and V = V(G) \ U . The main idea is to show that
we can always ﬁnd two nonadjacent vertices in U which are
not adjacent to any vertex in V . Such two vertices can be
added to V to obtain an independent set of size n − 2, which
establishes the proof.
It is also not hard to see that Theorem III.10 still holds with
minrkq (·) being replaced by βq (·).
IV. T HE H ARDNESS OF THE M IN -R ANK P ROBLEM FOR
D IGRAPHS
In this section, we ﬁrst prove that the decision problem
of whether a given digraph is fairly k-colorable (see Deﬁnition III.2) is NP-complete, for any given k ≥ 3. The hardness
of this problem, by Proposition III.1 and Corollary III.5, leads
to the hardness of the decision problem of whether a given
digraph has min-rank two over F2 . The fair k-coloring problem
is deﬁned formally as follows.
Problem: FAIR k-COLORING
Instance: A digraph D, an integer k
Output: True if D is fairly k-colorable, False otherwise
Theorem IV.1. The fair k-coloring problem is NP-complete
for k ≥ 3.
Proof: This problem is obviously in NP. For NP-hardness,
we reduce the k-coloring problem to the fair k-coloring
problem. Suppose that G = (V(G), E(G)) is an arbitrary graph.
We aim to build a digraph D = (V(D), E(D)) so that G is kcolorable if and only if D is fairly k-colorable. Suppose that
V(G) = [n]. For each i ∈ [n], we build the following gadget,
which is a digraph Di = (Vi , Ei ). The vertex set of Di is
Vi = {i} ∪ ωi,ij : ij ∈ N G (i) ,
where ωi,ij are newly introduced vertices. We refer to ωi,ij as
a clone (in Di ) of the vertex ij ∈ [n]. The arc set of Di is
Ei = (ωi,ij , i) : ij ∈ N G (i) .
Let N G (i) = {i1 , i2 , . . . , ini }. Then Di is depicted in Fig. 5.
i

Fig. 4: The forbidden subgraph F
Sketch of the proof: For the ONLY IF direction, suppose
that minrkq (G) = n − 2. It is not hard to see that minrkq (G) ≤
n − mm(G). Hence mm(G) ≤ 2. As mm(G) ∈ {0, 1} and
|V(G)| ≥ 6 imply that either G has no edges (minrkq (G) =
n > n − 2) or G is a star graph (minrkq (G) = n − 1 > n − 2),
we deduce that mm(G) = 2. Moreover, as the graph F has
min-rank three less than its order, G should not contain any
subgraph isomorphic to F .
We now turn to the IF direction. Suppose that mm(G) = 2
and G does not contain any subgraph isomorphic to F . Then

4

ωi,i1

ωi,i2

ωi,ini

Fig. 5: Gadget Di for each vertex i of G
Additionally, we also introduce n new vertices
p1 , p2 , . . . , pn . The digraph D = (V(D), E(D)) is built
as follows. The vertex set of D is
V(D) = ∪n Vi ∪ {p1 , p2 , . . . , pn }.
i=1
Let
Qi = (pi , i) ∪ (pi , ωi′ ,i′ ) : i′ ∈ [n], j ∈ [ni′ ], i′ = i ,
j
j

be the set consisting of (pi , i) and the arcs that connect pi and
all the clones of i. The arc set of D is then deﬁned to be

have the same color as i, namely, φD (ωi′ ,i′ ) = φD (i) if i′ = i.
j
j
Therefore, by (C1), if {i, j} ∈ E(G), that is, j ∈ N G (i), then

E(D) = ∪n Ei ∪ ∪n Qi .
i=1
i=1

φD (i) = φD (ωi,j ) = φD (j).

For example, if G is the graph in Fig. 6, then D is the digraph
in Fig. 7.

Hence, if we deﬁne φG : [n] → [k] by φG (i) = φD (i) for all
i ∈ [n], then it is a k-coloring of G. Thus G is k-colorable.
Finally, notice that the order of D is a polynomial with
respect to the order of G. More speciﬁcally, |V(D)| =
2|V(G)| + 2|E(G)| and |E(D)| = |V(G)| + 4|E(G)|. Moreover,
building D from G, and also obtaining a coloring of G from
a coloring of D, can be done in polynomial time in |V(G)|.
Since the k-coloring problem (k ≥ 3) is NP-hard [16], we
conclude that the fair k-coloring problem is also NP-hard.

2
1
3
Fig. 6: An example of the graph G
1

2

p1

ω2,1

Corollary IV.2. Given an arbitrary digraph D, the decision
problem of whether minrk2 (D) = 2 is NP-complete.
Recall that for a graph G, it was observed by Peeters [9]
that G has min-rank two if and only if G is a bipartite graph
and G is not a complete graph, which can be veriﬁed in
polynomial time. Another related result, presented by Blasiak
et al. [15], stated that there is a polynomial time algorithm to
verify whether β2 (D) = 2 for a general digraph D.

ω3,1

p2

ω1,3

ω1,2

3

p3

R EFERENCES

Fig. 7: The digraph D built from the graph G in Fig. 6
Our goal now is to show that G is k-colorable if and only
if D is fairly k-colorable.
Suppose that G is k-colorable and φG : [n] → [k] is a kcoloring of G. We deﬁne φD : V(D) → [k] as follows
△
1) For every i ∈ [n], φD (i) = φG (i);
△
2) If i′ = i, then φD (ωi′ ,i′ ) = φD (i) = φG (i), in other
j
j
words, clones of i have the same color as i;
3) For every i ∈ [n], φD (pi ) is chosen arbitrarily, as long
as it is different from φD (i).
We claim that φD is a fair k-coloring for D. We ﬁrst verify
the condition (C1) (see Deﬁnition III.2). It is straightforward
from the deﬁnition of φD that the endpoints of each of the
arcs of the forms (pi , i) for i ∈ [n], and (pi , ωi′ ,i′ ) for i′ = i,
j
j
have different colors. It remains to verify that i and ωi,ij have
different colors. On the one hand, ωi,ij is a clone of ij , and
hence has the same color as ij . In other words,
φD (ωi,ij ) = φD (ij ) = φG (ij ).
On the other hand, since ij ∈ N G (i), we obtain that
φG (ij ) = φG (i) = φD (i).
Hence, φD (ωi,ij ) = φD (i) (i ∈ [n]). Thus, (C1) is satisﬁed.
We now check if (C2) (see Deﬁnition III.2) is also satisﬁed.
The out-neighbors of pi are i and its clones, namely, ωi′ ,i′
j
with i′ = i. These vertices have the same color in D by the
j
deﬁnition of φD . Thus (C2) is also satisﬁed. Therefore φD is
a fair k-coloring of D.
Conversely, suppose that φD : V(D) → [k] is a fair kcoloring of D. Condition (C2) guarantees that all clones of i

5

[1] Y. Birk and T. Kol, “Informed-source coding-on-demand (ISCOD)
over broadcast channels,” in Proc. IEEE Conf. on Comput. Commun.
(INFOCOM), San Francisco, CA, 1998, pp. 1257–1264.
[2] R. Ahlswede, N. Cai, S. Y. R. Li, and R. W. Yeung, “Network
information ﬂow,” IEEE Trans. Inform. Theory, vol. 46, pp. 1204–1216,
2000.
[3] R. Koetter and M. M´ dard, “An algebraic approach to network coding,”
e
IEEE/ACM Trans. Netw., vol. 11, pp. 782–795, 2003.
[4] Z. Bar-Yossef, Z. Birk, T. S. Jayram, and T. Kol, “Index coding with
side information,” in Proc. 47th Annu. IEEE Symp. on Found. of Comput.
Sci. (FOCS), 2006, pp. 197–206.
[5] S. El Rouayheb, A. Sprintson, and C. Georghiades, “On the index coding
problem and its relation to network coding and matroid theory,” IEEE
Trans. Inform. Theory, vol. 56, no. 7, pp. 3187–3195, 2010.
[6] S. Katti, H. Rahul, W. Hu, D. Katabi, M. M´ dard, and J. Crowcroft,
e
“Xors in the air: Practical wireless network coding,” in Proc. ACM
SIGCOMM, 2006, pp. 243–254.
[7] W. Haemers, “An upper bound for the shannon capacity of a graph,”
Algebr. Methods Graph Theory, vol. 25, pp. 267–272, 1978.
[8] C. E. Shannon, “The zero-error capacity of a noisy channel,” IRE Trans.
Inform. Theory, vol. 3, pp. 3–15, 1956.
[9] R. Peeters, “Orthogonal representations over ﬁnite ﬁelds and the chromatic number of graphs,” Combinatorica, vol. 16, no. 3, pp. 417–431,
1996.
[10] M. A. R. Chaudhry and A. Sprintson, “Efﬁcient algorithms for index
coding,” in Proc. IEEE Conf. on Comput. Commun. (INFOCOM), 2008,
pp. 1–4.
[11] I. Haviv and M. Langberg, “On linear index coding for random graphs,”
2011, preprint.
[12] Y. Berliner and M. Langberg, “Index coding with outerplanar side
information,” in Proc. IEEE Symp. on Inform. Theory (ISIT), Saint
Petersburg, Russia, 2011, pp. 869–873.
[13] E. Lubetzky and U. Stav, “Nonlinear index coding outperforming the
linear optimum,” IEEE Trans. Inform. Theory, vol. 55, no. 8, pp. 3544–
3551, 2009.
[14] N. Alon, A. Hassidim, E. Lubetzky, U. Stav, and A. Weinstein, “Broadcasting with side information,” in Proc. 49th Annu. IEEE Symp. on
Found. of Comput. Sci. (FOCS), 2008, pp. 823–832.
[15] A. Blasiak, R. Kleinberg, and E. Lubetzky, “Index coding via linear
programming,” 2011, preprint.
[16] R. M. Karp, “Reducibility among combinatorial problems,” Complexity
Comput. Comput., vol. 40, no. 4, pp. 85–103, 1972.

