Creator:        TeX
Producer:       Appligent StampPDF Batch, version 5.1
CreationDate:   Sat May 19 00:16:47 2012
ModDate:        Tue Jun 19 12:56:03 2012
Tagged:         no
Pages:          5
Encrypted:      no
Page size:      612 x 792 pts (letter)
File size:      450988 bytes
Optimized:      no
PDF version:    1.6
ISIT'2012 1569567005

Applications of the Shannon-Hartley Theorem
to Data Streams and Sparse Recovery
Eric Price

David P. Woodruff

MIT

IBM Almaden

is also needed for network aggregation, which usually
follows a bottom-up approach [18]: given a routing tree
where the nodes represent sensors, starting from the
leaves the aggregation propagates upwards to the root.
We refer to the rows of A as measurements.

Abstract—The Shannon-Hartley theorem bounds the
maximum rate at which information can be transmitted
over a Gaussian channel in terms of the ratio of the signal
to noise power. We show two unexpected applications of this
theorem in computer science: (1) we give a much simpler
proof of an Ω(n1−2/p ) bound on the number of linear
measurements required to approximate the p-th frequency
moment in a data stream, and show a new distribution
which is hard for this problem, (2) we show that the
number of measurements needed to solve the k-sparse
recovery problem on an n-dimensional vector x with the
C-approximate 2 / 2 guarantee is Ω(k log(n/k)/ log C).
We complement this result with an almost matching
O(k log∗ k log(n/k)/ log C) upper bound.

Alon, Matias, and Szegedy [2] initiated the line of
work on frequency moments. There is a long line of
upper bounds on the number of linear measurements; we
refer the reader to the most recent works [3], [11] and the
references therein. Similarly, we refer the reader to the
most recent lower bounds [16], [22] and the references
therein. The best upper and lower bounds for obtaining
a (1 + )-approximation with probability at least 1 − δ
have the form n1−2/p · poly( −1 log(nδ −1 ).

I. I NTRODUCTION
Let S be a real-valued random variable with E[S 2 ] =
τ . Consider the random variable S + T , where T ∼
N (0, σ 2 ) is additive white Gaussian noise of variance
σ 2 . The Shannon-Hartley theorem states that

The existing lower bounds are rather involved, using
the direct sum paradigm for information complexity
[5]. Moreover, they apply to the number of bits rather
than the number of linear measurements, and typically
do not provide an explicit distribution which is hard.
These issues can be resolved using techniques from [4],
[20] and [15]. The resulting hard distribution is: choose
x ∈ {−1, 0, 1}n uniformly at random, and then with
probability 1/2, replace a random coordinate xi of x
with a value in Θ(n1/p ). Fp (x) changes by a constant
factor in the two cases, and so the approximation algorithm must determine which case we are in.

2

I(S; S + T ) ≤

1
τ2
log 1 + 2
2
σ

,

where I(X; Y ) = h(X) − h(X|Y ) is the mutual information between X and Y , and h(X) =
− X f (x) log f (x)dx is the differential entropy of a
random variable X with probability density function f .
We show two unexpected applications of the ShannonHartley theorem in computer science, the ﬁrst to estimating frequency moments in a data stream, and the second
to approximating a vector by a sparse vector.

We instead consider the following continuous distribution: choose x to be a random N (0, In ) vector,
i.e., a vector whose coordinates are independent standard normal random variables. With probability 1/2,
replace a random coordinate xi of x with a value
in Θ(n1/p ). The use of Gaussians instead of signs
allows us to derive our lower bound almost immediately from the Shannon-Hartley theorem. We obtain an
Ω(n1−2/p ) bound on the number of linear measurements
required for estimating Fp , matching known bounds up
to poly( −1 log(M nδ −1 ) factors. Our proof is much
simpler than previous proofs.

A. Sketching Frequency Moments
In the data stream literature, a line of work has considered the problem of estimating the frequency moments
n
Fp (x) = x p = i=1 |xi |p , where x ∈ Rn and p ≥ 2.
p
One usually wants a linear sketch, that is, we choose a
random matrix A ∈ Rm×n from a certain distribution,
for m
n, and compute Ax, from which one can
output a constant-factor approximation to Fp (x) with
high probability. Linearity is crucial for distributed computation, formalized in the MUD (Massive Unordered
Distributed) model [9]. In this model the vector x is
split into pieces x1 , . . . , xr , each of which is handled by
a different machine. The machines individually compute
Ax1 , . . . , Axr , and an aggregation function combines
these to compute Ax and estimate Fp (x). Linearity

Our new hard distribution may also more accurately
model those signals x arising in practice, since it corresponds to a signal with support 1 which is corrupted by
independent Gaussian noise in each coordinate. Identifying natural hard distributions has been studied for other
data stream problems, see, e.g., [19] and [17].

1

r ≥ 2Gp n, then Bob sets Z = 1, else Bob sets Z = 0.
We thus have a Markov chain , Z → x → y → Z .
If A works for any x with probability 1 − δ, as a
distribution over A, then there is a speciﬁc A and random
seed such that A, together with the associated estimation
procedure, succeeds with probability 1 − δ over x drawn
from the distribution described above. Let us ﬁx this
choice of A and associated random seed, so that Alice
and Bob run deterministic algorithms. Let m be the
number of rows of A. We can assume the rows of A are
orthonormal since this can be done in post-processing.
Lemma 2: I(Z; Z ) = O(m/n1−2/p ).
Proof: Let the rows of A be denoted v 1 , . . . , v m .
Then we have that

B. Sparse Recovery
In the ﬁeld of compressed sensing, a standard problem
is that of stable sparse recovery: we want a distribution
A of matrices A ∈ Rm×n such that, for any x ∈ Rn and
with probability 1 − δ > 2/3 over A ∈ A, there is an
algorithm to recover x from Ax with
ˆ
x−x
ˆ

p

≤ (1 + )

min

k−sparse x

x−x

p

for some > 0 and norm p. We call this a (1 + )approximate p / p recovery scheme with failure probability δ. We will focus on the popular case of p = 2.
For any constant δ > 0 and any satisfying = O(1)
and = Ω(n−1/2 ), the optimal number of measurements
is Θ(k log(n/k)/ ). The upper bound is in [12], and the
lower bound is given by [1], [6], [14], [20]; see [20] for
a comparison of these works.
One question is if the number of measurements can
be improved when the approximation factor C = 1 +
is very large (i.e. ω(1)). In the limiting case of C = ∞,
corresponding to sparse recovery in the absence of noise,
it is known that O(k) measurements are sufﬁcient [7].
However, the intermediate regime has not been well
studied.
Using the Shannon-Hartley theorem, we prove an
Ω(k log(n/k)/ log C) lower bound on the number of
measurements. We complement this with a novel sparse
recovery algorithm, which builds upon [12] and [13],
but is the ﬁrst to obtain an improved bound for C > 1.
Our bound is O(k + k log(n/k) log∗ k/ log C), which
matches our lower bound up to a log∗ k factor. Because
log(1 + ) ≈ , these results match the Θ( 1 k log(n/k))
results for
1.
Related work. Related lower bounds have appeared
in a number of recent works, including [6], [14], [1],
[21], and [10]. See [20] for a comparison.

yi = v i , x = (4Gp )1/p n1/p · v i , e Z + wi ,
where wi ∼ N (0, 1). Deﬁne zi = (4Gp )1/p n1/p ·
v i , e Z so yi = zi + wi . Then
1
· (4Gp n)2/p E [(v i )2 ]
2
1 (4Gp )2/p
1 (4Gp n)2/p
=
=
= Θ(1/n1−2/p ).
2
n
2 n1−2/p

2
EZ, [zi ] =

Hence, yi = zi + wi is a Gaussian channel with power
2
constraint E[zi ] = Θ(1/n1−2/p ) and noise variance
E[(wi )2 ] = 1. By the Shannon-Hartley theorem,
2
1
E[zi ]
log 1 +
2
E[(wi )2 ]
1
= log 1 + Θ(1/n1−2/p ) = Θ(1/n1−2/p ).
2

max I(zi ; yi ) ≤
i
v

By the data processing inequality for Markov chains and
the chain rule for entropy,
I(Z; Z ) ≤ I(z; y) = h(y) − h(y|z)
= h(y) − h(y − z|z)

II. L OWER B OUND FOR F REQUENCY M OMENTS

= h(y) −

This section is devoted to proving the following theorem:
Theorem 1: Any sketching algorithm for Fp up to a
factor of (1 ± ) for < 1/2, which succeeds with
probability 1 − δ for a sufﬁciently small constant δ > 0,
requires m = Ω(n1−2/p ).
Let Gp = E[|X|p ] where X ∼ N (0, 1). For constant
p, Gp is Θ(1).
Consider the following communication game between
two players, Alice and Bob. Alice chooses a random
∈ [n] and associated standard unit vector e =
(0, . . . , 0, 1, 0, . . . , 0) ∈ Rn . She also chooses w ∼
N (0, In ). Then she chooses Z ∈ {0, 1} uniformly at
random. If Z = 0, then Alice sets x = w. If Z = 1, then
Alice sets x = (4Gp )1/p · n1/p e + w. She sets y = Ax,
where A is the random matrix used for estimating Fp .
She sends y to Bob, who runs the estimation procedure
associated with A to recover an estimate r to Fp (x). If

h(wi |z, w1 , . . . , wi−1 )
i

= h(y) −

h(wi ) ≤
i

h(yi ) − h(wi )
i

h(yi ) − h(yi |zi ) =

=
i

I(yi ; zi )
i

≤ O(m/n1−2/p ).
Proof of Theorem 1: If Z = 1, then x p ≥ 4Gp ·n,
p
and so any (1 ± )-approximation is at least 2Gp n for
< 1/2. On the other hand, if Z = 0, then E[ x p ] =
p
Gp · n, and since the |xi |p are i.i.d. (as we range over
i) with bounded variance, by Bernstein’s inequality, with
4
probability at least 1−1/n, x p ≤ 3 ·Gp ·n. Hence, any
p
(1 ± )-approximation is less than 2Gp n for < 1/2. So
if the algorithm succeeds with probability at least 1 − δ,
then Z = Z with probability at least 1 − δ − 1/n.

2

so I(S; S ) = H(S) − H(S|S ) ≥ −1 + 1 log |F| =
2
Ω(k log n/k).
To show the claim, we condition on successful sparse
recovery, which happens with probability 1 − δ ≥ 2/3.
I(Z; Z ) = H(Z) − H(Z | Z ) = 1 − (H(q) + q) ≥ 1/2 Let z = x + w be the transmitted signal. We also
αk
2
2
if q is less than a sufﬁciently small constant, which condition on w ∞ ≤ O( n log n) and w 2 /(αk) ≤ 2,
follows from δ being a sufﬁciently small constant. But which happen with probability at least 1 − o(1). So both
by Lemma 2, I(Z; Z ) = O(m/n1−2/p ). Hence m = events occur with probability at least 2/3 − o(1) > 1/2.
Given this conditioning and that α = Ω(1/C), the best
Ω(n1−2/p ).
k-sparse approximation to z is x + wS , where wS is the
III. B OUNDS FOR S PARSE R ECOVERY
restriction of w to coordinates in S.
Suppose x = x, so x − x 2 ≤ x − x 2 . Then
ˆ
ˆ
A. Lower bound for C
1
because sparse recovery was successful, z − x 2 ≤
For C = 1 + a lower bound of Ω(k log(n/k)/ ) was
C w − wS 2 ≤ C w 2 . Hence
shown in [1], [6], [14], [20] for any constant δ > 0 and
−1/2
x−x 2 ≤
ˆ
x−x 2+ x −x 2
ˆ
satisfying = O(1) and = Ω(n
). As in the lower
bound of [20], ours uses the Shannon-Hartley theorem,
≤ 2 x −x 2
but this proof is simpler because it can use that C is
≤ 2( x − z 2 + z − x 2 )
large. We explain the approach and our modiﬁcation,
≤ 2(C + 1) w 2
and refer the reader to [20] for more details.
√
This section will prove the following theorem:
≤ 2(C + 1) 2αk,
√
Theorem 3: Any C-approximate 2 / 2 recovery
which is less than k for appropriate α = Ω(1/C). This
scheme with failure probability δ < 1/2 requires
is a contradiction, and so x = x, as desired.
ˆ
m = Ω(k log(n/k)/ log C).
Proof of Theorem 3: Combining Lemma 4 with
As in [20], let F ⊂ {S ⊂ [n] | |S| = k} be a family
Lemma 5, Ω(k log(n/k)) = I(S, S ) = O(m log C),
of k-sparse supports such that:
from which m = Ω(k log(n/k)/ log C).
• |S∆S | ≥ k for S = S ∈ F,
B. Upper bound for C
1
• PrS∈F [i ∈ S] = k/n for all i ∈ [n], and
• log |F| = Ω(k log(n/k)).
We ﬁrst focus on recovery of a single heavy coordiA random linear code on [n/k]k with relative distance nate. We then study recovery of 90% of the heavy hitters
for general k. We conclude with recovery of all the heavy
1/2 has these properties (see discussion in [20]).
Let X = {x ∈ {0, ±1}n | supp(x) ∈ F}. Let w ∼ hitters.
k
1) k=1: We observe 2r measurements, for some
N (0, α n In ) be i.i.d. normal with variance αk/n in each
r = O(logC n). Let D = C/16. For i ∈ [r], we choose
coordinate. Consider the following process.
Alice chooses S ∈ F uniformly at random, then x ∈ pairwise independent hash functions hi : [n] → [D] and
X uniformly at random subject to supp(x) = S, then si : [n] → {±1}. We then observe
k
w ∼ N (0, α n In ). She sets y = A(x + w) and sends y
y2i =
hi (j)si (j)xj
y2i+1 =
si (j)xj
to Bob. Bob performs sparse recovery on y to recover
j
j
x ≈ x, rounds to X by x = arg minx∈X x − x 2 ,
ˆ
ˆ
ˆ
and sets S = supp(ˆ). This gives a Markov chain S →
x
procedure I DENTIFY S INGLE(y, h)
x→y→x →S.
αi ← ROUND(y2i /y2i+1 ) for i ∈ [r].
If sparse recovery works for x + w with probability
cj ← |{i ∈ [r] | hi (j) = αi }| for j ∈ [n].
1 − δ over A, then there is a ﬁxed A and random seed
S ← {j ∈ [n] | cj > 5r/8}.
such that sparse recovery works with probability 1 − δ
if |S| = 1 then
over x+w; choose this A and random seed, so that Alice
return j ∈ S
and Bob run deterministic algorithms on their inputs.
else
The next lemma uses the Shannon-Hartley theorem.
1
return ⊥
Lemma 4: (4.1 of [20]) I(S, S ) = O(m log(1 + α )).
end if
We modify Lemma 4.3 of [20] to obtain our main
end procedure
lemma and theorem. It is simpler than [20] since when
C is large, the recovery algorithm cannot try to output
Algorithm III.1: 1-sparse identiﬁcation
many of the Gaussian coordinates in lieu of ﬁnding x.
Lemma 5: I(S, S ) = Ω(k log(n/k)) if α = Ω(1/C).
Deﬁne x−j to equal x over [n] \ {j} and 0 at j.
Proof: The claim is that with probability at least
Lemma 6: Suppose there exists a j ∗ ∈ [n] such that
1/2, x = x, and so S = S . By Fano’s inequality we |xj ∗ | ≥ C x−j ∗ 2 . Then if C is a sufﬁciently large
ˆ
will then have H(S|S ) ≤ 1 + Pr[S = S] log |F|, and constant, we can choose r = O(logC n + log 1/δ) and
By Fano’s inequality and the fact that Z, Z ∈ {0, 1},
if q = Pr[Z = Z] then we have H(Z|Z ) ≤ H(q) + q.
Hence,

3

times its expectation Err2 (x, k)/k, and the algorithm in
Lemma 6 does not fail. All these occur with constant
probability if l = O(k), giving the result.
Corollary 8: With O(k logC (n/k) log(1/δ)) measurements, I DENTIFY M OST returns a set L of size O(k)
such that each j ∈ S has j ∈ L with probability at least
1 − δ.
Proof: We repeat the method of Lemma 7
O(log(1/δ)) times, and take all coordinates that are
listed in more than half the sets Li . This at most doubles
the output size, and by a Chernoff bound each j ∈ S lies
in the output with probability at least 1 − δ.
Corollary 8 gives a good method for ﬁnding the heavy
hitters, but we also need to estimate them.
3) Estimating coordinates: We estimate using CountSketch [8], with R = O(log(1/δ)) hash tables of size
O(k/ ).

D = C/16 so that I DENTIFY S INGLE returns j ∗ with
probability 1 − δ.
Proof: The key claim is that, for αi =
y
ROUND ( y 2i ), we have
2i+1
Pr[αi = hi (j ∗ )] ≤ 1/4.

(1)

Straightforward concentration inequalities then give
the result. To get (1), deﬁne the “noise” βi =
j=j ∗ hi (j)si (j)xj and γi =
j=j ∗ si (j)xj . Then
2
E[γi ] = x−j ∗

2
2

2
E[βi ] ≤ D2 x−j ∗

2
2

.

Thus with probability at least 1 − 2/9 > 3/4, γi ≤
3 x−j ∗ 2 and βi ≤ 3D x−j ∗ 2 . But then
y2i

=

y2i+1
y2i
y2i+1

hi (j ∗ ) + si (j ∗ )βi /xj
hi (j ∗ ) ± 3D/C
=
1 + si (j ∗ )γi /xj
1 ± 3/C

− hi (j ∗ ) ≤

3D/C + 3hi (j ∗ )/C
6D
≤
1 − 3/C
C −2

procedure I DENTIFY M OST(y)
for r ← [R] do
R = O(log(1/δ))
Lr ← {I DENTIFY S INGLE(y (i) ) | i ∈ [k]}
end for
cj ← |{r | j ∈ Lr }| for j ∈ [n].
L ← {j | cj > R/2}
return xL
end procedure
procedure E STIMATE M OST(y, L)
for r ← [R] do
R = O(log(1/δ))
(r)
xj ← s(j)yh(j) .
end for
(r)
xj ← medianr xj
return xL
end procedure

so if D = C/16 < (C − 2)/12, as happens for
sufﬁciently large C, this is less than 1/2 so αi =
y
ROUND ( y 2i ) = hi (j ∗ ), giving (1).
2i+1
Then by a Chernoff bound, Pr[j ∗ ∈ S] = Pr[cj ∗ <
/
5r/8] = e−Ω(r) < δ/2 for r = Ω(log(1/δ)). Suppose
that j ∗ ∈ S. In order for any j = j ∗ to lie in S, it must
have hi (j) = hi (j ∗ ) for at least r/4 different i (because
both match α for 5r/8 coordinates). But Pr[hi (j) =
hi (j ∗ )] = 1/D independently over i, so
Pr[j ∈ S] ≤

r
(1/D)r/4 ≤ (4e/D)r/4 = C −Ω(r)
r/4

as long as C is larger than a ﬁxed constant. But for
r = O(logC (n/δ)) this gives Pr[j ∈ S] < δ/(2n), so a
union bound gives that S = {j} with probability 1 − δ.

Algorithm III.2: Estimating most coordinates well

2) General k, ﬁnding most coordinates: For general
k, we identify a set L of O(k) coordinates by partitioning
the coordinates into O(k) sets of size Θ(n/k) and
applying I DENTIFY S INGLE. To be speciﬁc, we use a
pairwise independent hash function h : [n] → [l] to
partition into l sets.
To analyze how this performs, deﬁne the “error”
Err2 (x, k) =

min

k-sparse x

x−x

Lemma 9: Suppose |L| ≤ O(k). With O( 1 k log( f1δ ))
measurements, E STIMATE M OST returns xL so that for
any j, with probability 1 − δ we have
Err2 (xL − xL , f k) ≤ Err2 (x, k)
Proof: The analysis of Count-Sketch [8] gives
2

Err2 (x, k)] < f δ.
k
Thus with probability 1 − δ, at most f |L| = O(f k) of
2
the j have |xj − xj | > k Err2 (x, k). Rescaling f and
gives the result.
4) Recovering all the heavy hitters:
Lemma 10: The result xL of I DENTIFY M OST followed by E STIMATE M OST satisﬁes
Pr[|xj − xj | >

2
2

and the “heavy hitters”
C2 2
Err (x, k)}.
k
Lemma 7: With O(k logC (n/k)) measurements, this
algorithm returns a set L of size O(k) such that each
j ∈ S has j ∈ L with probability at least 3/4.
Proof: For each coordinate j ∈ S, Lemma 6 shows
it will be recovered as long as three events hold: none
of the other elements of the top k coordinates hash to
the same value as j, the 2 norm of the mass that hashes
2
to the same value as j is no more than a constant factor
2

S = {i ∈ [n] | |xi | >

Err2 (x − xL , f k) ≤ C 2 Err2 (x, k)
with probability 1−δ, and uses O(k logC (n/k) log( f1δ ))
measurements.
Proof: Let T contain the largest k coordinates of x.
By Corollary 8, each j ∈ S has j ∈ L with probability

4

procedure R ECOVER A LL(y)
k ← k, δ ← 1/16, x(0) ← 0
for r ← [R] do
y ← y (r) − A(r) x(r)
L(r) ← I DENTIFY M OST(y , k , δ)
v (r) ← E STIMATE M OST(y , k , δ, L)
x(r+1) ← x(r) + v (r)
Decrease k , , δ per Theorem 11
end for
end procedure

ACKNOWLEDGEMENTS
E. Price is supported in part by an NSF Graduate
Research Fellowship.
R EFERENCES

Algorithm III.3: Recovering all coordinates
1 − δf , so with probability 1 − δ we have |S \ L| ≤ f k.
Then
2
2
2
xT \S 2

Err2 (x − xL , 2f k) ≤ Err2 (xL − xL , f k) + x[n]\(S∪L)
≤ Err2 (x, k) + x[n]\T
2

2
2

+

2

≤ ( + 1 + C )Err (x, k)
≤ 2C 2 Err2 (x, k)
with probability 1 − δ by Lemma 9. Rescale f , δ, and
C to get the result.
Theorem 11: R ECOVER A LL achieves C-approximate
/ 2 sparse recovery with O(k + (log∗ k)k logC (n/k))
2
measurements and 3/4 success probability.
∗
Proof: We will achieve DO(log k) -approximate recovery using O(k logD (n/k)) measurements. Substituting log C = log D log∗ k gives the result.
1
Deﬁne δi = 8·2i . Let f0 = 1/16 and fi+1 =
i
2−1/(4 fi ) . Let ki = k j<i fj . Then for R = O(log∗ k),
kR < 1.
We set x(0) = 0, and iterate I DENTIFY M OST and
E STIMATE M OST on x − x(r) in each round r with
δr , fr , kr , D as parameters, getting update v (r) and setting x(r+1) = x(r) + v (r) .
Then Lemma 10 telescopes, giving
Err2 (x − x(r) , kr ) ≤ D2r Err2 (x, k)
2

so x − x(R) 2 ≤ D2R Err2 (x, k), which is DO(log
approximate recovery.
The total number of measurements is
R

ki logD (n/ki ) log(
i=0
R

=

k(
i=0

j<i

R

=

k
i=0

fj ) logD (

∗

k)

-

1
)
δi fi

n
3+i
(1/fj )) i
k j<i
4 fi−1

3+i
n
(
fj ) logD (
(1/fj ))
4i j<i−1
k j<i

=O(k logD
=O(k logD

n
k
)+
k
log D
n
).
k

R

i=0

3+i
1
(
fj )
4i j<i−1
4j fj−1
j<i

5

[1] S. Aeron, V. Saligrama, and M. Zhao. Information theoretic
bounds for compressed sensing. Information Theory, IEEE
Transactions on, 56(10):5111–5130, 2010.
[2] Noga Alon, Yossi Matias, and Mario Szegedy. The Space
Complexity of Approximating the Frequency Moments. JCSS,
58(1):137–147, 1999.
[3] Alexandr Andoni, Robert Krauthgamer, and Krzysztof Onak.
Streaming algorithms via precision sampling. In FOCS, pages
363–372, 2011.
[4] Khanh Do Ba, Piotr Indyk, Eric Price, and David P. Woodruff.
Lower bounds for sparse recovery. In SODA, pages 1190–1197,
2010.
[5] Ziv Bar-Yossef, T. S. Jayram, Ravi Kumar, and D. Sivakumar. An
information statistics approach to data stream and communication
complexity. JCSS, 68(4):702–732, 2004.
[6] E.J. Cand` s and M.A. Davenport. How well can we estimate a
e
sparse vector? Arxiv preprint arXiv:1104.5246, 2011.
[7] E.J. Cand` s, J. Romberg, and T. Tao. Robust uncertainty
e
principles: Exact signal reconstruction from highly incomplete
frequency information. Information Theory, IEEE Transactions
on, 52(2):489–509, 2006.
[8] Moses Charikar, Kevin Chen, and Martin Farach-Colton. Finding
frequent items in data streams. In ICALP, pages 693–703, 2002.
[9] Jon Feldman, S. Muthukrishnan, Anastasios Sidiropoulos, Clifford Stein, and Zoya Svitkina. On distributing symmetric
streaming computations. ACM Transactions on Algorithms, 6(4),
2010.
[10] Alyson K. Fletcher, Sundeep Rangan, and Vivek K. Goyal.
Necessary and sufﬁcient conditions for sparsity pattern recovery.
IEEE Transactions on Information Theory, 55(12):5758–5772,
2009.
[11] Sumit Ganguly. Polynomial estimators for high frequency moments. CoRR, abs/1104.4552, 2011.
[12] Anna C. Gilbert, Yi Li, Ely Porat, and Martin J. Strauss. Approximate sparse recovery: optimizing time and measurements.
In STOC, pages 475–484, 2010.
[13] Piotr Indyk, Eric Price, and David P. Woodruff. On the power of
adaptivity in sparse recovery. In FOCS, pages 285–294, 2011.
[14] MA Iwen and AH Tewﬁk. Adaptive group testing strategies for
target detection and localization in noisy environments. IMA
Preprint Series, (2311), 2010.
[15] T. S. Jayram. Unpublished manuscript. 2002.
[16] T. S. Jayram. Hellinger strikes back: A note on the multi-party
information complexity of and. In APPROX-RANDOM, pages
562–573, 2009.
[17] Ravi Kumar and Rina Panigrahy. On ﬁnding frequent elements
in a data stream. In APPROX-RANDOM, pages 584–595, 2007.
[18] Samuel Madden, Michael J. Franklin, Joseph M. Hellerstein, and
Wei Hong. Tag: A tiny aggregation service for ad-hoc sensor
networks. In OSDI, 2002.
[19] Rajeev Motwani and Sergei Vassilvitskii. Distinct value estimators in power law distributions. ANALCO, 2006.
[20] Eric Price and David P. Woodruff. (1 + eps)-approximate sparse
recovery. In FOCS, pages 295–304, 2011.
[21] Martin J. Wainwright. Information-theoretic limits on sparsity
recovery in the high-dimensional and noisy setting. IEEE
Transactions on Information Theory, 55(12):5728–5741, 2009.
[22] David P. Woodruff and Qin Zhang. Tight bounds for distributed
functional monitoring. CoRR, abs/1112.5153, 2011.

